// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/schema.json (45.881kB)

package v1alpha5

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x6d\x93\xdb\x36\x92\xf0\xf7\xfc\x0a\x94\xb2\xb5\x1b\x57\x89\xa3\x75\x9e\x67\x93\x2b\x6f\x6e\xea\xe4\x19\xc7\x9e\x4b\x3c\x33\x67\x39\x49\xdd\x8e\x52\x65\x88\x6c\x49\xd8\x21\x01\x06\x00\x67\x2c\x6f\xf2\xdf\xaf\xf0\x42\x8a\x2f\x20\x45\x50\x1c\x67\x7c\x97\x6f\x12\x49\x34\x1a\x8d\x7e\x43\xa3\xd1\xf8\xd7\x67\x08\x4d\xfe\xc4\x61\x3d\x79\x86\x26\x9f\xcf\x22\x58\x13\x4a\x24\x61\x54\xcc\xce\xe2\x4c\x48\xe0\x67\x8c\xae\xc9\x66\x32\x55\x1f\xca\x5d\x0a\xea\x43\xb6\xfa\x27\x84\xd2\x3c\xfb\x93\x08\xb7\x90\x60\xf5\x78\x2b\x65\xfa\x6c\x36\xfb\xa7\x60\x34\x30\x4f\x03\xc6\x37\xb3\x88\xe3\xb5\x0c\xfe\xfa\xf5\xcc\x3c\xfb\xdc\xb4\x2b\x75\x35\x79\x86\x14\x1e\x08\x4d\xf2\x3e\x63\x96\x45\x3f\x61\x19\x6e\x8b\x57\x08\x4d\x52\xce\x52\xe0\x92\x80\x28\x3d\x45\x68\x12\x9a\x46\xdf\xb3\xcd\x86\xd0\x4d\xe5\xdd\xc1\xc1\x15\x1d\xe5\xad\x8b\xa6\xbf\xd9\x5f\xbf\x4d\xf7\xfd\xc3\x1a\x38\x87\xe8\x8a\x47\xc0\x27\xcf\xd0\x4d\x2b\x0e\xf6\xc5\xcf\x45\x5b\x1c\x45\xba\x67\x1c\x5f\x97\x47\xb1\xc6\xb1\x80\xe2\xa3\x08\x44\xc8\x49\xaa\xbe\x53\x18\x87\x8c\x4a\x4c\xa8\x40\xa1\x9e\x02\x94\x62\x8e\x13\x90\xc0\x05\xe2\x10\x63\x09\x11\x92\x0c\x95\x68\x55\x00\x7a\x1f\x10\x2a\x21\x8e\xc9\x3f\x83\xad\x4c\xe2\xe0\x58\xc0\x9f\x95\x08\xd1\x9c\xa3\x26\xe1\x5b\xa7\x0a\x28\x5e\xc5\xf0\x76\x97\xd6\x5e\x20\x34\x21\x12\x92\xfa\xc3\x12\xcb\x09\xc9\x55\x1f\xd3\xea\xdb\x08\xd6\x38\x8b\xa5\xfa\x60\x52\x7a\xf3\x5b\xf9\xb3\x02\x04\xe6\x1c\xef\x2a\x10\xea\x14\xd7\x88\x21\xb6\x46\xb1\x19\x92\x22\x83\x41\x19\x7d\x21\x00\xd0\xcd\x7e\xd0\x28\x62\xa1\xf8\xf9\x8b\x59\x26\xf0\x06\x66\xa1\x7a\x7e\xaf\x9e\x07\x96\x13\x02\x0b\x62\xf6\xb9\x7d\x60\x68\x1d\xc0\x7b\x9c\xa4\x31\x88\x27\x4f\x4e\xd0\x5b\x86\xc2\x2d\x63\x02\xd0\x9a\xb3\xe4\x19\x7a\x87\x53\xf2\x6e\x8a\xde\xe1\x2c\x22\xd2\xfc\x90\x5b\xa0\x92\x84\x58\x32\xae\x1e\xa8\x99\xe3\x2c\x8e\x81\xbf\xc6\x14\x6f\x40\x3f\x54\x62\x15\x65\x31\xf0\x77\xd5\xc1\x1d\xe0\x82\x43\x83\xfd\x06\xa3\x2d\x87\xf5\xbf\x2f\x27\x83\x07\xb9\x9c\x9c\xd6\x28\xf6\xcd\x0c\x9f\x3a\x46\xfe\x4d\xc8\x22\x38\xc5\x29\xf9\x66\xa6\x7f\x4d\xf3\x27\x8a\x12\x8d\x67\x25\xa2\xd4\xde\x35\xe8\x53\x7b\x5f\x90\xca\x3e\x1f\x2a\xee\x65\x3e\x1e\x53\xd6\x81\x77\xcb\xa4\x25\x73\x3e\x65\xbe\x12\xef\x0b\xde\x29\xf7\xc6\x1e\x94\x84\x9d\xc3\x2f\x19\xe1\x10\x55\x49\x94\x80\xc4\x11\x96\xb8\xc4\x93\x93\x5b\x42\xa3\xf2\x7f\x9c\x92\x1f\x81\x0b\x85\x64\x83\x8a\x6d\x2a\xa4\xd4\xa6\xa6\x41\x3a\x54\x45\x45\x51\x54\x5e\x00\xcd\x92\x0a\xe2\xe6\xe9\xad\x08\x65\x7c\x42\xd8\xec\xee\x29\x8e\xd3\x2d\xfe\x5b\x59\xbd\xfc\xfc\x99\x43\xd1\x4c\xf0\x1d\x26\x31\x5e\x91\x98\xc8\xdd\x3f\x18\xfd\xfd\x34\x9c\x13\xbb\xd0\x65\x52\x91\x87\x81\xec\x54\x9c\x8b\x9a\x72\x14\x59\x9a\x32\x2e\xfb\xe8\xc7\x27\x5e\x4a\x6b\xe1\xa9\x98\xaa\x1a\xc8\xa2\xa5\x94\x90\x9b\x4a\x6b\xcc\x37\x58\xc2\x35\x67\x6b\x12\xf7\x9e\x41\x37\x05\xbf\xad\xc0\x3a\x6a\xf2\x36\x44\xf6\x9b\xb5\x97\x44\xba\x21\x10\x9c\x78\xcd\xfb\xc5\xfc\xb5\x1b\x90\x16\xe1\x87\x13\xbc\xaa\x92\x39\x28\x73\x89\xd6\xf2\xd1\x25\x8b\xe0\x25\x67\x59\x7a\xdc\x8c\xbd\xae\x41\x1b\xc3\xa5\xd0\x92\xa1\x20\x6e\x34\x7e\x48\x73\x6c\x21\x17\x1a\x7f\x42\x37\x01\x2d\xbe\x78\x82\x30\x8d\xd0\x8d\x1d\x19\xda\xbf\x28\x1a\xc1\xad\x08\xec\x6b\xdd\x4e\x8c\x21\x43\x0e\x4c\x96\x93\xd3\x3a\xe2\x4a\x72\x34\x7e\x8d\xf6\x4d\xa4\x96\x93\xd3\xe6\x20\xda\x45\xaf\xb0\x17\x3e\x6c\xfa\x1a\x24\x76\x83\xa3\xe3\xb0\xc4\xa8\xbc\xf0\x2d\xe3\x88\xd0\x35\xe3\x09\x56\x8f\x34\x21\x73\x57\x09\x69\xff\xd2\x31\xdb\x2e\x16\xf1\x9a\xee\x83\xbd\xf6\xe4\x85\x3e\x93\x98\x72\x72\x87\x25\xd8\xd9\xe9\x37\x95\xd7\xd5\x36\x5d\x04\xc4\x71\xcc\xee\xf3\x65\x4b\xa6\x94\x0d\xc2\x68\x9d\xc5\xf1\x2e\xb0\x3d\x17\x2e\x0c\xa1\xe8\x7e\x4b\xc2\x2d\xa2\x4c\xb3\x1f\xda\x62\x81\x58\x26\x57\x2c\xa3\x11\x52\x04\xe3\x14\x24\xc2\x61\x08\x42\x4c\x35\x51\x72\x10\xe6\x99\xf2\x87\xe6\x3f\x2d\x90\x00\x7e\x47\x42\x10\x88\x08\xeb\x1e\x47\xe8\x8e\x60\xf4\xe3\xf5\x19\x02\x1a\xa5\x8c\x50\x29\xbc\x26\xe4\xf1\x8e\xc2\x39\xa7\x02\x42\x0e\x52\xbc\xa0\x21\xdf\xe5\x63\xe8\x31\xad\x8b\x46\x33\x37\x74\x89\x65\xd6\x90\xd1\x4e\xa1\x5f\x98\x26\x4e\x70\x77\x69\xe8\x05\xeb\xc7\xeb\xb3\xa1\x6b\x80\x0e\x67\xd6\xa5\xd6\x6a\xc6\xb8\x86\x73\xbb\x0c\xb9\x75\x5a\xa7\x0d\xec\x70\x68\x3a\xfd\x55\xb7\xbb\xd8\xc9\x0a\xcd\x99\xac\xb9\x2d\xa3\xac\x8e\x30\x12\x44\xe9\x2b\x2b\x33\x53\xc5\xd5\x2b\x40\x1c\xd2\x18\x87\x10\xa1\x7b\x22\xb7\xc8\x12\x0c\xcd\xaf\x2f\x7a\xaf\x8b\xbc\x01\xbb\x56\x44\x2f\x0a\xf9\xe9\x11\x01\xb1\xb3\x3b\xd7\xd2\xd9\xe6\x48\xad\x18\x8b\x01\xb7\x48\x4c\x9a\xad\x62\x12\xfa\x02\xf0\x62\xed\x2a\x92\x6d\x7d\x8f\x32\xb5\x5b\x16\x47\xa2\xd0\x77\x38\x25\x5a\x55\x01\x2f\xb4\x52\xae\xc8\x4a\x26\xac\xf7\xf4\x0e\x02\xee\x9a\x62\xe5\x0e\xf7\x98\xdc\x5c\xda\x58\xf4\xe2\x3d\x84\x99\x02\xf7\x86\xc5\x30\x7f\x73\x79\xc0\x65\xee\x5c\x8c\xd4\xa0\x5d\x03\x4f\x88\x50\x7a\x46\x3c\x57\x66\x00\xf3\xdd\x10\xe8\xd6\x22\xcc\xc3\x90\x65\x55\xde\x45\xde\x5e\xd2\x9e\x4a\x8b\x0a\xd4\xa3\x16\x3d\x16\xc1\x23\x08\x58\x82\x30\x12\xd1\x94\x3e\xb8\xba\x38\x3f\x7b\x20\xb9\xab\x0d\xb9\xff\x50\x0e\x73\x4d\x0d\x9e\x07\x6f\xb9\x86\xdf\xc1\x47\x23\x6a\x05\x1c\xc7\xe8\x62\xfe\x1a\x61\x29\x39\x59\x65\xd2\x84\x2b\x71\x2e\xd0\x9e\x6a\xe0\x10\xb4\x16\xb9\xaf\x71\x74\x0f\x2d\x80\x29\x65\x12\x57\x77\x36\xba\x69\xf1\x70\x11\xa1\xd2\x4e\x8d\x0b\xc0\xbf\x7e\x73\xf3\x39\x96\x12\x87\xdb\x6b\x16\x93\xb0\x21\x27\x6e\x15\x70\x41\x63\x42\xe1\x9c\x85\x59\x02\xb4\xd1\xa1\x6b\x3a\x50\xaa\xc1\xa3\xc8\xb6\x51\xb6\xd7\xf4\xab\x7e\xc9\x2d\x11\xb9\xd7\xaa\xb4\xb4\x26\xbe\x8f\x97\x3d\xbc\x97\x83\x14\x99\xbf\xb9\x7c\x5c\xc1\xbd\x18\xaf\x20\xfe\x64\x99\x8d\xe2\x04\x86\x86\x94\x5a\x01\x8a\x14\x87\xe3\x42\x4d\xbd\x4d\x88\x1f\xfc\x01\x2b\xa1\x86\x7a\xea\x5a\x1a\x49\xbc\xf9\xb4\x58\xc4\xcb\x74\x6a\x26\x72\xf2\x40\x53\x4e\xa6\x6e\x5d\xdd\x25\xed\x6d\xba\xf1\x00\x7f\x74\x2e\x8f\xf4\x84\x8c\x69\x2e\xa9\xb6\x6f\x35\x75\x86\xf2\x15\xa8\x8e\x0e\xe4\x41\x87\x21\x7e\xb4\x3f\xfc\x5e\x26\x75\x51\xe7\xfb\x56\xc3\xca\x3d\x5d\x41\x2f\x06\xca\x81\x8f\x38\x21\x66\xca\x95\x97\x21\xb7\xe0\xa2\x9d\xe7\x04\x1c\x86\xe7\x22\xb8\x8e\x91\x1e\xdc\xae\xab\xcb\x0f\x87\x8d\xd7\xb6\xdc\xe8\x4a\xdc\x22\x30\x26\xc8\x4f\x4e\x03\x96\x83\x44\x43\xf6\x3c\x2b\x3c\xf4\x23\x8e\x49\x84\xee\x30\x27\x98\x4a\x81\x30\x87\x67\xe8\xdd\x72\xf2\xf4\xe4\xe9\xff\x5f\x4e\xde\x4d\xed\xef\xbf\x95\x7e\x7f\x55\xfa\xfd\xf5\x72\xf2\x0e\x7d\x61\x11\x7d\x72\xe2\xe5\x8a\xb9\x7a\x36\xfb\xf1\x7f\xfe\x25\x63\xf2\xef\x0a\x05\xf3\xab\xb6\x5d\x5f\xbc\xfe\x5b\xf7\xeb\xaf\xba\x5f\x7f\x5d\x79\xdd\x3a\x8a\xd2\x2c\xa8\x46\x7d\xb6\xab\x14\xe6\x75\x6e\x50\xe8\x3a\x9e\x7d\xe5\x78\xf6\x75\xcb\x0e\xd7\x51\x96\xcf\x0a\x8e\x83\x77\x1e\xc4\xf6\x14\xc9\x44\x1b\xa0\xc0\x71\x5c\x8a\x5d\xfb\x07\x6c\x7a\x01\x73\x29\xb9\xcb\xf9\xdb\x3e\x16\x44\xad\x79\xef\x71\xff\xa5\xbf\xd7\x44\xe4\xc0\x47\xb4\x20\x97\xf3\xb7\xc8\x82\xad\x9a\x56\xc4\xd2\xaa\xd3\xd2\xcf\x82\x1c\x86\xe7\x22\x6e\x7f\x0b\x8d\xf9\xb8\x1a\x3b\x54\x9d\xac\x49\x88\x25\xcc\x33\xb9\x65\x9c\xc8\xdd\xb9\x63\x93\xb0\xdf\xea\xeb\xa0\x6e\xee\x58\x62\xe5\x11\xc3\xb1\x5d\xfe\xf0\xf6\x72\x14\xcb\xe9\xc5\xa9\xc5\x60\xfa\x90\x7a\x5a\x9d\x5e\x27\xfa\xa3\xb1\x3c\xe2\x80\xa3\x80\xd1\x78\x37\x4a\xd4\xa7\x07\x38\x27\xc3\x67\x2b\x0a\x5e\xf1\xfc\x61\x6e\x45\xcb\x9e\x33\xc8\x7b\xc6\x6f\x1f\xcc\x95\x30\x41\xfc\x47\x8f\xb1\x17\x47\xe7\xd3\xd0\x1c\xe6\x88\xda\xb8\xd8\x5a\xa5\x11\x32\xd0\x91\xb0\x9c\xe2\xa7\x86\x3b\x00\xb9\xd8\xf1\xc7\xeb\xb3\x5e\xca\x37\x93\x6c\x1e\xc7\x4c\x89\xf0\xc5\xf5\xdd\x57\x83\x76\x97\x42\x12\xf5\xdc\xb7\xdf\x10\xb9\xcd\x56\x27\x21\x4b\x7e\xbd\x07\x7c\x07\x8a\x03\xc4\xaf\x26\x73\xee\xd7\xf4\x76\xf3\x6b\x26\x49\x2c\x7e\x25\x29\x05\x79\x72\x71\x7d\x09\x2d\x91\xb5\xb0\x7d\x17\xad\xa3\xf7\xc6\xde\x9b\x5b\x6b\xbf\x97\x1c\x9f\x5d\x9c\xbf\x39\x6e\x7f\xe3\x98\xa1\x0e\x4f\x17\x59\x33\x8e\xf6\xcc\x8a\xd4\x30\x10\x16\x82\x85\xc4\x04\x2c\xa6\x08\x4e\x36\x27\x48\x32\x94\x09\x30\x5b\x95\x02\x52\xcc\x15\x67\xe9\x8f\x15\x80\x9c\xd5\x2c\x7f\x21\x05\x93\xee\x10\x8e\x82\x2d\x6b\xb2\x6f\x1f\x16\xfe\x88\x68\x39\xe7\x94\x0c\xce\x3f\x73\x82\xa3\xb8\x67\x6e\x5d\xc9\xd3\xec\x50\xab\x66\x6f\xd4\x87\xe5\x3e\x4e\x88\x58\x40\x98\x29\x93\x6e\x92\x99\x46\x75\x62\xb6\x98\x9b\xf4\x83\xc5\xf0\x3e\x1a\x1c\x96\x72\x08\x34\xf5\x21\x42\xa6\x07\x93\x00\xb3\x78\xe9\xcd\xac\x7d\x41\x1d\x1e\x69\xc3\x2d\x38\xcc\x2e\x0b\x97\x84\xd5\x90\xcc\x85\x00\x73\x40\x40\xe4\x16\x78\x6e\x15\x4a\x92\xa2\x46\xd2\x14\xa8\x7d\x52\xd6\x14\xc9\x2d\x08\xd0\x40\x6e\x61\x07\x11\x5a\xed\xd0\xfc\x1f\xba\x5d\xc8\xe8\x1d\x50\x02\xb4\x12\x0e\x3d\x4c\xbd\x8f\x8a\xd8\x40\xcb\x4f\x2a\x49\x38\xda\x7c\xb5\xb2\xbd\x63\x2e\xdd\xc6\xa2\x07\x7b\x4f\x3b\x0c\x6f\x4d\xbd\x74\x19\xbb\x4e\x05\x32\xa2\xef\xb2\x89\xd9\x0a\xc7\x56\xb3\x6a\xc7\x03\xc7\x31\x0a\xb7\x24\xce\x5d\x90\x59\x55\x27\x7b\xba\x34\xfe\xf0\x2b\x9e\x4e\x2d\x59\xba\x5f\xb8\xb2\x41\x9e\xf1\x82\x93\x95\x11\xda\x80\xab\xc5\x11\xa5\x06\x49\xbf\x18\x58\x2f\x18\x87\xf7\xa0\xbc\x33\x4b\xba\xc6\x75\x31\x7f\x8d\x38\x8b\xe1\x2f\x02\xcd\xdf\x5c\xe6\x16\x5b\x32\xc4\x33\x8a\x52\x16\x09\xc4\xa8\x64\x39\xce\x7e\xe3\x3d\x0a\xf6\x61\x4d\x0c\x31\x84\x92\xf1\x31\x33\xf4\x17\x16\xe6\x18\xae\x9b\x31\x37\x7a\xc6\x79\x16\x83\x4e\xc3\x34\x38\x23\xe5\x3b\xc6\x0c\xeb\xf3\x36\xf9\x71\xa4\x23\xe8\x7c\x5c\x4f\x3e\x66\xee\x31\x1c\xd0\x33\xc9\xb0\xb9\x10\x89\x2d\xcb\xe2\x28\x67\xac\x88\x21\x6a\xd6\xa1\x48\x67\xef\xe9\xdd\x7e\x2b\x76\x86\x22\x10\x15\x34\x39\x41\x17\x6b\x44\x19\xd5\x92\x78\x47\x22\x88\xa6\x5a\x61\xe5\x16\x4f\x19\x27\xd5\x30\x8f\x3f\xde\x93\x38\x46\x2b\x50\x7d\x45\x7e\x13\xf4\x48\x50\x76\xce\xf4\x23\xde\x10\xa9\xd0\xf0\x07\x61\xce\xa7\x49\xbc\xd1\x43\x9c\xff\xb4\x40\x1c\x04\xcb\x78\x08\x7e\x8b\x17\x0f\x48\x0f\xb2\x2d\xed\x52\xe0\x4e\xbd\xd6\xed\xaa\x8c\x17\xbe\x37\xfa\x43\x58\x96\x93\x92\xd0\x8d\xd0\x2c\x53\xd1\x1a\x85\x2a\x71\x2b\xaa\x7e\x4a\x6a\x60\x27\x1d\x7e\x42\xa1\xb2\x7b\xf9\x0b\x26\x1d\xa0\xb7\xd3\xf0\xa8\x93\x6a\x2a\xe4\xfd\x2e\x5b\xe9\x73\x00\x20\x90\x46\x1a\x15\x6c\x54\xb2\xbb\x35\xa3\xe0\xa7\xc4\x46\xe8\xa1\x67\x22\xd0\x80\xbc\x9d\x36\x4c\x0b\x70\xfa\x90\xb1\x3d\x48\x31\x22\x25\x86\xc1\x1f\x21\x7c\xdf\x95\xdb\x32\xaa\x52\x38\xc2\x77\xe9\xab\x12\x86\x3a\x2d\xb9\x42\x78\x49\x7a\xe5\x64\xae\x18\x93\x42\x72\x9c\x36\x57\x18\xa8\xdd\x41\xcc\x3f\xee\x62\xb8\x9b\x0b\x2a\x24\x8e\x63\x73\x8c\xe7\xbf\x32\x12\xde\x0a\x89\xb9\xcc\x5d\xfc\xe2\x20\xd7\x86\x48\x96\x8a\xd9\xe7\xa4\xf8\x3e\xc0\xc1\x2f\xc5\xf7\x81\xfd\x3e\x20\x34\xd8\xb1\x8c\xe7\x47\x59\xfd\x0e\x7b\x35\xce\x72\x0d\xec\x75\x39\x39\x3d\x30\xae\xf6\x43\x60\x6a\x06\x70\x55\x2b\x77\xd0\xf8\x2a\xff\xba\x93\xc8\x2f\x4c\x61\x82\x37\x90\xb2\x2e\x82\xae\xe3\xec\xfd\xf8\x04\x53\x50\x97\x93\xd3\x12\x0e\xed\x83\xe7\x90\xb2\x7e\x03\x57\x70\x3e\xe5\x41\x7b\xa9\x2c\x5e\x1d\xec\x9e\x47\xa6\x1d\x32\x3a\x8a\x2e\xb3\xc7\x57\x75\x34\xc2\xb5\xe3\x5d\xae\x7f\xa0\x4f\xc6\x29\x86\x7f\x49\xe4\x55\xaa\x96\xa8\xfb\x8d\x42\x1d\xd3\x88\x09\xbd\x55\xef\x89\xc9\x23\x56\xdf\x21\x35\x34\x41\x24\xe3\xbb\x13\x74\xf3\x52\x13\x12\xbd\xcc\x48\xa4\x24\xdf\xd0\xb5\x24\x6f\xa5\xa3\xba\x87\x26\xe9\xa3\x22\x5e\xe2\x88\x26\xce\xcb\xc9\x69\x79\x5c\x7b\x3e\xc8\x95\x70\x2d\xf9\xbb\xa4\x8f\xdb\xdc\xa5\x3d\xd7\xb4\xf8\x39\x6d\x29\x8e\x3b\x84\xf9\x8a\x48\x8e\xf9\x0e\xfd\xe7\xe2\xea\x72\xf6\xdf\xf3\xd7\xdf\x17\xd9\xdd\x62\x8a\x44\x16\x6e\x11\x16\x48\x47\xf3\x1c\xe5\x2e\x18\xd7\x99\x73\x3a\x2d\x9c\x80\xef\xce\xdd\x43\x22\xe0\xf0\x90\x72\x02\x37\x4e\xa6\x8f\x1c\x20\xc3\x09\xf9\x16\x27\x24\xf6\xcc\x68\xae\x1e\x2b\x4f\x21\x24\xeb\x1d\xba\x09\x33\x21\x59\x82\xe6\xaf\x2f\x4a\x05\x72\xf4\xb3\x00\x27\x24\xb0\x45\x18\x66\x4f\xa6\x68\xa9\x43\xa7\x81\x10\xc9\x72\x92\xff\x53\xbf\x18\x47\x4b\x9d\x30\x4b\xc2\xe5\xc4\x4b\xb3\xe5\x48\x34\x6b\x44\x34\x11\x58\x4e\x4e\x4b\xa8\x2a\xae\x9e\x22\x93\x29\x96\x63\x65\xfe\x95\x9f\xe6\x4f\x18\xb7\x0f\x0d\x96\xe6\xb7\x67\x10\xeb\xd1\x14\x0c\xe9\x9a\xd5\xef\x49\x42\xa4\x39\x98\x6e\xdc\x34\x4d\x60\x12\xa2\xf9\x3f\xf6\xb3\xab\x28\x23\x42\x1c\xeb\x52\x40\x1f\x18\x85\x00\xdf\x63\x0e\x81\xa1\xa3\x79\xe1\x67\xa1\x4c\xb7\x8d\x59\xec\xd3\x91\x3d\xaa\xde\xc0\xb6\xdd\x66\x47\x20\x94\x00\x9d\xe1\x14\x87\x44\xb6\xca\x80\x42\x78\x03\xfc\xc8\x02\x1b\x85\x0c\xb7\x96\xd8\xd0\x46\x98\x86\xba\xbc\xd0\xa8\x3b\x75\x8f\x7a\x45\x7b\x70\x75\x98\xe0\xf7\x0b\xf2\xa1\x95\x22\x9d\xb3\x93\x10\x3a\xb8\xed\xe8\x99\xcd\x76\x1f\xc4\x26\xcd\x38\x4a\xd6\xd5\x13\x35\xba\xe4\xd3\xfa\x67\x37\xf9\xe6\x0a\x2d\xa0\x16\xd2\x79\x97\x86\xc1\xfe\xf1\xec\xf3\x4c\x40\x5e\x68\x20\xb0\xb1\xa5\x60\xcd\x78\xa0\x59\x14\xc7\xfb\xaa\x0f\x4f\x74\x4c\xb1\xf8\xeb\x25\xc0\x16\xaf\x86\x04\x0f\x46\x66\x39\x39\x6d\x8e\x51\xd7\x23\xe9\x40\xb2\x34\x17\xda\x49\x6c\x09\x78\x8b\x9e\x45\x91\x0a\xd9\x5d\x2c\x5e\x7d\x72\x11\xd5\xc3\x29\xe6\x2c\xce\x12\xe8\x23\x27\x5d\x0c\xb9\x21\x1b\xbc\xda\x49\xcf\xb8\x6c\x4b\xab\x3d\xd6\xff\xf6\xd7\x23\x82\x25\x95\xcd\xda\xc2\xd5\x69\x53\xb9\x9d\x26\xba\xc3\x6c\x38\xf4\x8d\x43\x7d\xb9\x09\x5e\xe3\xc6\xa6\xd2\xee\xd4\x1f\x75\x06\xac\xd9\xa5\x86\x1b\x58\x23\x3e\x87\x94\x83\x00\x9d\x9b\x4f\xd1\x8b\xef\x16\x41\xa3\x70\x0f\x7a\x7b\x75\x7e\x85\x74\x22\x7f\xb1\xe7\x4f\x13\x9c\xa6\x10\xa1\x35\x01\xe3\x1a\x47\x48\x6e\x39\xbb\x57\x40\x80\x73\xd6\x3f\x55\xf3\xc1\x10\xa8\x3a\xd1\x20\x39\x09\xc5\x19\x8b\x63\x08\x65\xf5\x30\x45\x8b\x17\xbd\xe1\x98\x66\x31\xe6\x6a\x7a\x7b\x3b\xd3\xe5\x46\x63\xda\x8d\xc4\xe0\xff\xfb\xa7\x15\x79\xc9\x5f\x99\x1a\x8e\xc1\x8c\xb2\xc6\xd7\x5b\x09\xab\x9d\xd9\x5f\x30\x5e\x60\x51\xd1\x43\xd7\x55\xd2\xe5\x4c\xf6\x25\x90\x4c\xed\xce\xad\x94\xa9\x78\x36\x9b\xa9\x7f\x27\xf8\x5e\x9c\xe0\x04\x7f\x60\xf4\x24\x64\xc9\x6c\xfe\xd3\x42\xd7\x8d\xfb\x36\x6f\x33\x53\x6b\x6d\x21\x67\x3f\x08\xe0\x7a\x15\x3c\xc3\xf7\x22\xd8\xb3\x40\x80\x45\x60\xc7\x14\x16\x0c\x76\xa2\x98\xbd\xff\x8a\xff\xd0\x30\xf6\xc6\xf4\x23\xa1\xae\x56\x48\x4d\xca\x35\xd7\xff\x79\xfe\x6f\x8f\x40\xec\xc7\xcf\x2f\x1d\x23\x5f\xd0\x8b\xe3\x1d\x19\x49\xa3\x70\xb9\x89\x40\x5c\x9c\x6b\x45\x77\x76\x71\xfe\xc6\x33\x76\x51\x6e\x59\x9d\xbe\x07\x0c\x2b\x8c\xaa\x01\xff\x08\x53\xfc\x1e\x61\x0a\xb1\xe9\xb2\x9c\xa8\xc3\x06\xb5\x94\x59\x6c\x40\xf3\xb6\x40\x7f\x44\x51\x7a\xb1\xd9\x47\x8d\xa2\xac\x98\x94\x31\x70\x16\xde\x42\xcf\x8c\xea\x42\xef\x3c\x2f\x37\xed\x14\xde\xc5\xab\x22\x18\x0e\x02\x09\xb1\xcd\x2b\x38\x99\xec\x17\x22\x06\x2e\x57\xbd\x00\x3b\x87\x1f\xc6\x58\x08\x12\x7e\xcf\x70\xf4\x1c\xc7\x6a\x31\xc1\x2f\x71\xf2\x38\xd9\x71\x6e\xd3\xf5\x01\xe9\xad\xd6\x95\xc5\x57\x98\x1c\x5e\xc5\x06\x85\xff\xe1\x4f\x4a\x6f\xe0\x2d\xe4\xd4\x9b\x17\xe7\x97\x8b\x23\x74\xfd\xcd\x99\x51\x9c\x38\x8a\x38\x08\xd1\x1a\x11\xb1\x5a\x37\x2f\x1e\x1c\x51\x11\xd8\x26\x4f\x4c\x9a\x8a\x62\x82\xf3\xcb\x05\x8a\x19\xbb\xad\x56\xd8\x1b\xb0\xd9\xd6\xbf\xf7\xe5\xe4\xb4\x3a\x02\x1d\xef\x38\x8c\xd1\xe1\x73\x95\x69\x76\xc6\x21\x22\xcd\x2c\x3f\x0f\xea\x96\xe4\xe5\xe6\xed\xff\x43\x3f\xd0\x58\xa9\x1b\x88\x0e\x7a\xd6\x2f\xce\xbe\x6c\xfa\xa4\xab\x8c\x0b\x89\x57\x31\x04\x29\x70\xed\x70\xd2\x10\x82\x7c\x61\x2e\x82\x2c\x07\x1f\x24\x2c\x02\xe3\x59\x4f\xd1\x9d\x3e\x5a\xae\x0f\xf8\x29\x8a\xbc\x0d\x14\xfe\xa8\x68\xe5\x35\x51\xa5\xf1\xf4\xf6\xb4\xc7\x1a\xca\x72\x72\x5a\x26\xa1\xb1\xf2\x87\x06\xe7\x9c\xda\x31\x82\xd9\x11\x11\x0a\xfd\x8b\xd7\xe7\x8b\xbb\xa7\xc7\x44\x27\xad\x13\x29\x90\xfa\x01\x42\x0a\x53\x74\x09\xf6\x45\x43\xf2\x0a\x16\x36\x8d\x48\x77\xf9\x25\x92\xec\x16\xa8\xdf\xec\x8d\xd9\xd5\x5e\x7e\xb4\x43\xee\xa4\x11\xac\xc4\x55\x2a\x49\x42\x3e\x40\xeb\x02\xa3\x0f\x89\x4c\x35\x56\x81\x6e\x5e\x3c\x5f\xe8\xad\xdd\x84\x7c\xd0\x6b\xad\x61\x62\x04\x2b\x11\xb0\x1c\xaf\xda\xfa\xb3\x0f\x19\x73\x74\x8e\x93\x80\x26\x16\xcb\xc9\x69\x7d\x80\xed\xae\xc4\x03\x6c\xa6\x8c\x73\xca\xda\x01\xf8\x9a\xc3\x9a\xbc\x7f\x10\xd0\xa3\x6f\x00\x15\xaa\xe3\x9c\x08\x73\x1a\xba\x77\x39\xdf\x3d\xa5\x9d\x30\x9c\xdd\xdd\x66\x2b\x88\x41\xbe\xd0\xe7\x6a\xea\xd7\x46\x74\xf4\xe5\x51\x4b\xce\x5a\x78\xf2\x01\xd0\x3b\xdb\xdd\x3b\xeb\xc8\xd5\x16\x75\xe4\x03\xa1\x9b\x40\x6e\x21\xb0\xdf\x79\x56\x4d\x6f\x59\xaa\x35\xc1\x16\x46\x5b\x21\x65\x2a\x91\xd8\x57\x79\x01\x12\x83\x5f\x3b\xfb\x7f\xf2\xfb\x74\xd7\x2c\x12\xd7\xc0\x15\xcf\x0c\xdb\xae\xfb\xdf\xb2\xd5\xc7\xee\x80\x73\x12\xc1\xf3\x3c\xb5\xe9\x8c\x25\x09\xf6\xbd\x41\xa1\xc2\x87\x57\x16\x24\x7a\x67\x42\x61\xef\xfe\x22\x50\x91\x39\x95\x2a\xaf\xda\x7c\xee\xc5\xdc\x05\x50\xc3\xaf\x06\xb2\x65\xd7\x36\xf8\xce\x01\xa7\xbc\x31\xd6\x47\xb9\x02\x02\x9d\x84\x0f\x11\x5a\xc1\x9a\x71\xa8\x8d\xb0\xd0\x93\xb9\x0f\x51\xaf\x3d\xd1\x87\xa6\x03\xbb\x68\x21\xeb\x1f\x5b\xc6\x8f\x6b\xcb\xb8\x7c\x16\xb4\xe7\x89\xe0\xfd\xee\xf1\xcb\xb6\x52\xfb\x7f\x6c\x44\x1b\xdc\x5d\x75\x20\x3e\x1d\xec\xf9\x06\xa4\x9e\x9d\xdf\xb3\x50\x6c\xbf\xf8\x8f\x41\xd6\x04\x62\x46\x8e\xfe\xf4\x02\xed\xa4\xa0\xd9\x17\xb7\xb7\x0c\x1c\x5e\x5d\x75\xc0\xb8\xb8\xba\x6e\x8d\x1f\x75\x7a\x02\xa6\xf9\x77\x89\xf8\x0e\x76\x17\xe7\xbd\xeb\x85\x35\x20\xf4\x58\x76\x74\xb4\xfe\x04\x72\x31\x1a\x38\xfb\x2f\x5a\xfa\x54\x29\xdc\xa4\x5f\x2e\x27\xef\x10\x11\xe8\xa5\xad\x0c\x77\x9d\xf1\x94\x09\x40\x8b\xc5\xf9\xbe\xa2\x9f\xae\x56\x48\xd8\x53\xfb\xed\x35\x67\x77\x44\x10\x46\x21\x42\x8a\x15\xd4\xc7\xfa\x13\x11\xe6\x9f\xbc\xdd\x72\x96\x6d\xb6\x69\x26\x51\xb1\x9c\x47\xaf\xce\xed\x67\x32\xff\xec\x8c\xc5\xfa\xf1\xb8\x85\x0f\x37\xe9\x97\xd5\xd2\x84\x87\xc7\x57\x6e\x4e\xd8\xd3\x46\x73\xf7\x90\xcb\xad\x44\xd8\x6c\xd5\x4e\x85\x4a\x4b\xd9\x6c\xd9\x42\x98\x92\xc2\xda\xa4\x5f\x56\xdf\xb9\x4b\x29\xd6\x3f\x53\xaa\x92\x3d\xad\x3f\x12\x61\xf3\x91\x7c\xfa\x10\x65\x14\xff\x0f\xe6\x09\x55\x47\xef\x1a\x77\x75\xd1\xdf\x1e\x0d\x69\x0b\xc0\xb4\x7b\x50\x87\x36\x1c\xdb\x22\x6f\xee\xa0\xb6\x5b\x2b\xb9\xb5\x73\x87\xe1\x69\x37\x08\x6e\x4b\xd3\xbe\x0a\x6e\x7a\x37\x7d\xb6\x8e\x3a\xbc\x8a\xb6\x8d\xb7\x43\x6b\xb1\x3e\x8b\x53\xf7\x36\x4c\x77\x60\xa7\x35\x7a\x6c\x9f\x8f\x72\x4b\x4c\xe5\x18\x4c\xa9\xa0\x9f\xdc\x62\xa9\xeb\xcb\x14\x3b\x95\xfa\x90\x4b\xd3\xc3\xef\x79\x61\xcc\xe0\x7e\x74\x37\x8d\xb4\x8a\xe7\xee\x9d\xd1\x03\xb7\x24\xcf\xa3\x84\xd0\xb3\xfc\xe2\xd6\x41\x4e\x50\x7e\xd6\x7a\xf4\xb0\x5b\x51\xa7\x15\xd3\x1d\xba\x29\x33\x60\x71\xbe\x7b\x1f\xbe\xde\x27\xf2\xcc\xca\x5f\x06\x4c\x54\xfe\xcf\x3e\x2f\x75\x12\xb0\x75\x90\x43\xf2\x8b\xd3\x55\x50\x6b\x46\xb1\x8f\x45\x66\x39\x39\x75\x0e\xf7\x98\xc3\x71\xce\xf9\x76\x4d\xe3\x88\xb2\xa4\x43\x0e\x15\x3e\x57\x6b\xe2\x32\xa7\xa2\x15\x16\x10\xa1\xfd\xbd\x62\xfd\x0f\xf7\x1e\xd1\x85\x5b\x82\x7a\xde\xbf\xf4\xa8\x2f\xe9\xd8\x9b\x48\x7d\xba\xd1\xbb\x74\x4f\xcf\xd8\xfe\xa0\xb2\x40\x1e\xb0\x1f\x6c\x23\x65\xd8\x35\x4d\x7e\x7d\xa9\x65\xe8\x3c\x8a\x18\xbd\xce\x4f\xdf\x79\x6f\x33\x55\x9b\x0f\x94\xf8\xae\xfb\x25\x1c\x7c\xd2\x31\xcd\x5d\xb3\xe4\x41\xe4\x4e\x1a\x8d\xa8\x76\xda\x2e\x61\xda\xa7\x20\xfa\xe9\x98\xc3\xf0\x5a\x15\x4a\x1b\x1f\xb4\x6b\x97\x78\x75\x41\x37\x7c\xe8\xbd\x7d\x38\x4d\x5f\x43\x33\xc0\xe7\xd3\xf6\x9a\xc3\x1d\x81\xfb\x61\x20\x32\xc9\x16\x21\x8e\x07\xba\x12\x21\x70\x69\xef\xd4\x1f\xd6\xbe\xf5\xfe\xf1\x5e\xcd\x61\x35\x8c\xe8\xb0\x1e\xd8\xee\xbd\x04\x4e\x71\xdc\x91\x7f\xd4\xd9\x7e\x2d\x5a\xb7\x84\x3b\xdb\x91\x04\x6f\xe0\x79\x46\xe2\x68\x20\x9d\xdf\xbf\x69\x2f\x6f\x7f\xe4\xed\x74\x15\xdc\xdc\x9c\xd5\x42\xc1\x16\x3e\x72\x08\x47\x3b\xcf\xd7\x98\xa1\x46\xeb\xda\x94\x4f\x9d\x52\x5b\x27\x93\x9b\x3d\x1f\x42\xdb\x29\x55\x33\xf8\xc8\xb9\x1b\x48\x8b\x5e\x3b\xb0\xc3\xdf\x92\xd6\x5d\x8e\x6b\x38\xf4\x7d\x9b\x46\xac\x36\x7b\x4c\xce\x96\x5a\x7e\x73\xd2\x5e\x49\x88\x66\xc9\xaa\x2d\xf6\xcb\xe8\x39\xa8\x75\xf0\x73\x2c\xe0\xa8\x34\xaa\x1c\xd0\x35\xf0\x10\xa8\xc4\x1b\x98\xaf\xd8\x1d\x1c\x0d\x57\xa4\x4c\xda\x7a\xa3\x84\xd1\x85\xe4\x58\xc2\x66\xd8\x25\xa0\x29\x93\x39\xcb\x5c\x33\xd6\x4c\x3a\x68\xc7\xc7\x4f\x75\x54\x18\xc5\x35\x4f\x87\xe8\xef\x49\xd6\xce\x31\x1e\x26\xe5\x88\x3a\xc0\xbd\x0a\xba\x51\x1d\xef\x37\x81\x8b\x8d\x57\xf5\x78\x9f\x29\xe8\x51\x2d\xa4\xab\xb3\xc6\x8e\x6a\xad\x97\xe5\xe4\xb4\x8a\x8e\xe3\x84\x4f\x79\xef\xb2\xf7\x4a\xec\xe2\xfc\x51\x6e\x7f\x19\xe4\x40\x94\xcb\x98\xe7\xe1\x48\x64\xcb\xae\xd8\x5d\xf9\x61\x3b\xd9\x83\x3a\x68\x5d\xb0\x7c\xcf\x42\x1c\x1f\xb3\xe1\x6f\xef\xbb\xc4\x35\x1c\x90\x62\xfb\xb8\xb8\x06\xf3\x98\xa1\x0e\x84\xbd\x9f\x57\xc9\x33\x77\x9a\xa5\x22\xc0\x42\x97\x60\x1e\x81\x02\xa6\xfe\x60\x05\x4f\x5b\x10\x1c\x27\x8c\x6e\xb4\xa9\xdd\x17\xae\x46\x84\x0e\x4e\xfe\x18\xbf\xc3\x36\x5a\x79\xe9\xe1\xbd\x58\xba\x49\xec\xe4\xbc\x51\x94\x61\xc8\xa8\xe4\x2c\x16\x0d\x39\xe8\x38\xb8\xd1\x27\xd4\xd7\x17\x66\x8b\x36\x5b\xbc\xea\xb7\xf2\x8b\xd9\xb0\x55\x97\x29\x7d\xfd\x1d\x0c\xb2\xce\x45\xe3\xa1\xbb\xc8\x05\x80\x6b\x2c\x5b\xd7\x5d\x9d\xfe\x81\x2e\x8c\x5a\x29\x7c\x7e\xf1\xfb\x25\x74\x0d\x65\x7a\x3d\x7b\xad\x64\x71\xce\x56\xeb\x2c\x1c\x26\xce\xc8\xeb\x07\xad\x42\xf6\xc7\x91\xaa\xd6\x5d\x6f\x3f\x1c\x13\x3b\xf1\x81\x5e\x11\xa1\xab\x66\x91\xbf\xf6\x33\xbf\x2c\x49\x88\xcc\x5b\xbc\xc6\x94\xac\x41\xb4\x1f\x3d\xe9\xa3\xd0\xcf\x34\x48\x7b\x81\x8e\xd8\xa2\x6f\xe3\xec\x3d\x4a\x72\xc8\xb9\x71\x7d\x49\xa4\xae\x5c\x87\x18\x45\xb6\xb4\x9d\x97\x16\x1f\xde\x8b\x53\x9a\xf4\x16\xed\x11\xb9\x11\xaa\x23\x53\x7e\x55\x32\x74\x0b\x90\x22\xc9\x71\x78\x8b\xd8\x5a\x63\xf6\x17\x81\xc4\x8e\x86\x28\xe5\x4c\xaf\x77\xff\x6e\x74\x20\x11\x48\xad\xf9\xee\x70\x6c\xaf\xbf\xb6\xfb\x7e\x84\x6e\x50\x10\x6c\x88\x0c\x54\xab\x40\xe2\x8d\x1e\xa8\x79\x44\x99\x04\x11\x70\x58\x2b\x9b\xa4\x80\x7b\xd1\xed\xf1\x20\xfa\x50\x77\x45\x57\xd9\xc4\x16\xda\xdb\x17\x84\xbd\xdf\x02\xd7\x07\x4d\x2c\x3f\x18\xce\x31\x05\x2a\x00\xbd\x82\x38\x41\xb9\x38\x98\xdb\x72\xd6\xbe\x24\x7e\x90\x3e\x7b\x5c\xca\x8a\xa3\x2b\xda\x7e\xfe\xba\x8f\xe8\xaa\xb5\x18\xcf\x42\x69\xf0\x93\xac\x74\x47\x5b\xc2\x22\x73\x29\x56\xc8\x41\xa7\x90\x6d\x01\x45\x90\xc6\x6c\x87\x6e\x61\x87\xb0\xd8\x7f\xeb\x45\xac\x87\xe8\xb2\x5f\x9e\xa8\xf2\xa2\x14\xe9\x8f\x25\x58\xae\xab\x2b\xd3\xe8\x4d\x03\x37\x94\x81\x66\xb5\x4d\xab\x37\x14\x9e\x53\xda\x5c\x34\x72\x31\xda\x28\xd6\xd4\xa7\x94\xa6\xa2\x4f\x5e\x9d\xb4\xa8\x51\x6e\x74\x58\xa9\xb8\x7e\x2e\x56\xd5\x3a\x9a\x4a\x07\x29\x1d\xd5\x7f\xa7\xf4\xe3\x63\x56\xb1\xe2\xd7\x26\x45\xc8\x2a\x93\x5e\xae\x70\x41\xfe\xfc\x0e\x1b\x7b\x9b\xf7\xa3\x5c\xe9\xdb\x3c\x8d\xea\x4a\x3c\xbf\xfd\x32\x3f\x10\x68\xf3\x3a\x92\x4c\x48\xb4\x02\x53\x4b\xd5\x9e\xb0\x2d\x2e\xea\x33\xee\x51\x9e\xcf\x17\x67\x60\x2e\x45\xaa\x56\x47\x99\xa2\xd2\xc9\x7a\x53\x76\x95\x6d\xfc\x72\x2f\x1f\x05\xc2\x4e\x4d\x66\x7b\x19\xe3\xa8\xa3\x56\xb5\x9a\xc9\xd7\x08\xa3\x75\x16\xc7\xbb\x3c\xa1\x7f\xd8\x49\x8b\xa1\x70\x3b\x74\xb8\x97\x2a\xcc\x69\x33\xed\x25\x27\xa3\xa8\xb4\xf2\x95\x0a\xcd\x88\xdf\xa1\xd1\xfb\x5c\xd8\xd0\x1f\x7a\x4d\xb5\x34\xae\x72\x6a\xd3\x29\x2c\x93\x69\x26\x7b\xac\x51\xbb\x98\xeb\x4a\x03\x41\x11\xe1\xfa\x62\x82\x5d\x71\x1f\x4a\xca\x99\x92\x05\x88\xf2\xca\xe5\x48\x42\x92\xea\x23\xab\xe8\x0b\x73\xcf\xf4\xfe\x42\x26\x14\x9a\x1c\x38\xbf\x9c\xa3\x07\xed\xbb\xc4\xa4\x27\xb3\x6f\x4a\xa5\xdb\x95\x76\x0f\x94\x45\x6d\x2d\x45\x6e\x32\x81\x8f\x20\xaa\xbd\x8b\x46\x57\x7f\x47\x8b\x72\xf9\xf7\x13\x74\x86\xa9\xd2\x3e\x18\xad\x38\xa6\xe1\x76\xaa\xef\x54\xd1\x77\xba\xe9\x45\xd3\x16\x57\xb6\xf3\x7a\xdf\x90\x35\x4e\x5f\x87\x6f\x90\xd2\x8b\xf7\x23\x48\x73\x89\x13\x50\x28\xfc\xf0\xe6\x7b\xd4\x8e\xba\x17\x05\x86\x80\x2c\x0f\xb4\xf2\x02\xde\xe3\x24\x8d\xb5\xa8\xd5\x32\xad\x71\x9a\x06\x11\xdc\x8d\x91\x34\x6d\xa9\xe8\x62\xba\xa9\x53\xbe\xc7\x76\xe7\x22\x90\x98\xc4\xb6\xe0\xf9\x2f\x8d\x4b\x0a\x8a\xda\xe8\xa0\xbe\xa8\xbb\x49\x38\x8a\xca\x6b\xf8\x52\x3d\xf4\x21\xfe\xdb\x43\xa1\x52\xd1\xaa\x6f\xaa\xd7\x0b\xb4\xdf\x77\xa1\xe5\xe4\x08\xf6\x7e\xbb\x05\xb4\x21\xd2\x0a\x1c\xca\x68\x04\xdc\x5e\x71\x92\xe3\x5d\x33\x0c\x44\x99\xe0\xfc\xd2\x29\x23\x98\xca\x71\xfd\xb3\x0e\x9d\x40\x64\xaf\x85\x4d\xb0\xb7\x79\x1f\x0f\x15\x9c\xa4\x7f\x3f\x8c\xce\x41\xdd\x01\x09\x26\xc7\xc6\x71\x34\x0c\x3b\x8a\xf2\x4d\x5d\x8a\x0b\xac\x56\x0b\xb7\x98\x6e\x3c\xcf\xee\x1c\x03\xfa\xe0\xb8\xd7\x71\xf6\xfe\x48\x2b\xad\xe6\x72\x6f\x26\xcb\x53\xa9\x97\xe6\x5d\xf3\x78\xcf\xd5\x2c\xd2\xe9\x3e\x78\x31\xf3\x66\xa3\x87\xea\xfa\x70\xcd\x67\x2c\xb7\x8f\x72\x85\xf4\x46\xad\x2f\xc9\x1d\x20\x8d\xa1\x3e\xa7\x67\x77\xa1\x6a\x0b\x48\x7b\xbd\x91\x79\xa1\xef\x98\xc8\x97\xa2\x9a\x4a\x09\xa3\xea\x3b\xc5\x63\x6b\x42\x23\x54\xba\x27\xa9\x12\x30\xc5\x69\x1a\xef\x2c\x21\x6f\x96\xfa\x24\x41\x20\x76\x42\x82\xad\xad\xb7\xc2\x02\x96\x93\x9f\xbd\x66\xf6\x77\x1d\x83\x39\x11\x55\x1a\x47\xb5\x1a\x9f\x1a\x8f\xf9\xf5\x73\xe7\xd1\xee\xc5\xe2\x55\xbf\x7d\x9a\xae\xc9\x54\xcd\x73\x33\x92\x3b\xe7\x8b\xc5\x2b\x1d\xc9\xda\xdf\xd3\x85\x33\xb9\x05\x2a\x49\x58\xbd\x30\xff\x30\x9d\x8f\x05\x7f\x50\x4a\x32\x7e\x8c\x5a\x7d\x6b\x27\x5c\xa1\xa4\x5c\x28\x8b\x69\x63\xfe\xf5\x5c\xdb\x63\x02\x15\x43\x5c\x51\x01\xde\xba\xe5\xa1\xba\x1e\xe0\xe1\x6d\x88\xfc\x8f\xfd\x41\x87\x67\x8c\x6f\x66\xfa\x02\x1e\xb7\xc7\x57\x9e\x00\xd1\x9e\x76\xd8\xd3\xb0\x29\x10\x0f\x63\xd7\x06\x42\x1e\xa1\xa2\xab\xe2\xcb\x69\xc3\xb9\x6a\xa8\x77\x97\xa9\xac\x13\xb7\xe1\x46\x74\xaa\x82\x8f\x1e\xfd\xac\xdf\x0c\xb4\x2f\x36\x67\x34\xe6\xc3\x44\x36\x0f\xf7\x5a\x71\x82\x17\x10\x72\x90\xc2\x9e\xd3\xeb\x95\xe0\x78\x0b\xbb\xf9\x9b\xcb\xfe\x99\x8d\xf6\xfb\xbe\x5b\xe6\x5e\xdc\xd4\x86\xcb\xf8\x61\xa0\xef\x5e\x2f\x10\x14\x54\xca\xef\x8d\x1d\x2b\x0c\xd4\x06\xbd\x32\x57\x03\xaa\x38\x97\x26\xb3\x45\xf7\x34\xd2\x7b\x28\xba\xb8\xce\x6b\x24\x22\x42\x75\x8d\x63\x44\x99\xac\xaa\xd3\x83\x49\x3b\xdd\x60\x3e\xcb\xa7\xfa\xb7\xcf\x7e\xfb\xec\x7f\x02\x00\x00\xff\xff\x07\x01\x8f\x54\x39\xb3\x00\x00")

func schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaJson,
		"schema.json",
	)
}

func schemaJson() (*asset, error) {
	bytes, err := schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0x21, 0xcc, 0x7, 0xf7, 0x65, 0xec, 0x57, 0x2c, 0xd1, 0x2f, 0x3b, 0x51, 0xbf, 0x70, 0x68, 0x90, 0x99, 0xe5, 0xe6, 0x2e, 0xd7, 0xd6, 0x9d, 0xe7, 0xa4, 0x49, 0xab, 0x37, 0x2e, 0xa5, 0x7a}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"schema.json": schemaJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"schema.json": &bintree{schemaJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
