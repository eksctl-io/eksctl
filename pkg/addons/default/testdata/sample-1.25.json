{
  "apiVersion": "v1",
  "items": [
    {
      "apiVersion": "apps/v1",
      "kind": "DaemonSet",
      "metadata": {
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "labels": {
          "eks.amazonaws.com/component": "kube-proxy",
          "k8s-app": "kube-proxy"
        },
        "name": "kube-proxy",
        "namespace": "kube-system"
      },
      "spec": {
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "k8s-app": "kube-proxy"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "k8s-app": "kube-proxy"
            }
          },
          "spec": {
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "kubernetes.io/os",
                          "operator": "In",
                          "values": [
                            "linux"
                          ]
                        },
                        {
                          "key": "kubernetes.io/arch",
                          "operator": "In",
                          "values": [
                            "amd64",
                            "arm64"
                          ]
                        },
                        {
                          "key": "eks.amazonaws.com/compute-type",
                          "operator": "NotIn",
                          "values": [
                            "fargate"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "containers": [
              {
                "command": [
                  "kube-proxy",
                  "--v=2",
                  "--config=/var/lib/kube-proxy-config/config",
                  "--hostname-override=$(NODE_NAME)"
                ],
                "env": [
                  {
                    "name": "NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "image": "602401143452.dkr.ecr.ap-northeast-2.amazonaws.com/eks/kube-proxy:v1.25.6-minimal-eksbuild.1",
                "imagePullPolicy": "IfNotPresent",
                "name": "kube-proxy",
                "resources": {
                  "requests": {
                    "cpu": "100m"
                  }
                },
                "securityContext": {
                  "privileged": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/var/log",
                    "name": "varlog"
                  },
                  {
                    "mountPath": "/run/xtables.lock",
                    "name": "xtables-lock"
                  },
                  {
                    "mountPath": "/lib/modules",
                    "name": "lib-modules",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/var/lib/kube-proxy/",
                    "name": "kubeconfig"
                  },
                  {
                    "mountPath": "/var/lib/kube-proxy-config/",
                    "name": "config"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "hostNetwork": true,
            "priorityClassName": "system-node-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "kube-proxy",
            "serviceAccountName": "kube-proxy",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/var/log",
                  "type": ""
                },
                "name": "varlog"
              },
              {
                "hostPath": {
                  "path": "/run/xtables.lock",
                  "type": "FileOrCreate"
                },
                "name": "xtables-lock"
              },
              {
                "hostPath": {
                  "path": "/lib/modules",
                  "type": ""
                },
                "name": "lib-modules"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "kube-proxy"
                },
                "name": "kubeconfig"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "kube-proxy-config"
                },
                "name": "config"
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": {
            "maxSurge": 0,
            "maxUnavailable": "10%"
          },
          "type": "RollingUpdate"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "prometheus.io/port": "9153",
          "prometheus.io/scrape": "true"
        },
        "labels": {
          "eks.amazonaws.com/component": "kube-dns",
          "k8s-app": "kube-dns",
          "kubernetes.io/cluster-service": "true",
          "kubernetes.io/name": "CoreDNS"
        },
        "name": "kube-dns",
        "namespace": "kube-system"
      },
      "spec": {
        "clusterIP": "10.100.0.10",
        "clusterIPs": [
          "10.100.0.10"
        ],
        "internalTrafficPolicy": "Cluster",
        "ipFamilies": [
          "IPv4"
        ],
        "ipFamilyPolicy": "SingleStack",
        "ports": [
          {
            "name": "dns",
            "port": 53,
            "protocol": "UDP",
            "targetPort": 53
          },
          {
            "name": "dns-tcp",
            "port": 53,
            "protocol": "TCP",
            "targetPort": 53
          }
        ],
        "selector": {
          "k8s-app": "kube-dns"
        },
        "sessionAffinity": "None",
        "type": "ClusterIP"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {},
        "labels": {
          "eks.amazonaws.com/component": "coredns",
          "k8s-app": "kube-dns"
        },
        "name": "coredns",
        "namespace": "kube-system"
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "Corefile": ".:53 {\n    errors\n    health {\n      lameduck 5s\n    }\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    prometheus :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"
      },
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {},
        "labels": {
          "eks.amazonaws.com/component": "coredns",
          "k8s-app": "kube-dns"
        },
        "name": "coredns",
        "namespace": "kube-system"
      }
    },
    {
      "apiVersion": "apps/v1",
      "kind": "Deployment",
      "metadata": {
        "annotations": {},
        "labels": {
          "eks.amazonaws.com/component": "coredns",
          "k8s-app": "kube-dns",
          "kubernetes.io/name": "CoreDNS"
        },
        "name": "coredns",
        "namespace": "kube-system"
      },
      "spec": {
        "progressDeadlineSeconds": 600,
        "replicas": 2,
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "eks.amazonaws.com/component": "coredns",
            "k8s-app": "kube-dns"
          }
        },
        "strategy": {
          "rollingUpdate": {
            "maxSurge": "25%",
            "maxUnavailable": 1
          },
          "type": "RollingUpdate"
        },
        "template": {
          "metadata": {
            "annotations": {
              "eks.amazonaws.com/compute-type": "ec2"
            },
            "creationTimestamp": null,
            "labels": {
              "eks.amazonaws.com/component": "coredns",
              "k8s-app": "kube-dns"
            }
          },
          "spec": {
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "kubernetes.io/os",
                          "operator": "In",
                          "values": [
                            "linux"
                          ]
                        },
                        {
                          "key": "kubernetes.io/arch",
                          "operator": "In",
                          "values": [
                            "amd64",
                            "arm64"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "k8s-app",
                            "operator": "In",
                            "values": [
                              "kube-dns"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "weight": 100
                  }
                ]
              }
            },
            "containers": [
              {
                "args": [
                  "-conf",
                  "/etc/coredns/Corefile"
                ],
                "image": "%s.dkr.ecr.%s.%s/eks/coredns:v1.9.3-eksbuild.2",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "failureThreshold": 5,
                  "httpGet": {
                    "path": "/health",
                    "port": 8181,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 60,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "coredns",
                "ports": [
                  {
                    "containerPort": 53,
                    "name": "dns",
                    "protocol": "UDP"
                  },
                  {
                    "containerPort": 53,
                    "name": "dns-tcp",
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 9153,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "memory": "170Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "70Mi"
                  }
                },
                "securityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "add": [
                      "NET_BIND_SERVICE"
                    ],
                    "drop": [
                      "all"
                    ]
                  },
                  "readOnlyRootFilesystem": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/coredns",
                    "name": "config-volume",
                    "readOnly": true
                  },
                  {
                    "mountPath": "/tmp",
                    "name": "tmp"
                  }
                ]
              }
            ],
            "dnsPolicy": "Default",
            "priorityClassName": "system-cluster-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "coredns",
            "serviceAccountName": "coredns",
            "terminationGracePeriodSeconds": 30,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              },
              {
                "key": "CriticalAddonsOnly",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "emptyDir": {},
                "name": "tmp"
              },
              {
                "configMap": {
                  "defaultMode": 420,
                  "items": [
                    {
                      "key": "Corefile",
                      "path": "Corefile"
                    }
                  ],
                  "name": "coredns"
                },
                "name": "config-volume"
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRole",
      "metadata": {
        "annotations": {},
        "labels": {
          "eks.amazonaws.com/component": "coredns",
          "k8s-app": "kube-dns",
          "kubernetes.io/bootstrapping": "rbac-defaults"
        },
        "name": "system:coredns"
      },
      "rules": [
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "endpoints",
            "services",
            "pods",
            "namespaces"
          ],
          "verbs": [
            "list",
            "watch"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "nodes"
          ],
          "verbs": [
            "get"
          ]
        },
        {
          "apiGroups": [
            "discovery.k8s.io"
          ],
          "resources": [
            "endpointslices"
          ],
          "verbs": [
            "list",
            "watch"
          ]
        }
      ]
    },
    {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {
          "rbac.authorization.kubernetes.io/autoupdate": "true"
        },
        "labels": {
          "eks.amazonaws.com/component": "coredns",
          "k8s-app": "kube-dns",
          "kubernetes.io/bootstrapping": "rbac-defaults"
        },
        "name": "system:coredns"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "system:coredns"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "coredns",
          "namespace": "kube-system"
        }
      ]
    },
    {
      "apiVersion": "apps/v1",
      "kind": "DaemonSet",
      "metadata": {
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "labels": {
          "app.kubernetes.io/instance": "aws-vpc-cni",
          "app.kubernetes.io/name": "aws-node",
          "app.kubernetes.io/version": "v1.12.2",
          "k8s-app": "aws-node"
        },
        "name": "aws-node",
        "namespace": "kube-system"
      },
      "spec": {
        "revisionHistoryLimit": 10,
        "selector": {
          "matchLabels": {
            "k8s-app": "aws-node"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/instance": "aws-vpc-cni",
              "app.kubernetes.io/name": "aws-node",
              "k8s-app": "aws-node"
            }
          },
          "spec": {
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "kubernetes.io/os",
                          "operator": "In",
                          "values": [
                            "linux"
                          ]
                        },
                        {
                          "key": "kubernetes.io/arch",
                          "operator": "In",
                          "values": [
                            "amd64",
                            "arm64"
                          ]
                        },
                        {
                          "key": "eks.amazonaws.com/compute-type",
                          "operator": "NotIn",
                          "values": [
                            "fargate"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "containers": [
              {
                "env": [
                  {
                    "name": "ADDITIONAL_ENI_TAGS",
                    "value": "{}"
                  },
                  {
                    "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                    "value": "true"
                  },
                  {
                    "name": "AWS_VPC_ENI_MTU",
                    "value": "9001"
                  },
                  {
                    "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                    "value": "false"
                  },
                  {
                    "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                    "value": "false"
                  },
                  {
                    "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                    "value": "DEBUG"
                  },
                  {
                    "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                    "value": "/host/var/log/aws-routed-eni/ipamd.log"
                  },
                  {
                    "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                    "value": "prng"
                  },
                  {
                    "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                    "value": "eni"
                  },
                  {
                    "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                    "value": "/var/log/aws-routed-eni/plugin.log"
                  },
                  {
                    "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                    "value": "DEBUG"
                  },
                  {
                    "name": "DISABLE_INTROSPECTION",
                    "value": "false"
                  },
                  {
                    "name": "DISABLE_METRICS",
                    "value": "false"
                  },
                  {
                    "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                    "value": "false"
                  },
                  {
                    "name": "ENABLE_IPv4",
                    "value": "true"
                  },
                  {
                    "name": "ENABLE_IPv6",
                    "value": "false"
                  },
                  {
                    "name": "ENABLE_POD_ENI",
                    "value": "false"
                  },
                  {
                    "name": "ENABLE_PREFIX_DELEGATION",
                    "value": "false"
                  },
                  {
                    "name": "WARM_ENI_TARGET",
                    "value": "1"
                  },
                  {
                    "name": "WARM_PREFIX_TARGET",
                    "value": "1"
                  },
                  {
                    "name": "MY_NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "image": "602401143452.dkr.ecr.ap-northeast-2.amazonaws.com/amazon-k8s-cni:v1.12.2-eksbuild.1",
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {
                  "exec": {
                    "command": [
                      "/app/grpc-health-probe",
                      "-addr=:50051",
                      "-connect-timeout=5s",
                      "-rpc-timeout=5s"
                    ]
                  },
                  "failureThreshold": 3,
                  "initialDelaySeconds": 60,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "name": "aws-node",
                "ports": [
                  {
                    "containerPort": 61678,
                    "hostPort": 61678,
                    "name": "metrics",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/app/grpc-health-probe",
                      "-addr=:50051",
                      "-connect-timeout=5s",
                      "-rpc-timeout=5s"
                    ]
                  },
                  "failureThreshold": 3,
                  "initialDelaySeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 10
                },
                "resources": {
                  "requests": {
                    "cpu": "25m"
                  }
                },
                "securityContext": {
                  "capabilities": {
                    "add": [
                      "NET_ADMIN",
                      "NET_RAW"
                    ]
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/host/opt/cni/bin",
                    "name": "cni-bin-dir"
                  },
                  {
                    "mountPath": "/host/etc/cni/net.d",
                    "name": "cni-net-dir"
                  },
                  {
                    "mountPath": "/host/var/log/aws-routed-eni",
                    "name": "log-dir"
                  },
                  {
                    "mountPath": "/var/run/aws-node",
                    "name": "run-dir"
                  },
                  {
                    "mountPath": "/run/xtables.lock",
                    "name": "xtables-lock"
                  }
                ]
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "hostNetwork": true,
            "initContainers": [
              {
                "env": [
                  {
                    "name": "DISABLE_TCP_EARLY_DEMUX",
                    "value": "false"
                  },
                  {
                    "name": "ENABLE_IPv6",
                    "value": "false"
                  }
                ],
                "image": "602401143452.dkr.ecr.ap-northeast-2.amazonaws.com/amazon-k8s-cni-init:v1.12.2-eksbuild.1",
                "imagePullPolicy": "IfNotPresent",
                "name": "aws-vpc-cni-init",
                "resources": {},
                "securityContext": {
                  "privileged": true
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/host/opt/cni/bin",
                    "name": "cni-bin-dir"
                  }
                ]
              }
            ],
            "priorityClassName": "system-node-critical",
            "restartPolicy": "Always",
            "schedulerName": "default-scheduler",
            "securityContext": {},
            "serviceAccount": "aws-node",
            "serviceAccountName": "aws-node",
            "terminationGracePeriodSeconds": 10,
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/opt/cni/bin",
                  "type": ""
                },
                "name": "cni-bin-dir"
              },
              {
                "hostPath": {
                  "path": "/etc/cni/net.d",
                  "type": ""
                },
                "name": "cni-net-dir"
              },
              {
                "hostPath": {
                  "path": "/var/log/aws-routed-eni",
                  "type": "DirectoryOrCreate"
                },
                "name": "log-dir"
              },
              {
                "hostPath": {
                  "path": "/var/run/aws-node",
                  "type": "DirectoryOrCreate"
                },
                "name": "run-dir"
              },
              {
                "hostPath": {
                  "path": "/run/xtables.lock",
                  "type": ""
                },
                "name": "xtables-lock"
              }
            ]
          }
        },
        "updateStrategy": {
          "rollingUpdate": {
            "maxSurge": 0,
            "maxUnavailable": "10%"
          },
          "type": "RollingUpdate"
        }
      }
    },
    {
      "apiVersion": "apiextensions.k8s.io/v1",
      "kind": "CustomResourceDefinition",
      "metadata": {
        "annotations": {},
        "labels": {
          "app.kubernetes.io/instance": "aws-vpc-cni",
          "app.kubernetes.io/name": "aws-node",
          "app.kubernetes.io/version": "v1.12.2",
          "k8s-app": "aws-node"
        },
        "name": "eniconfigs.crd.k8s.amazonaws.com"
      },
      "spec": {
        "conversion": {
          "strategy": "None"
        },
        "group": "crd.k8s.amazonaws.com",
        "names": {
          "kind": "ENIConfig",
          "listKind": "ENIConfigList",
          "plural": "eniconfigs",
          "singular": "eniconfig"
        },
        "scope": "Cluster",
        "versions": [
          {
            "name": "v1alpha1",
            "schema": {
              "openAPIV3Schema": {
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              }
            },
            "served": true,
            "storage": true
          }
        ]
      }
    },
    {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRole",
      "metadata": {
        "annotations": {},
        "labels": {
          "app.kubernetes.io/instance": "aws-vpc-cni",
          "app.kubernetes.io/name": "aws-node",
          "app.kubernetes.io/version": "v1.12.2",
          "k8s-app": "aws-node"
        },
        "name": "aws-node"
      },
      "rules": [
        {
          "apiGroups": [
            "crd.k8s.amazonaws.com"
          ],
          "resources": [
            "eniconfigs"
          ],
          "verbs": [
            "list",
            "watch",
            "get"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "namespaces"
          ],
          "verbs": [
            "list",
            "watch",
            "get"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "pods"
          ],
          "verbs": [
            "list",
            "watch",
            "get"
          ]
        },
        {
          "apiGroups": [
            ""
          ],
          "resources": [
            "nodes"
          ],
          "verbs": [
            "list",
            "watch",
            "get",
            "update"
          ]
        },
        {
          "apiGroups": [
            "extensions"
          ],
          "resources": [
            "*"
          ],
          "verbs": [
            "list",
            "watch"
          ]
        },
        {
          "apiGroups": [
            "",
            "events.k8s.io"
          ],
          "resources": [
            "events"
          ],
          "verbs": [
            "create",
            "patch",
            "list"
          ]
        }
      ]
    },
    {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {},
        "labels": {
          "app.kubernetes.io/instance": "aws-vpc-cni",
          "app.kubernetes.io/name": "aws-node",
          "app.kubernetes.io/version": "v1.12.2",
          "k8s-app": "aws-node"
        },
        "name": "aws-node"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "aws-node"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "aws-node",
          "namespace": "kube-system"
        }
      ]
    }
  ],
  "kind": "List"
}
