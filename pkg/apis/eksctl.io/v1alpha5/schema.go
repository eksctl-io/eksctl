// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/schema.json (37.189kB)

package v1alpha5

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x7d\x7f\x6f\xdb\x38\x93\xff\xff\x7d\x15\x84\xfb\xe0\xfb\x6c\x01\x3b\x7e\xba\xc0\xf7\xee\xd0\xdb\x0b\xe0\x26\xdd\xd6\xd7\x26\x31\xea\xde\x3e\xb8\x4d\x16\x28\x2d\x8d\x6d\x6e\x24\x52\x4b\x52\x49\xdd\x6d\xdf\xfb\x81\xd4\x0f\xeb\x07\x29\x93\xb2\xd2\x4d\x9f\xbf\xda\x48\xe2\x70\x38\xf3\xe1\x70\x38\x1c\x8e\xff\x7c\x82\xd0\xe8\x6f\x1c\xd6\xa3\x17\x68\xf4\x74\x1a\xc2\x9a\x50\x22\x09\xa3\x62\x7a\x16\xa5\x42\x02\x3f\x63\x74\x4d\x36\xa3\xb1\xfa\x50\xee\x12\x50\x1f\xb2\xd5\xef\x10\xc8\xec\xd9\xdf\x44\xb0\x85\x18\xab\xc7\x5b\x29\x93\x17\xd3\xe9\xef\x82\xd1\x49\xf6\x74\xc2\xf8\x66\x1a\x72\xbc\x96\x93\x7f\xfc\xfb\x34\x7b\xf6\x34\x6b\x57\xe9\x6a\xf4\x02\x29\x3e\x10\x1a\x15\x7d\x46\x2c\x0d\xff\x89\x65\xb0\x2d\x5f\x21\x34\x4a\x38\x4b\x80\x4b\x02\xa2\xf2\x14\xa1\x51\x90\x35\x7a\xc7\x36\x1b\x42\x37\xb5\x77\x07\x07\x57\x76\x54\xb4\x2e\x9b\x7e\xcd\xff\xf7\x75\xbc\xef\x1f\xd6\xc0\x39\x84\x57\x3c\x04\x3e\x7a\x81\xae\xad\x3c\xe4\x2f\x7e\x2b\xdb\xe2\x30\xd4\x3d\xe3\x68\x51\x1d\xc5\x1a\x47\x02\xca\x8f\x42\x10\x01\x27\x89\xfa\x4e\x71\x1c\x30\x2a\x31\xa1\x02\x05\x5a\x05\x28\xc1\x1c\xc7\x20\x81\x0b\xc4\x21\xc2\x12\x42\x24\x19\xaa\xc8\xaa\x24\xf4\x69\x42\xa8\x84\x28\x22\xbf\x4f\xb6\x32\x8e\x26\xc7\x12\x7e\x52\x11\x44\x5b\x47\x6d\xc1\x5b\x55\x05\x14\xaf\x22\xf8\xb0\x4b\x1a\x2f\x10\x1a\x11\x09\x71\xf3\x61\x05\x72\x42\x72\xd5\xc7\xb8\xfe\x36\x84\x35\x4e\x23\xa9\x3e\x18\x55\xde\x7c\xad\x7e\x56\x92\xc0\x9c\xe3\x5d\x5f\x05\x57\x39\x1f\x52\xbb\xc0\xbb\xb5\x90\x03\x0b\x45\xb9\x90\x3d\x75\xec\x4b\xde\xa8\xe9\xcc\x02\x54\xd4\xcb\xe1\x8f\x94\x70\x08\xeb\x22\x8a\x41\xe2\x10\x4b\xdc\x96\x8f\x0d\x0e\x38\x21\xbf\x00\x17\x19\xcb\x7f\x9a\x74\x66\x50\x7b\x4d\xe9\xb5\x17\xf0\x09\xc7\x49\xa4\x3b\xb9\xae\xe3\x04\x6e\x45\x20\xa3\x13\xc2\xa6\x77\xcf\x71\x94\x6c\xf1\xff\xaf\xc2\xe5\xb7\x27\x06\xe0\x8c\xf0\x1d\x26\x11\x5e\x91\x88\xc8\xdd\xaf\x8c\x3e\x06\xc4\x8e\xab\x06\xc7\x60\x22\x91\x87\xc1\x33\x93\x5d\x63\xbe\xc1\x12\x16\x9c\xad\x49\xe4\x3c\x64\x73\x97\x3f\xd7\x68\x1d\x35\xda\x0d\x91\x6e\xc3\x7c\x4d\xa4\x99\x02\xc1\xb1\x97\xa0\xe6\xb3\x0b\x33\xa1\x5b\x42\xc3\x07\x46\x6b\x7d\xde\x1d\x04\x6a\x8c\x29\xde\x40\x78\xc9\x42\x78\xcd\x59\x9a\x1c\xa7\xb5\x8b\x06\x35\x57\xbd\x35\x06\x5d\x33\x46\x4b\x00\x74\xad\x28\x6e\x34\x7f\x28\x15\x78\x03\xbf\xfd\x30\xd5\xff\x4e\x35\xff\x84\x6e\x26\xb4\xfc\xe2\x19\xc2\x34\x44\xd7\xf9\xc8\xd0\xfe\x45\xd9\x08\x6e\xc5\x24\x7f\xad\xdb\x89\xe9\xb3\x3a\x0b\x07\xec\xa3\x62\xe9\x27\x8c\xb6\x1c\xd6\xff\x75\x33\xb2\x73\x72\x33\x3a\x6d\x32\xfe\xd3\x14\x9f\x6a\xfe\x5a\xed\xdb\x4c\xdd\x8c\x4e\xdb\x83\x50\x04\xcc\xe0\x2a\x4d\xa8\x0f\x54\x2f\x60\x6f\x73\xeb\xe4\xe8\x30\x90\x18\x14\x0b\x3f\x33\x8e\x08\x5d\x33\x1e\x63\xf5\x48\x0b\xb2\x98\x0a\x48\x28\xa0\x18\xb4\x6d\x82\x88\x97\xba\x0f\xf6\xea\x88\x05\x17\x25\x0a\x08\x38\x48\xf1\x8a\x06\x7c\x57\x30\xe0\xa0\xcd\x65\xab\x99\x99\xba\xc4\x32\x6d\xe9\xb3\x13\x20\xcb\xac\x89\x91\xdc\x5d\x12\x78\xd1\xfa\x65\x71\xd6\xd7\x85\xd2\x96\x73\x6c\x5c\xfd\x4d\x53\xa0\x61\xbc\x1b\x3c\x9b\x51\xde\x69\x15\x3b\x96\xb9\xce\x65\xdf\xbc\xea\x76\x2a\xbc\xad\xaf\xc6\x62\x36\x88\x0b\x89\x91\x20\x0a\xc1\xb9\x8b\x37\x56\x0e\xdd\x0a\x10\x87\x24\xc2\x01\x84\xe8\x9e\xc8\x2d\xca\xf5\x86\x66\x8b\xb9\xb3\xf3\xe8\x4d\xd8\xe4\x36\xbe\xa2\x61\xc2\x08\x95\xc2\x65\x63\x90\x70\x72\x87\x25\xcc\x82\x00\x44\x0b\xdc\x85\x71\x59\x31\x16\x01\xb6\xcc\x8b\x24\x5d\x45\x24\xf0\x25\xe0\x05\xe0\x3a\x93\xb6\xbe\x07\x51\xed\x96\x45\xa1\x28\xbd\x73\x9c\x10\x24\x80\xdf\x01\x47\x90\x4b\x15\x61\xdd\x5b\xd5\xa8\x39\xab\xb7\x17\x71\x93\x8a\x95\x93\xe4\xa0\xdc\x62\xb6\xb1\xf0\xd5\x27\x08\x52\x45\xee\x3d\x8b\x60\xf6\xfe\xf2\x80\x23\xd5\xe9\xa2\x36\xa8\x2d\x80\xc7\x44\x28\x6b\x22\x5e\xb2\x94\x86\x98\xef\xfa\x50\x57\x92\x20\x81\xd2\x31\x4b\xeb\xd8\x45\xde\xeb\xe6\x5e\x4a\xcb\x1a\xd5\xa3\x5c\xe1\x9c\xc1\x23\x04\x58\xa1\x30\x90\xd0\x94\x3d\xb8\x9a\x9f\x9f\x3d\xd0\xbc\x6b\x0c\xd9\x7d\x28\x87\x51\xd3\xa0\xe7\x81\x2d\xd3\xf0\x3b\x70\x34\xa0\x55\xc0\x51\x84\xe6\xb3\x0b\x84\xa5\xe4\x64\x95\x4a\x10\x88\xad\x11\x2e\x26\xb4\xa7\x19\x38\x44\xcd\x32\xef\x1b\x88\x76\xb0\x02\x98\x52\x26\x71\x3d\xe0\xd7\x2d\x8b\x87\xdb\x58\x57\x02\x98\x26\x02\x7f\x7e\x35\xe3\x1c\x4b\x89\x83\xed\x82\x45\x24\x68\xcd\x13\xb3\x09\x98\xd3\x88\x50\x38\x67\x41\x1a\x03\x6d\x75\x68\x52\x07\x4a\x34\x79\x14\xe6\x6d\xd4\xda\x9b\xf5\xab\xfe\x27\xb7\x44\xa0\x1c\x5b\xca\x4a\x6b\xe1\xfb\x38\xc2\xfd\x7b\x39\x28\x91\xd9\xfb\xcb\xc7\x15\x23\x89\xf0\x0a\xa2\xef\x16\x6c\x14\xc7\xd0\x37\xd0\x60\x25\x28\x12\x1c\x0c\x4b\x35\xf1\x5e\x42\xfc\xe8\xf7\xd8\xef\xb4\xcc\x53\xd7\x06\x48\xe2\xcd\xf7\x05\x11\xaf\xa5\x53\x83\xc8\x88\x81\xf6\x3c\x19\x9b\x6d\x75\xd7\x6c\xb7\xd9\xc6\x03\xf8\xe8\xdc\x1e\x69\x85\x0c\xb9\x5c\x52\x44\x70\x9c\x5b\xb3\xdc\x98\xa1\x62\x97\xa9\x03\x01\xd9\x2e\x27\xe5\x7d\xbc\x68\x5f\xea\x4e\xcb\xe9\xb2\x89\x79\xeb\xa2\xca\x3d\xdd\x40\x2f\xf0\x14\xc4\x07\x54\x46\xa6\x6e\xe5\x61\xb4\xa4\xe6\x29\xf8\x2e\x4a\x26\x21\xeb\x28\xd9\xc1\x33\x8c\xe6\x7c\xe1\xb0\xa9\x44\x62\x0e\x9f\x68\x0c\x6e\xb4\x73\x06\x86\x24\xf9\xdd\x59\xbc\x6a\xe8\xe7\xb8\xe3\xa2\x81\xac\x68\xae\x14\x03\x5f\x0f\x62\xc7\xca\xf3\xda\x0d\x50\xe0\x38\x2a\xb7\xee\x7d\x36\xff\x4e\xc4\x4c\x13\xe8\x72\xf6\xc1\xc5\x22\xa9\xfd\xd3\x3d\x76\xdf\x46\x7a\x29\xa2\x20\x3e\xa0\x45\xba\x9c\x7d\x40\x39\xd9\xba\xa9\x46\x2c\xa9\x2f\x80\x6e\x76\xe9\x30\x3d\x93\x70\xdd\x2d\x3e\xe6\xc3\x5a\x83\x40\x75\xb2\x26\x01\x96\x30\x4b\xe5\x96\x71\x22\x77\xe7\x86\x23\x08\x37\x4f\xfe\x18\x77\xbd\x88\x3e\x0d\xed\x3e\x06\xb7\x97\x83\x58\x65\x2f\xa4\x96\x83\x71\x11\xf5\xb8\xae\x5e\x23\xfb\x83\x41\x1e\x71\xc0\xe1\x84\xd1\x68\x37\x48\x04\xc1\x81\x9c\x11\xf0\xe9\x8a\x82\x57\x6c\xb8\xdf\x92\x65\x39\xd1\x02\x79\xcf\xf8\xed\x83\x2d\x53\x59\x40\xf8\xd1\x73\xec\x85\xe8\x42\x0d\xed\x61\x0e\x68\x8d\xf3\x4e\xb4\xe3\x9c\x51\x47\x22\x47\x8a\x9f\x19\xee\x20\x64\x82\xe3\x2f\x8b\x33\x27\xe3\x9b\x4a\x36\x8b\x22\xa6\xa6\xf0\x7c\x71\xf7\x6f\xbd\x4e\x2a\x02\x12\x72\xb7\xfd\xec\x86\xc8\x6d\xba\x3a\x09\x58\xfc\xe5\x1e\xf0\x1d\x28\x04\x88\x2f\x59\x32\xcb\x97\xe4\x76\xf3\x25\x95\x24\x12\x5f\x48\x42\x41\x9e\xcc\x17\x97\x60\x89\xd2\x04\xf6\x13\x99\x8e\xde\x5b\xe7\x38\x66\xab\xfd\x49\x72\x7c\x36\x3f\x7f\x7f\x5c\xac\xfc\x98\xa1\xf6\x3f\x8c\x5e\x33\x8e\xf6\x60\x45\x6a\x18\x08\x0b\xc1\x02\x92\x6d\x7e\xc7\x08\x4e\x36\x27\x48\x32\x94\x0a\xc8\x8e\xbd\x04\x24\x98\x2b\x64\xe9\x8f\x15\x81\x02\x6a\x39\xbe\x90\xa2\x49\x77\x08\x87\x93\x2d\x6b\xc3\xd7\x05\xc2\xdf\x90\x2d\xa3\x4e\x49\xef\x0c\x17\x23\x39\x8a\x1d\xb3\x77\x2a\x9e\x66\x87\x59\xcd\xce\xd9\x7c\x20\xf7\x6d\xc2\x8d\x02\x82\x54\x2d\xe9\x59\xaa\xc4\xa0\x4e\xcc\x16\xf3\xec\x28\x7b\xd9\xbf\x8f\x16\xc2\x12\x0e\x13\x2d\x7d\x08\x51\xd6\x83\xce\x51\x41\xcb\xd7\xde\x60\x75\x25\x75\x78\xa4\x2d\xb7\xe0\x30\x5c\x96\xa6\x19\xd6\x60\xb2\x98\x04\x98\x03\x02\x22\xb7\xc0\x8b\x55\xa1\x32\x53\xd4\x48\xda\x13\x6a\x9f\xf2\x31\x46\x72\x0b\x02\x34\x91\x5b\xd8\x41\x88\x56\x3b\x34\xfb\x55\xb7\x0b\x18\xbd\x03\x4a\x80\xd6\x42\x6b\x87\xa5\xf7\x4d\x19\xeb\xb9\xf2\x93\x5a\xda\x86\x5e\xbe\xac\xb0\x37\xe8\xd2\xbc\x58\x38\xc0\x7b\xdc\xb1\xf0\x36\xcc\x4b\xd7\x62\xd7\x69\x40\x06\xf4\x5d\x36\x11\x5b\xe1\x28\xb7\xac\xda\xf1\xc0\x51\x84\x82\x2d\x89\x0a\x17\x64\x5a\xb7\xc9\x9e\x2e\x8d\x3f\xfd\x9a\xa7\xd3\x48\xc7\x74\x0b\x85\xb5\xc4\x33\x5c\xe0\xab\x36\x42\xb6\x56\x10\x46\x39\x8f\x28\xc9\x98\x3c\xf1\x9a\x4a\x4e\x34\x0e\x9f\x67\x78\x67\x29\x74\x8d\x6b\x3e\xbb\x40\x9c\x45\xf0\x77\x81\x66\xef\x2f\x8b\x15\x5b\x32\xc4\x53\x8a\x12\x16\x0a\xc4\xa8\x64\x05\xcf\x7e\xe3\x3d\x8a\xf6\x61\x4b\x0c\x11\x04\x92\xf1\x21\x73\x80\x97\x39\xcd\x21\x5c\xb7\x6c\xb9\xd1\x1a\xe7\x69\x04\x42\x0d\x3c\xe3\x19\x29\xdf\x31\x62\x58\x27\xb8\x8b\x60\x0b\x61\x1a\xc1\x11\x72\x3e\xae\x27\x9f\x65\xee\x5b\xb9\x2f\x5d\x72\xbd\xdf\x92\x60\x5b\x4e\x22\xb1\x65\x69\x14\x16\xc0\x0a\x19\xa2\xd9\x3e\x14\xe9\x4c\x30\x7d\x72\x9c\x4f\xbb\x4c\x22\x10\x96\x32\x39\x41\xf3\x35\xa2\x8c\xea\x99\x78\x47\x42\x08\xc7\xda\x60\x15\x2b\x9e\x5a\x9c\x54\xc3\x22\xfe\x78\x4f\xa2\x08\xad\x40\xf5\x15\xfa\x29\xe8\x91\xb0\x6c\xd4\xf4\x77\x17\x6c\xf7\xf2\x0c\x9a\x81\x71\x93\xf1\x34\xda\x94\x6e\x37\x61\xb8\xd0\x79\x36\x77\x45\xae\x6e\x29\x09\xdd\x08\xad\xae\xda\x8c\x2d\xa7\xb1\xd9\x48\xb8\x19\x88\x9e\x9d\x74\xac\xd1\xa5\xb9\x74\x5a\xab\xb3\x63\x5d\xe7\x05\xfb\x51\x27\x47\xd4\xc4\xfb\x36\x5d\x01\xa7\x20\x41\x20\xcd\x34\x2a\x61\x54\x59\xf3\x1a\x06\xd9\xcf\x80\x0c\xd0\x83\x63\x42\x47\x8f\xfc\x0b\x1b\xa7\x25\x39\xb4\xe6\x2c\x46\x99\x11\x1c\x50\x12\xfd\xe8\x0f\x74\xda\x66\xcb\x51\x18\xd4\x28\x1c\xe1\x37\xb8\x9a\x84\xbe\x0e\x43\x61\x10\x5e\x13\xa7\xdc\xba\x15\x63\x52\x48\x8e\x93\xb6\x77\x8f\xec\xce\x59\xeb\x66\x56\x15\xad\xaa\x23\x5c\x37\x3e\x1d\xa4\xae\x8a\xaf\x8d\xb4\x38\x24\xcc\x8d\xce\x7b\xf5\x65\x4f\xdc\xe8\x5e\x4c\x23\x18\x77\x08\x6a\x10\x40\xe5\xb7\x83\xf4\x76\xcc\x74\xe4\x57\xbd\x71\xa9\x2f\x92\x12\xba\x41\xaf\x89\xbc\x4a\x94\x8f\xbe\x3f\x29\xd1\x9b\xba\x88\xd0\x5b\xf5\x9e\x64\x49\x79\xea\x3b\xa4\x86\x26\x88\x64\x7c\xe7\x0e\xc1\x6f\xca\x54\x0d\xb4\x8d\xa4\xc7\x0a\x7e\x6d\xcb\xcb\x5e\xc1\x96\x75\xc1\x96\xda\xb3\x43\x98\xaf\x88\xe4\x98\xef\xd0\x7f\x2f\xaf\x2e\xa7\xff\x3b\xbb\x78\x57\x66\x35\x8a\x31\x12\x69\xb0\x45\x58\x20\x1d\x79\x30\xdc\x85\x65\x5c\x67\xbf\xea\x74\x48\x02\xbe\xa7\x0c\x0f\xc9\x80\x61\x45\x29\x04\xdc\xba\xa3\x37\xf0\x66\x1e\xc7\xe4\x67\x1c\x93\x68\xd8\x4c\xbe\xc7\x7d\xa1\x36\x04\xa1\xc4\x76\x86\x13\x1c\x10\x69\x1d\xb9\x02\xc5\x06\x2c\x76\xce\xf9\x92\x69\xa9\x39\xeb\x35\x53\x42\x85\xc4\x34\xd0\x37\xce\x07\xd5\xc2\xa3\xf6\xfb\x0e\xfa\x50\x31\xfe\xb4\x24\x9f\xad\x12\xe9\xd4\x4e\x4c\x68\xef\xb6\x83\xe7\x75\xe5\x91\xba\xfc\x58\xd7\x50\xb7\xa2\x79\x94\x68\x23\xaf\x17\x26\x4b\x94\x41\x38\x5e\x0e\x2f\xe1\xb8\x5c\xbe\xf9\x17\xd9\xc6\x56\x78\xbf\x63\x51\x1a\x83\x8b\xea\xbb\x3c\xef\x0d\xd9\xe0\xd5\x4e\x82\xdf\x49\x9e\xa5\x55\x85\xeb\xff\xf8\xc7\x50\x9b\xef\xbd\xd5\xb6\xd9\x91\x0e\x73\x67\x98\x27\x86\x69\x67\x96\x6a\xa7\x8d\x6f\xe0\xb1\x6d\x89\x3a\x27\x45\x13\x82\x0d\x63\x3b\xe8\x76\x00\x53\xf4\xea\xed\x72\xd2\xba\xaf\x8d\x3e\x5c\x9d\x5f\xa1\x5f\x70\x44\xc2\xf2\x30\x86\xc6\x38\x49\x20\x44\x6b\x02\x99\x1f\x10\x22\xb9\xe5\xec\x5e\x11\x01\xce\x99\x7b\x0e\xcd\xc3\xf4\x5e\x77\x17\x40\x72\x12\x88\x33\x16\xa9\x3d\x48\x3d\x7d\xd2\xe2\x2f\x6c\x38\xa6\x69\x84\xb9\x82\x86\xb3\xdb\x50\x6d\x34\xa4\xad\x8c\x33\xfe\xff\x7a\x77\xc1\x6b\x7a\x56\xa5\x61\x18\xcc\x20\xd0\xd5\x41\xa6\xd5\x2e\x8b\x3c\x05\x58\xbb\xf0\xc5\x9d\x5d\x7d\x97\x5e\x5f\x58\xde\x5f\x7b\x0f\x59\x20\x7e\xfb\x61\x2b\x65\x22\x5e\x4c\xa7\xea\xaf\x13\x7c\x2f\x4e\x70\x8c\x3f\x33\x7a\x12\xb0\x78\x3a\xfb\xe7\x52\xd7\x08\xf9\xb9\x68\x33\x55\x9b\x04\x21\xa7\xff\x23\x80\xbf\x4e\x49\x08\x53\x7c\x2f\x26\x7b\x08\x4c\xb0\x98\xe4\x63\x0a\x4a\x80\x9d\x28\xa4\x3f\x73\x9e\x03\x87\x86\xb1\xbf\x9c\xff\x8d\x58\xbf\x19\x9d\x1a\x24\xb7\xbf\xf2\x5f\xcc\xac\x22\x2b\xcb\x61\x8b\xfe\xed\xb3\x7e\x86\xc8\xe2\xf0\x42\xbc\xe1\x9c\x78\x10\x94\x67\x7b\xad\xf9\xb9\x36\x74\x67\xf3\xf3\xf7\x9e\xbb\xb4\x6a\xcb\xba\xfa\x1e\x70\x03\x75\x44\x90\x6f\x99\x40\x40\xd6\x3b\x74\x1d\xa4\x42\xb2\x18\xcd\x2e\xe6\xfb\x52\x18\xd9\xb3\x09\x8e\xc9\x44\xa4\x49\xc2\xb8\x9c\x3e\x1b\xa3\x1b\x7d\x42\x3e\x11\x22\xbe\x19\x15\x7f\xa9\xff\x31\x8e\x6e\xf4\x1d\x1b\x12\xdc\x8c\xbc\x3c\x97\x82\x89\x56\x61\x0c\x03\x03\x6a\xba\xec\x59\x55\xd3\x64\x8c\xfe\xdf\x1f\x29\x93\xff\x59\x70\x95\xfd\x55\x7d\x5a\x3c\x61\x3c\x7f\x98\x71\x99\xfd\xdf\x77\x67\xf9\x30\xfb\x55\xb1\xe9\x5a\x39\x51\xc7\x1a\x64\x29\xad\xd3\xa2\xe6\xbd\x02\x3d\xc6\xed\x74\x17\x94\xdf\x91\x98\xc8\xac\xa4\x4b\x16\x06\xd5\xa8\x22\x01\x9a\xfd\xba\x87\xb4\x82\x43\x6e\xf6\xa7\x4f\x3f\x33\x0a\x13\x7c\x8f\x39\x4c\x32\xf0\x64\x2f\xfc\xca\xbd\x64\xdd\xb6\xa0\xeb\xd2\x51\x5e\xe4\xa5\xc5\xad\xbd\xde\xcb\x8a\x49\x19\x01\x67\xc1\x2d\x38\xe6\xb9\x95\x76\xe7\x65\xb5\xa9\x91\x78\x10\x61\x21\x48\xf0\x8e\xe1\xf0\x25\x8e\x94\x27\xcf\x2f\x71\xfc\x38\x95\x3d\xcb\x53\x14\x01\xe9\x10\xf7\x2a\xe7\x57\x64\x79\x4b\x4a\xc8\xe5\xea\xbe\x69\x24\xf8\x1c\x56\xa9\x37\x71\x8b\x38\x75\x4c\xf3\xfc\x72\x79\x84\x7d\xbe\x3e\xcb\x8c\x1d\x0e\x43\x0e\x62\x8f\xe3\xbb\x24\x98\xd0\x72\xef\x32\x7d\x9a\x5b\xca\xbc\xcf\x49\x48\xc5\x24\x6f\xf2\x2c\x3b\x1e\x54\xce\xfc\xf9\xe5\x12\x45\x8c\xdd\xd6\x2b\xd4\x1c\x96\x47\x0b\xdc\xee\xbd\xdf\x8c\x4e\xeb\x23\xd0\x15\xad\x0e\x73\x74\xd0\x62\x0e\x11\x43\x83\x95\xb8\x4a\x24\x89\xc9\x67\xb0\xfa\x2f\x96\x98\x48\x4d\x3e\x59\xc1\x46\x81\xae\x5f\xbd\x5c\xea\x90\x77\x4c\x3e\x6b\x57\xee\xa0\xff\xfb\xea\xec\xc7\xb6\xe7\x08\x2b\x31\x61\x05\x5f\x0d\xf7\xd6\x45\x5d\x05\x3b\xce\xae\xac\x23\x17\x37\xa3\xd3\xe6\x00\xed\x96\xea\x01\xe2\x93\xc3\x5c\xad\x31\x10\x5e\x70\x58\x93\x4f\x0f\x42\x7a\xf0\x98\x6a\x41\x58\x9c\x13\x91\x5d\x81\x71\xae\xfa\xb5\x97\xb4\x91\x86\xb1\xbb\xdb\x74\x05\x11\xc8\x57\x3a\x99\xb2\x59\x9c\xb3\xa3\x2f\x8f\x62\x14\xb9\x89\x23\x9f\x01\x7d\xcc\xbb\xfb\x98\x6f\xc9\x1a\x9e\x28\xf9\x4c\xe8\x66\x22\xb7\x30\xc9\xbf\xf3\x2c\xc4\x67\xf1\x2f\xdb\x64\x4b\xab\xa5\x98\xfa\x29\x60\x21\x9c\xe6\xaf\x7e\x9a\xea\xbf\x72\xfe\xec\xf0\xff\xee\x43\xdf\x0b\x16\x8a\x05\x70\x85\x99\x7e\x11\xf0\x7f\x95\xe8\x39\xbb\x03\xce\x49\x08\x2f\x8b\xe3\xdc\x33\x16\xc7\xd8\xb7\x30\x67\x0d\x87\x57\x39\x49\xf4\x31\xdb\x69\x7f\xfc\xbb\x40\xe5\x69\x71\xa2\xdc\x8a\xec\x73\x2f\x70\x97\x44\x33\xbc\x66\x94\x73\xb8\xda\xe8\x1b\x07\x9c\xf0\xd6\x58\x1f\xa5\x0b\x08\x3a\xfb\x0b\x42\xb4\x82\x35\xe3\xd0\x18\x61\x69\x27\xb3\x22\x33\xd0\xba\x70\xe8\x22\xd3\x9e\x5d\x58\xc4\x7a\xdc\x29\x4c\x8d\xb1\x57\x7a\x89\x47\xd7\x45\x12\xf6\xde\x19\xb3\x7a\x88\xa9\x80\x49\xfe\xf9\x24\xcf\x83\x9b\xac\x19\x9f\x68\x93\x8d\xa3\x7d\xed\xc9\x67\xda\x33\x2b\xff\xf4\x12\x58\xce\xd7\x41\x87\xd1\x99\x99\x9b\xd1\x69\x7b\x8c\xda\x87\xec\x60\xd2\xf1\xc8\xaa\x7a\x01\xc0\xf1\x1a\xc8\xfe\xf4\xea\xb5\xe5\x3e\x53\xbf\x83\xb0\x2e\x5d\x17\x19\x15\x20\x90\x10\xdb\xa2\x5e\x5e\x96\x1f\x4a\x44\x4f\x45\x39\x13\x35\x0e\xf2\x7b\x3e\xa2\x93\xd8\x74\x2d\xf1\xfb\xe1\x9e\x6f\x40\x6a\xdc\xfc\x95\x35\xb0\xdc\xb6\xe6\x19\xb3\xd9\x1e\x79\xe0\x8d\xb9\x13\x69\xa3\x04\xb3\xc3\xc4\xbc\x80\xea\xe1\x7d\x5f\x07\x8d\xf9\xd5\xc2\xba\xb5\xef\xf4\x51\xb2\xe6\x6f\x63\xf1\x16\x76\xf3\x73\xe7\xf2\x15\x2d\x0a\x0e\x1b\xa2\x8e\xd6\xdf\xc5\x29\x75\x8b\x6b\xff\x0d\x55\xad\x7b\x7d\xb8\x89\xee\x30\x27\x98\x66\x57\xe1\x5e\xa0\x8f\x37\xa3\x4d\xf2\xe3\xcd\xe8\x23\x22\x02\xbd\xce\x4b\x95\x2c\x52\x9e\x30\x01\x68\xb9\x3c\x47\x3f\xe4\xdc\x3d\x1b\xab\x6f\x09\x7b\x9e\x7f\xbb\xe0\xec\x8e\x08\xc2\x28\x84\x48\x81\x41\x7d\xac\x3f\x11\x41\xf1\xc9\x87\x2d\x67\xe9\x66\x9b\xa4\x12\x95\xa1\x06\xf4\xe6\x3c\xff\x4c\x16\x9f\x9d\xb1\x48\x3f\xf6\xcb\xa0\x35\x0d\x26\xf3\xfe\xb2\xd0\xf6\x26\xf9\x31\xfb\x4f\xb1\x6b\x39\x3c\xbe\x6a\x73\xc2\x9e\xb7\x9a\x9b\x87\x5c\x6d\x25\x82\x76\x2b\xbb\x14\x6a\x2d\x65\xbb\xa5\x45\x30\x15\xb8\x6c\x92\x1f\xeb\xef\x80\xa6\x71\xbb\xd0\x7d\xf3\x33\x65\x2c\xd9\xf3\xe6\x23\x11\xb4\x1f\xc9\xe7\x55\xab\x58\xa9\x8b\xff\xa4\x81\x51\xdf\x0c\x8a\xde\x09\x15\xe6\x18\x80\x3d\xb0\x61\x8b\xa5\xb8\x26\x53\x34\xd3\x21\x3a\x73\x27\x1a\x6e\x55\x47\xc8\xce\xb0\xe3\x33\x6c\x20\x0f\x9d\x92\xd8\xe2\x79\x66\x7b\x67\xb6\x27\x66\xcb\xda\xb1\x68\xd8\x8d\xb9\x79\x95\xb0\xef\xad\xdb\x31\x83\xb6\xaf\xe2\x12\xa3\xef\xf0\x11\x1a\xde\x69\x23\x48\x67\x3b\x5d\x38\xb4\x23\x74\xd9\x22\x9b\xa3\xe1\xdd\xe1\xa5\xfc\xe5\x20\x35\xad\x6b\xb9\xc8\x95\x92\x31\x72\x8b\xa5\xbe\xc1\x5c\x9e\xba\xe8\x4c\xe3\xb6\x2b\xed\x58\xde\xba\x77\x3f\xba\x9b\xd6\x11\xf1\x4b\xf3\x29\xcf\x81\x9f\x3a\x9a\x85\x31\xa1\x67\xc5\x6f\xf1\xf4\xf2\x6b\x8a\x1b\x45\x83\xc7\xf8\xca\x4a\x60\x98\xee\xd0\x75\x15\x67\xe5\x2d\xa6\x7d\xac\x7c\x9f\x94\x30\xad\x7e\x39\x61\xa2\xf6\xf7\xf4\x69\xa5\x93\x09\x5b\x4f\x0a\x4a\x7e\x41\xc1\x1a\x6b\xed\x90\xf9\xb1\xcc\xdc\x8c\x4e\x8d\xc3\x6d\x84\x0e\xbd\xd6\x12\xa3\xbe\x4d\x6a\x1c\x70\x2e\xe9\xf8\x46\x0d\xe7\x6a\xb3\x58\x45\x2a\x5a\x61\x01\x21\xda\xff\x0a\x82\xfb\xfd\x81\x23\xba\x30\xcf\x20\xc7\x6a\xf1\x8f\xba\xa4\xf0\x7e\x11\xd7\xd7\x47\xbc\x2f\x87\x3b\x1e\x24\xf4\xba\x78\xee\x41\xfb\xc1\x4e\x6d\xfa\x15\x95\xf7\xeb\x4b\xed\x2c\x67\x61\xc8\xe8\xa2\xb8\x33\xe1\x7d\xa6\x55\x6f\xde\x73\xc6\x77\x55\xc3\x35\xe0\xa4\x43\xcd\x5d\x5a\xf2\x10\x72\xa7\x8c\x06\x34\x3b\xb6\x92\xf1\xfb\x74\x2a\x3f\x1b\x73\x98\x9e\xd5\xa0\xd8\x70\x60\xb7\x2e\xd1\x6a\x4e\x37\xbc\xef\xaf\x8c\xe0\x24\xb9\x80\x76\x34\xd1\xa7\xed\x82\xc3\x1d\x81\xfb\x7e\x24\x52\xc9\x96\x01\x8e\x7a\xba\x12\x01\x70\x99\xdd\x1d\xea\xd9\xde\xfa\xa3\x73\x4e\xcd\x61\xd5\x4f\xe8\xb0\xee\xd9\xee\x93\x04\x4e\x71\xd4\x91\xed\xd1\xd9\x7e\x2d\xac\xe7\xcf\x9d\xed\x48\x8c\x37\xf0\x32\x25\x51\xd8\x53\xce\x9f\xde\xdb\x0b\xa8\x1e\xf9\x5b\x1a\x35\xde\xcc\xc8\xb2\x48\xd0\x82\x23\xc3\xe4\xb0\x63\xbe\x01\x86\x86\xac\x1b\x2a\x1f\x1b\x67\x6d\x53\x4c\x66\x78\x3e\x84\xb5\x53\xa6\xa6\xf7\x45\x41\x33\x11\x8b\x5d\x3b\x90\x4e\x60\x49\x51\xad\x46\x26\x0c\xf6\xde\x66\x11\xeb\xcd\x1e\x93\xb3\xa5\x76\xe5\x9c\xd8\xef\xcb\xd3\x34\x5e\xd9\xc2\xb9\x8c\x9e\x83\xda\xee\xbe\xc4\x02\x8e\xca\x47\x2a\x08\x2d\x80\x07\x40\x25\xde\xc0\x6c\xc5\xee\xe0\x68\xba\x22\x61\x32\xaf\x68\x45\x18\x5d\x4a\x8e\x25\x6c\xfa\xfd\x64\x51\xc2\x64\x01\x99\x05\x63\xed\x0c\x07\x3b\x3f\x7e\xa6\xa3\x06\x14\x93\x9e\x0e\xc9\xdf\x53\xac\x9d\x63\x3c\x2c\xca\x01\x6d\x80\x79\x17\x74\xad\x3a\xde\x9f\x38\x97\xa7\xbc\xea\xf1\xa4\x7c\x3c\x75\xbf\x07\xd1\xd5\x59\xeb\xf8\xb6\xd1\xcb\xcd\xe8\xb4\xce\x8e\xe1\xb6\x42\xf5\xa0\xd4\x79\x27\x36\x3f\x7f\x94\x27\x5a\x19\x73\x20\xaa\x85\x32\x8b\x30\x27\xca\xef\xbe\xe7\x29\x00\xfd\x4e\x63\x7b\x75\x60\xdd\xb0\xbc\x63\x01\x8e\x8e\xc9\x2e\xc8\x7f\x9d\x07\x37\x78\x40\x0a\xf6\x51\xf9\xa3\x3d\xc7\x0c\xb5\x27\xed\x8a\x5e\x25\x4f\x2d\xe7\xfa\x4a\x04\x4b\x5d\xe6\x6f\x00\x19\x64\x75\x76\x6a\x9c\xe6\x45\x27\x71\xcc\xe8\x46\x2f\xb6\xfb\xe2\x88\x88\xd0\xde\xb9\x26\xc3\x77\x68\x97\x96\x97\x2d\xde\x4f\x4d\xb3\x90\x8d\xe8\x1b\xc4\x20\x06\x8c\x4a\xce\x22\xd1\x9a\x0b\x1d\xc9\x0f\x2e\xe1\x3e\x57\x9a\x16\x8b\xb6\x7c\xe3\xb6\xfb\x8b\x58\xbf\x9d\x57\x56\x60\xf1\x2d\xf4\x5a\xa1\xcb\xc6\x7d\x0f\x87\x4b\x02\x0b\x2c\xad\x7b\xaf\x4e\x1f\x81\xa5\x3c\xa8\x97\xd7\x9c\xff\x75\x19\x64\x7d\x41\xaf\xb5\x67\x15\x8b\x51\x5b\x56\x2d\x1c\x16\xce\xc0\x7b\x08\x6d\x44\xf6\x69\x3d\xf5\x15\x5e\x1f\x41\x1c\x13\x3f\xf1\xa1\x5e\x9b\x42\x57\xed\x3a\x3f\xf6\x3b\x8c\x2c\x8e\x89\x2c\x5a\x5c\x60\x4a\xd6\x20\xda\x79\x3b\x4e\x13\x4a\x1f\xac\x0d\x1a\x17\x7c\x98\xdf\x37\xe3\x80\xc3\x2b\x6a\xbf\x5a\x76\x44\x7d\x06\x65\x99\xdf\x40\xd4\xca\xc9\x1f\x68\xab\x6f\xd3\x56\x4b\x09\x46\x19\x9a\xf8\x34\x89\x65\x90\x59\xe2\x53\xab\x48\x21\xbd\x28\xed\x54\x56\xd9\xbb\x05\x48\x6a\xa5\x19\xb3\x3b\xf1\xd0\x28\x54\xa4\x96\x66\xb1\xa3\xc1\xc3\x54\x51\x1a\x86\xb3\xda\xec\x34\x54\xeb\xb5\x4d\x4e\x96\xca\x24\x95\x0e\x0b\x84\x2f\xfe\xb3\xdc\x92\x41\x89\x66\x16\xf7\x1b\x5f\x4f\xce\x3b\x35\x8d\x6d\x6c\x14\xe3\xd0\xd0\x0e\x41\x62\x12\xe5\xd5\xb5\xfe\x48\x49\x70\x2b\x24\xe6\xb2\xa8\x54\x5c\x16\xe2\x02\xf5\x45\x13\x32\x38\x2c\x31\x36\x40\x45\xb0\x87\x62\xa5\x06\xde\xf7\xf5\xb2\x6f\xf6\xea\x75\x1c\x53\x7b\x48\xb9\x17\xc0\x20\xc6\x64\xd8\xd5\x65\x1d\xa5\x9f\x06\x9f\x5c\x09\x96\xdb\x47\xe0\x85\x55\x39\xca\xd2\x88\x96\xcb\x37\x6e\xde\xa6\xdf\x78\x53\x3e\xac\x52\x52\x61\x8f\xb0\x3f\x90\x15\x51\x43\x18\xb7\xb0\xdb\xd2\xa9\x09\x39\x4d\xc6\x5b\x78\xed\xd4\xc3\x37\x5f\x68\x9b\x55\xfe\xf6\x37\x44\xb3\x2a\x81\x0f\xb3\x88\x1e\xee\xb5\x66\x63\x96\x10\x70\x90\x22\xcf\x02\x73\x8a\x93\xdf\xc2\xce\xf8\xab\x96\x36\xf3\x94\x7f\xef\xba\xeb\xf2\x42\x93\x8d\x97\x63\x6b\x1d\xb7\xe3\x87\x6f\x2f\x96\x08\x4a\x29\x15\x05\xae\xfd\xeb\x14\xf9\x51\xaf\xe9\xaa\x47\x61\x93\x8a\x32\x2d\xf3\xba\x15\x23\xa2\x68\xbe\x28\x2e\x36\x2b\xaf\x4a\xff\x20\x4e\xf1\x73\xb6\xce\xc3\x3d\x40\xe6\x49\xa1\xea\xaf\x4f\xbe\x3e\xf9\xbf\x00\x00\x00\xff\xff\x49\x01\x4b\xa5\x45\x91\x00\x00")

func schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaJson,
		"schema.json",
	)
}

func schemaJson() (*asset, error) {
	bytes, err := schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0x6, 0xb, 0x21, 0xcf, 0x74, 0xb, 0xea, 0xe0, 0xef, 0x70, 0x94, 0x25, 0xb4, 0x1, 0xc6, 0xfd, 0xa6, 0xf3, 0x34, 0xa6, 0xda, 0xba, 0x57, 0x67, 0x4b, 0x76, 0xf5, 0xfa, 0x38, 0xd7, 0xd9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"schema.json": schemaJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"schema.json": &bintree{schemaJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
