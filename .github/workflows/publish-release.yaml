name: Publish Release per Type (nested jobs)
on:
  workflow_call:
    inputs:
      isReleaseCandidate:
        required: true
        type: boolean
      name:
        required: true
        type: string
    secrets:
      customToken:
        required: true

jobs:
  publish-release:
    name: ${{ inputs.isReleaseCandidate && 'prerelease' || 'release' }}
    runs-on: ubuntu-latest
    steps:
      - name: Free up disk space
        run: |
          echo "Available storage:"
          df -h && echo
          sudo docker image prune --all --force
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          echo "Available storage:"
          df -h
      - name: Checkout
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 #v4.1.2

      - name: Set variables
        id: vars
        run: |
          if [ -z "${GITHUB_REF_NAME}" ] || [ "${GITHUB_REF_TYPE}" != "tag" ] ; then
            echo "Expected a tag push event, skipping release workflow"
            exit 1
          fi

          tag=${GITHUB_REF_NAME}
          echo "GORELEASER_CURRENT_TAG=v${tag}" >> $GITHUB_ENV
          echo "RELEASE_DESCRIPTION=${tag}" >> $GITHUB_ENV

          RELEASE_NOTES_FILE="docs/release_notes/${tag/-rc.*}.md"
          echo "RELEASE_NOTES_FILE=${RELEASE_NOTES_FILE}" >> $GITHUB_ENV
          if [ ! -f "${RELEASE_NOTES_FILE}" ]; then
              echo "Release notes ${RELEASE_NOTES_FILE} not found. Exiting..."
              exit 1
          fi

          # Update eksctl version to release-candidate
          echo "PRE_RELEASE_ID=${tag#*-}" >> $GITHUB_OUTPUT

          cat .github/.goreleaser.yml .github/.goreleaser.brew.yml > .github/.goreleaser.brew.combined.yml

      - name: Setup build environment
        uses: ./.github/actions/setup-build

      - name: GoReleaser Release
        if: ${{ !inputs.isReleaseCandidate }}
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 #v5.0.0
        with:
          version: v1.24.0
          args: release --clean --timeout 60m --skip=validate --config=.github/.goreleaser.brew.combined.yml  --release-notes="${{env.RELEASE_NOTES_FILE}}"
        env:
          GITHUB_TOKEN: ${{ secrets.customToken }}
          PRE_RELEASE_ID: 

      - name: GoReleaser Release Candidate
        if: ${{ inputs.isReleaseCandidate }}
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 #v5.0.0
        with:
          version: v1.24.0
          args: release --clean --timeout 60m --skip=validate --config=.github/.goreleaser.yml --release-notes="${{env.RELEASE_NOTES_FILE}}"
        env:
          GITHUB_TOKEN: ${{ secrets.customToken }}
          PRE_RELEASE_ID: ${{steps.vars.outputs.PRE_RELEASE_ID}}

      - name: get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
