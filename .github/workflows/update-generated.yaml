name: Update generated files
on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 5 * * Thu"

env:
  DEFAULT_BRANCH: main
  UPDATE_BRANCH: update-aws-node

jobs:
  update_aws_node:
    name: Update aws-node and open PR
    runs-on: ubuntu-latest
    container: public.ecr.aws/eksctl/eksctl-build:c48ad877cb885407ce4864ab09874e0b31867f40
    env:
      GOPRIVATE: ""
    steps:
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac #v4.0.0
        with:
          token: ${{ secrets.EKSCTLBOT_TOKEN }}
          fetch-depth: 0
      - name: Setup identity as eksctl-bot
        uses: ./.github/actions/setup-identity
        with:
          token: "${{ secrets.EKSCTLBOT_TOKEN }}"
      - name: Cache go-build and mod
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 #v3.3.2
        with:
          path: |
            ~/.cache/go-build/
            ~/go/pkg/mod/
          key: go-${{ hashFiles('go.sum') }}
          restore-keys: |
            go-
      - name: Update aws-node
        run: make update-aws-node
      - name: Commit changes
        id: commit
        run: |
          git checkout $DEFAULT_BRANCH
          git checkout -B $UPDATE_BRANCH
          git add -u
          if ! EDITOR=true git commit -m "Update aws-node"; then
            echo "changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "changes=true" >> $GITHUB_OUTPUT
          ! git diff --exit-code $DEFAULT_BRANCH HEAD
          git push --force-with-lease origin HEAD
      - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 #v6.4.1
        name: Open PR to ${{env.DEFAULT_BRANCH}}
        if: steps.commit.outputs.changes == 'true'
        with:
          github-token: ${{ secrets.EKSCTLBOT_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.create({
              ...context.repo,
              title: "Update aws-node",
              head: "${{ env.UPDATE_BRANCH }}",
              base: "${{ env.DEFAULT_BRANCH }}",
            });
            await github.rest.issues.addLabels({
              ...context.repo,
              issue_number: pr.number,
              labels: ["kind/improvement"],
            });
