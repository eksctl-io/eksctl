// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/schema.json (45.861kB)

package v1alpha5

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x6d\x93\xdb\x36\x92\xf0\xf7\xfc\x0a\x94\xb2\xb5\x1b\x57\x89\xa3\x75\x9e\x67\x93\x2b\x6f\x6e\xea\xe4\x19\xc7\x9e\x4b\x3c\x33\x67\x39\x49\xdd\x8e\x52\x65\x88\x6c\x49\xd8\x21\x01\x06\x00\x67\x2c\x6f\xf2\xdf\xaf\xf0\x42\x8a\x2f\x20\x45\x50\x1c\x67\x7c\x97\x6f\x12\x49\x34\x1a\x8d\x7e\x43\xa3\xd1\xf8\xd7\x67\x08\x4d\xfe\xc4\x61\x3d\x79\x86\x26\x9f\xcf\x22\x58\x13\x4a\x24\x61\x54\xcc\xce\xe2\x4c\x48\xe0\x67\x8c\xae\xc9\x66\x32\x55\x1f\xca\x5d\x0a\xea\x43\xb6\xfa\x27\x84\xd2\x3c\xfb\x93\x08\xb7\x90\x60\xf5\x78\x2b\x65\xfa\x6c\x36\xfb\xa7\x60\x34\x30\x4f\x03\xc6\x37\xb3\x88\xe3\xb5\x0c\xfe\xfa\xf5\xcc\x3c\xfb\xdc\xb4\x2b\x75\x35\x79\x86\x14\x1e\x08\x4d\xf2\x3e\x63\x96\x45\x3f\x61\x19\x6e\x8b\x57\x08\x4d\x52\xce\x52\xe0\x92\x80\x28\x3d\x45\x68\x12\x9a\x46\xdf\xb3\xcd\x86\xd0\x4d\xe5\xdd\xc1\xc1\x15\x1d\xe5\xad\x8b\xa6\xbf\xd9\x5f\xbf\x4d\xf7\xfd\xc3\x1a\x38\x87\xe8\x8a\x47\xc0\x27\xcf\xd0\x4d\x2b\x0e\xf6\xc5\xcf\x45\x5b\x1c\x45\xba\x67\x1c\x5f\x97\x47\xb1\xc6\xb1\x80\xe2\xa3\x08\x44\xc8\x49\xaa\xbe\x53\x18\x87\x8c\x4a\x4c\xa8\x40\xa1\x9e\x02\x94\x62\x8e\x13\x90\xc0\x05\xe2\x10\x63\x09\x11\x92\x0c\x95\x68\x55\x00\x7a\x1f\x10\x2a\x21\x8e\xc9\x3f\x83\xad\x4c\xe2\xe0\x58\xc0\x9f\x95\x08\xd1\x9c\xa3\x26\xe1\x5b\xa7\x0a\x28\x5e\xc5\xf0\x76\x97\xd6\x5e\x20\x34\x21\x12\x92\xfa\xc3\x12\xcb\x09\xc9\x55\x1f\xd3\xea\xdb\x08\xd6\x38\x8b\xa5\xfa\x60\x52\x7a\xf3\x5b\xf9\xb3\x02\x04\xe6\x1c\xef\x2a\x10\xea\x14\xd7\x88\x21\xb6\x46\xb1\x19\x92\x22\x83\x41\x19\x7d\x21\x00\xd0\xcd\x7e\xd0\x28\x62\xa1\xf8\xf9\x8b\x59\x26\xf0\x06\x66\xa1\x7a\x7e\xaf\x9e\x07\x96\x13\x02\x0b\x62\xf6\xb9\x7d\x60\x68\x1d\xc0\x7b\x9c\xa4\x31\x88\x27\x4f\x4e\xd0\x5b\x86\xc2\x2d\x63\x02\xd0\x9a\xb3\xe4\x19\x7a\x87\x53\xf2\x6e\x8a\xde\xe1\x2c\x22\xd2\xfc\x90\x5b\xa0\x92\x84\x58\x32\xae\x1e\xa8\x99\xe3\x2c\x8e\x81\xbf\xc6\x14\x6f\x40\x3f\x54\x62\x15\x65\x31\xf0\x77\xd5\xc1\x1d\xe0\x82\x43\x83\xfd\x06\xa3\x2d\x87\xf5\xbf\x2f\x27\x83\x07\xb9\x9c\x9c\xd6\x28\xf6\xcd\x0c\x9f\x3a\x46\xfe\x4d\xc8\x22\x38\xc5\x29\xf9\x66\xa6\x7f\x4d\xf3\x27\x8a\x12\x8d\x67\x25\xa2\xd4\xde\x35\xe8\x53\x7b\x5f\x90\xca\x3e\x1f\x2a\xee\x65\x3e\x1e\x53\xd6\x81\x77\xcb\xa4\x25\x73\x3e\x65\xbe\x12\xef\x0b\xde\x29\xf7\xc6\x1e\x94\x84\x9d\xc3\x2f\x19\xe1\x10\x55\x49\x94\x80\xc4\x11\x96\xb8\xc4\x93\x93\x5b\x42\xa3\xf2\x7f\x9c\x92\x1f\x81\x0b\x85\x64\x83\x8a\x6d\x2a\xa4\xd4\xa6\xa6\x41\x3a\x54\x45\x45\x51\x54\x5e\x00\xcd\x92\x0a\xe2\xe6\xe9\xad\x08\x65\x7c\x42\xd8\xec\xee\x29\x8e\xd3\x2d\xfe\x5b\x59\xbd\xfc\xfc\x99\x43\xd1\x4c\xf0\x1d\x26\x31\x5e\x91\x98\xc8\xdd\x3f\x18\xfd\xfd\x34\x9c\x13\xbb\xd0\x65\x52\x91\x87\x81\xec\x54\x9c\x8b\x9a\x72\x14\x59\x9a\x32\x2e\xfb\xe8\xc7\x27\x5e\x4a\x6b\xe1\xa9\x98\xaa\x1a\xc8\xa2\xa5\x94\x90\x9b\x4a\x6b\xcc\x37\x58\xc2\x35\x67\x6b\x12\xf7\x9e\x41\x37\x05\xbf\xad\xc0\x3a\x6a\xf2\x36\x44\xf6\x9b\xb5\x97\x44\xba\x21\x10\x9c\x78\xcd\xfb\xc5\xfc\xb5\x1b\x90\x16\xe1\x87\x13\xbc\xaa\x92\x39\x28\x73\x89\xd6\xf2\xd1\x25\x8b\xe0\x25\x67\x59\x7a\xdc\x8c\xbd\xae\x41\x1b\xc3\xa5\xd0\x92\xa1\x20\x6e\x34\x7e\x48\x73\x6c\x21\x17\x1a\x7f\x42\x37\x01\x2d\xbe\x78\x82\x30\x8d\xd0\x8d\x1d\x19\xda\xbf\x28\x1a\xc1\xad\x08\xec\x6b\xdd\x4e\x8c\x21\x43\x0e\x4c\x96\x93\xd3\x3a\xe2\x4a\x72\x34\x7e\x8d\xf6\x4d\xa4\x96\x93\xd3\xe6\x20\xda\x45\xaf\xb0\x17\x3e\x6c\xfa\x1a\x24\x76\x83\xa3\xe3\xb0\xc4\xa8\xbc\xf0\x2d\xe3\x88\xd0\x35\xe3\x09\x56\x8f\x34\x21\x73\x57\x09\x69\xff\xd2\x31\xdb\x2e\x16\xf1\x9a\xee\x83\xbd\xf6\xe4\x85\x3e\x93\x98\x72\x72\x87\x25\xd8\xd9\xe9\x37\x95\xd7\xd5\x36\x5d\x04\xc4\x71\xcc\xee\xf3\x65\x4b\xa6\x94\x0d\xc2\x68\x9d\xc5\xf1\x2e\xb0\x3d\x17\x2e\x0c\xa1\xe8\x7e\x4b\xc2\x2d\xa2\x4c\xb3\x1f\xda\x62\x81\x58\x26\x57\x2c\xa3\x11\x52\x04\xe3\x14\x24\xc2\x61\x08\x42\x4c\x35\x51\x72\x10\xe6\x99\xf2\x87\xe6\x3f\x2d\x90\x00\x7e\x47\x42\x10\x88\x08\xeb\x1e\x47\xe8\x8e\x60\xf4\xe3\xf5\x19\x02\x1a\xa5\x8c\x50\x29\xbc\x26\xe4\xf1\x8e\xc2\x39\xa7\x02\x42\x0e\x52\xbc\xa0\x21\xdf\xe5\x63\xe8\x31\xad\x8b\x46\x33\x37\x74\x89\x65\xd6\x90\xd1\x4e\xa1\x5f\x98\x26\x4e\x70\x77\x69\xe8\x05\xeb\xc7\xeb\xb3\xa1\x6b\x80\x0e\x67\xd6\xa5\xd6\x6a\xc6\xb8\x86\x73\xbb\x0c\xb9\x75\x5a\xa7\x0d\xec\x70\x68\x3a\xfd\x55\xb7\xbb\xd8\xc9\x0a\xcd\x99\xac\xb9\x2d\xa3\xac\x8e\x30\x12\x44\xe9\x2b\x2b\x33\x53\xc5\xd5\x2b\x40\x1c\xd2\x18\x87\x10\xa1\x7b\x22\xb7\xc8\x12\x0c\xcd\xaf\x2f\x7a\xaf\x8b\xbc\x01\xbb\x56\x44\x2f\x0a\xf9\xe9\x11\x01\xb1\xb3\x3b\xd7\xd2\xd9\xe6\x48\xad\x18\x8b\x01\xb7\x48\x4c\x9a\xad\x62\x12\xfa\x02\xf0\x62\xed\x2a\x92\x6d\x7d\x8f\x32\xb5\x5b\x16\x47\xa2\xd0\x77\x38\x25\x5a\x55\x01\x2f\xb4\x52\xae\xc8\x4a\x26\xac\xf7\xf4\x0e\x02\xee\x9a\x62\xe5\x0e\xf7\x98\xdc\x5c\xda\x58\xf4\xe2\x3d\x84\x99\x02\xf7\x86\xc5\x30\x7f\x73\x79\xc0\x65\xee\x5c\x8c\xd4\xa0\x5d\x03\x4f\x88\x50\x7a\x46\x3c\x57\x66\x00\xf3\xdd\x10\xe8\xd6\x22\xcc\xc3\x90\x65\x55\xde\x45\xde\x5e\xd2\x9e\x4a\x8b\x0a\xd4\xa3\x16\x3d\x16\xc1\x23\x08\x58\x82\x30\x12\xd1\x94\x3e\xb8\xba\x38\x3f\x7b\x20\xb9\xab\x0d\xb9\xff\x50\x0e\x73\x4d\x0d\x9e\x07\x6f\xb9\x86\xdf\xc1\x47\x23\x6a\x05\x1c\xc7\xe8\x62\xfe\x1a\x61\x29\x39\x59\x65\xd2\x84\x2b\x71\x2e\xd0\x9e\x6a\xe0\x10\xb4\x16\xb9\xaf\x71\x74\x0f\x2d\x80\x29\x65\x12\x57\x77\x36\xba\x69\xf1\x70\x11\xa1\xd2\x4e\x8d\x0b\xc0\xbf\x7e\x73\xf3\x39\x96\x12\x87\xdb\x6b\x16\x93\xb0\x21\x27\x6e\x15\x70\x41\x63\x42\xe1\x9c\x85\x59\x02\xb4\xd1\xa1\x6b\x3a\x50\xaa\xc1\xa3\xc8\xb6\x51\xb6\xd7\xf4\xab\x7e\xc9\x2d\x11\xb9\xd7\xaa\xb4\xb4\x26\xbe\x8f\x97\x3d\xbc\x97\x83\x14\x99\xbf\xb9\x7c\x5c\xc1\xbd\x18\xaf\x20\xfe\x64\x99\x8d\xe2\x04\x86\x86\x94\x5a\x01\x8a\x14\x87\xe3\x42\x4d\xbd\x4d\x88\x1f\xfc\x01\x2b\xa1\x86\x7a\xea\x5a\x1a\x49\xbc\xf9\xb4\x58\xc4\xcb\x74\x6a\x26\x72\xf2\x40\x53\x4e\xa6\x6e\x5d\xdd\x25\xed\x6d\xba\xf1\x00\x7f\x74\x2e\x8f\xf4\x84\x8c\x69\x2e\xa9\xb6\x6f\x35\x75\x86\xf2\x15\xa8\x8e\x0e\xe4\x41\x87\x21\x7e\xb4\x3f\xfc\x5e\x26\x75\x51\xe7\xfb\x56\xc3\xca\x3d\x5d\x41\x2f\x06\xca\x81\x8f\x38\x21\x66\xca\x95\x97\x21\xb7\xe0\xa2\x9d\xe7\x04\x1c\x86\xe7\x22\xb8\x8e\x91\x1e\xdc\xae\xab\xcb\x0f\x87\x8d\xd7\xb6\xdc\xe8\x4a\xdc\x22\x30\x26\xc8\x4f\x4e\x03\x96\x83\x44\x43\xf6\x3c\x2b\x3c\xf4\x23\x8e\x49\x84\xee\x30\x27\x98\x4a\x81\x30\x87\x67\xe8\xdd\x72\xf2\xf4\xe4\xe9\xff\x5f\x4e\xde\x4d\xed\xef\xbf\x95\x7e\x7f\x55\xfa\xfd\xf5\x72\xf2\x0e\x7d\x61\x11\x7d\x72\xe2\xe5\x8a\xb9\x7a\x36\xfb\xf1\x7f\xfe\x25\x63\xf2\xef\x0a\x05\xf3\xab\xb6\x5d\x5f\xbc\xfe\x5b\xf7\xeb\xaf\xba\x5f\x7f\x5d\x79\xdd\x3a\x8a\xd2\x2c\xa8\x46\x7d\xb6\xab\x14\xe6\x75\x6e\x50\xe8\x3a\x9e\x7d\xe5\x78\xf6\x75\xcb\x0e\xd7\x51\x96\xcf\x0a\x8e\x83\x77\x1e\xc4\xf6\x14\xc9\x44\x1b\xa0\xc0\x71\x5c\x8a\x5d\xfb\x07\x6c\x7a\x01\x73\x29\xb9\xcb\xf9\xdb\x3e\x16\x44\xad\x79\xef\x71\xff\xa5\xbf\xd7\x44\xe4\xc0\x47\xb4\x20\x97\xf3\xb7\xc8\x82\xad\x9a\x56\xc4\xd2\xaa\xd3\xd2\xcf\x82\x1c\x86\xe7\x22\x6e\x7f\x0b\x8d\xf9\xb8\x1a\x3b\x54\x9d\xac\x49\x88\x25\xcc\x33\xb9\x65\x9c\xc8\xdd\xb9\x63\x93\xb0\xdf\xea\xeb\xa0\x6e\xee\x58\x62\xe5\x11\xc3\xb1\x5d\xfe\xf0\xf6\x72\x14\xcb\xe9\xc5\xa9\xc5\x60\xfa\x90\x7a\x5a\x9d\x5e\x27\xfa\xa3\xb1\x3c\xe2\x80\xa3\x80\xd1\x78\x37\x4a\xd4\xa7\x07\x38\x27\xc3\x67\x2b\x0a\x5e\xf1\xfc\x61\x6e\x45\xcb\x9e\x33\xc8\x7b\xc6\x6f\x1f\xcc\x95\x30\x41\xfc\x47\x8f\xb1\x17\x47\xe7\xd3\xd0\x1c\xe6\x88\xda\xb8\xd8\x5a\xa5\x11\x32\xd0\x91\xb0\x9c\xe2\xa7\x86\x3b\x00\xb9\xd8\xf1\xc7\xeb\xb3\x5e\xca\x37\x93\x6c\x1e\xc7\x4c\x89\xf0\xc5\xf5\xdd\x57\x83\x76\x97\x42\x12\xf5\xdc\xb7\xdf\x10\xb9\xcd\x56\x27\x21\x4b\x7e\xbd\x07\x7c\x07\x8a\x03\xc4\xaf\x26\x73\xee\xd7\xf4\x76\xf3\x6b\x26\x49\x2c\x7e\x25\x29\x05\x79\x72\x71\x7d\x09\x2d\x91\xb5\xb0\x7d\x17\xad\xa3\xf7\xc6\xde\x9b\x5b\x6b\xbf\x97\x1c\x9f\x5d\x9c\xbf\x39\x6e\x7f\xe3\x98\xa1\x0e\x4f\x17\x59\x33\x8e\xf6\xcc\x8a\xd4\x30\x10\x16\x82\x85\xc4\x04\x2c\xa6\x08\x4e\x36\x27\x48\x32\x94\x09\x30\x5b\x95\x02\x52\xcc\x15\x67\xe9\x8f\x15\x80\x9c\xd5\x2c\x7f\x21\x05\x93\xee\x10\x8e\x82\x2d\x6b\xb2\x6f\x1f\x16\xfe\x88\x68\x39\xe7\x94\x0c\xce\x3f\x73\x82\xa3\xb8\x67\x6e\x5d\xc9\xd3\xec\x50\xab\x66\x6f\xd4\x87\xe5\x3e\x4e\x88\x58\x40\x98\x29\x93\x6e\x92\x99\x46\x75\x62\xb6\x98\x9b\xf4\x83\xc5\xf0\x3e\x1a\x1c\x96\x72\x08\x34\xf5\x21\x42\xa6\x07\x93\x00\xb3\x78\xe9\xcd\xac\x7d\x41\x1d\x1e\x69\xc3\x2d\x38\xcc\x2e\x0b\x97\x84\xd5\x90\xcc\x85\x00\x73\x40\x40\xe4\x16\x78\x6e\x15\x4a\x92\xa2\x46\xd2\x14\xa8\x7d\x52\xd6\x14\xc9\x2d\x08\xd0\x40\x6e\x61\x07\x11\x5a\xed\xd0\xfc\x1f\xba\x5d\xc8\xe8\x1d\x50\x02\xb4\x12\x0e\x3d\x4c\xbd\x8f\x8a\xd8\x40\xcb\x4f\x2a\x49\x38\xda\x7c\xb5\xb2\xbd\x63\x2e\xdd\xc6\xa2\x07\x7b\x4f\x3b\x0c\x6f\x4d\xbd\x74\x19\xbb\x4e\x05\x32\xa2\xef\xb2\x89\xd9\x0a\xc7\x56\xb3\x6a\xc7\x03\xc7\x31\x0a\xb7\x24\xce\x5d\x90\x59\x55\x27\x7b\xba\x34\xfe\xf0\x2b\x9e\x4e\x2d\x59\xba\x5f\xb8\xb2\x41\x9e\xf1\x82\x93\x95\x11\xda\x80\xab\xc5\x11\xa5\x06\x49\xbf\x18\x58\x2f\x18\x87\xf7\xa0\xbc\x33\x4b\xba\xc6\x75\x31\x7f\x8d\x38\x8b\xe1\x2f\x02\xcd\xdf\x5c\xe6\x16\x5b\x32\xc4\x33\x8a\x52\x16\x09\xc4\xa8\x64\x39\xce\x7e\xe3\x3d\x0a\xf6\x61\x4d\x0c\x31\x84\x92\xf1\x31\x33\xf4\x17\x16\xe6\x18\xae\x9b\x31\x37\x7a\xc6\x79\x16\x83\x4e\xc3\x34\x38\x23\xe5\x3b\xc6\x0c\xeb\xf3\x36\xf9\x71\xa4\x23\xe8\x7c\x5c\x4f\x3e\x66\xee\x31\x1c\xd0\x33\xc9\xb0\xb9\x10\x89\x2d\xcb\xe2\x28\x67\xac\x88\x21\x6a\xd6\xa1\x48\x67\xef\xe9\xdd\x7e\x2b\x76\x86\x22\x10\x15\x34\x39\x41\x17\x6b\x44\x19\xd5\x92\x78\x47\x22\x88\xa6\x5a\x61\xe5\x16\x4f\x19\x27\xd5\x30\x8f\x3f\xde\x93\x38\x46\x2b\x50\x7d\x45\x7e\x13\xf4\x48\x50\x76\xce\xf4\x23\xde\x10\xa9\xd0\xf0\x07\x61\xce\xa7\x49\xbc\xd1\x43\x9c\xff\xb4\x40\x1c\x04\xcb\x78\x08\x7e\x8b\x17\x0f\x48\x0f\xb2\x2d\xed\x52\xe0\x4e\xbd\xd6\xed\xaa\x8c\x17\xbe\x37\xfa\x43\x58\x96\x93\x92\xd0\x8d\xd0\x2c\x53\xd1\x1a\x85\x2a\x71\x2b\xaa\x7e\x4a\x6a\x60\x27\x1d\x7e\x42\xa1\xb2\x7b\xf9\x0b\x26\x1d\xa0\xb7\xd3\xf0\xa8\x93\x6a\x2a\xe4\xfd\x2e\x5b\xe9\x73\x00\x20\x90\x46\x1a\x15\x6c\x54\xb2\xbb\x35\xa3\xe0\xa7\xc4\x46\xe8\xa1\x67\x22\xd0\x80\xbc\x9d\x36\x4c\x0b\x70\xfa\x90\xb1\x3d\x48\x31\x22\x25\x86\xc1\x1f\x21\x7c\xdf\x95\xdb\x32\xaa\x52\x38\xc2\x77\xe9\xab\x12\x86\x3a\x2d\xb9\x42\x78\x49\x7a\xe5\x64\xae\x18\x93\x42\x72\x9c\x36\x57\x18\xa8\xdd\x41\xcc\x3f\xee\x62\xb8\x9b\x0b\x2a\x24\x8e\x63\x73\x8c\xe7\xbf\x32\x12\xde\x0a\x89\xb9\xcc\x5d\xfc\xe2\x20\xd7\x86\x48\x96\x8a\xd9\xe7\xa4\xf8\x3e\xc0\xc1\x2f\xc5\xf7\x81\xfd\x3e\x20\x34\xd8\xb1\x8c\xe7\x47\x59\xfd\x0e\x7b\x35\xce\x72\x0d\xec\x75\x39\x39\x3d\x30\xae\xf6\x43\x60\x6a\x06\x70\x55\x2b\x77\xd0\xf8\x2a\xff\xba\x93\xc8\x2f\x4c\x61\x82\x37\x90\xb2\x2e\x82\xae\xe3\xec\xfd\xf8\x04\x53\x50\x97\x93\xd3\x12\x0e\xed\x83\xe7\x90\xb2\x7e\x03\x57\x70\x3e\xe5\x41\x7b\xa9\x2c\x5e\x1d\xec\x9e\x47\xa6\x1d\x32\x3a\x8a\x2e\xb3\xc7\x57\x75\x34\xc2\xb5\xe3\x5d\xae\x7f\xa0\x4f\xc6\x29\x86\x7f\x49\xe4\x55\xaa\x96\xa8\xfb\x8d\x42\x1d\xd3\x88\x09\xbd\x55\xef\x89\xc9\x23\x56\xdf\x21\x35\x34\x41\x24\xe3\xbb\x13\x74\xf3\x52\x13\x12\xbd\xcc\x48\xa4\x24\xdf\xd0\xb5\x24\x6f\xa5\xa3\xba\x87\x26\xe9\xa3\x22\x5e\xe2\x88\x26\xce\xcb\xc9\x69\x79\x5c\x7b\x3e\xc8\x95\x70\x2d\xf9\xbb\xa4\x8f\xdb\xdc\xa5\x3d\xd7\xb4\xf8\x39\x6d\x29\x8e\x3b\x84\xf9\x8a\x48\x8e\xf9\x0e\xfd\xe7\xe2\xea\x72\xf6\xdf\xf3\xd7\xdf\x17\xd9\xdd\x62\x8a\x44\x16\x6e\x11\x16\x48\x47\xf3\x1c\xe5\x2e\x18\xd7\x99\x73\x3a\x2d\x9c\x80\xef\xce\xdd\x43\x22\xe0\xf0\x90\x72\x02\x37\x4e\xa6\x8f\x1c\x20\xc3\x09\xf9\x16\x27\x24\xf6\xcc\x68\xae\x1e\x2b\x4f\x21\x24\xeb\x1d\xba\x09\x33\x21\x59\x82\xe6\xaf\x2f\x4a\x05\x72\xf4\xb3\x00\x27\x24\xb0\x45\x18\x66\x4f\xa6\x68\xa9\x43\xa7\x81\x10\xc9\x72\x92\xff\x53\xbf\x18\x47\x4b\x9d\x30\x4b\xc2\xe5\xc4\x4b\xb3\xe5\x48\x34\x6b\x44\x34\x11\x58\x4e\x4e\x4b\xa8\x2a\xae\x9e\x22\x93\x29\x96\x63\x65\xfe\x95\x9f\xe6\x4f\x18\xb7\x0f\x0d\x96\xe6\xb7\x67\x10\xeb\xd1\x14\x0c\xe9\x9a\xd5\xef\x49\x42\xa4\x39\x98\x6e\xdc\x34\x4d\x60\x12\xa2\xf9\x3f\xf6\xb3\xab\x28\x23\x42\x1c\xeb\x52\x40\x1f\x18\x85\x00\xdf\x63\x0e\x81\xa1\xa3\x79\xe1\x67\xa1\x4c\xb7\x8d\x59\xec\xd3\x91\x3d\xaa\xde\xc0\xb6\xdd\x66\x47\x20\x94\x00\x9d\xe1\x14\x87\x44\xb6\xca\x80\x42\x78\x03\xfc\xc8\x02\x1b\x85\x0c\xb7\x96\xd8\xd0\x46\x98\x86\xba\xbc\xd0\xa8\x3b\x75\x8f\x7a\x45\x7b\x70\x75\x98\xe0\xf7\x0b\xf2\xa1\x95\x22\x9d\xb3\x93\x10\x3a\xb8\xed\xe8\x99\xcd\x76\x1f\xc4\x26\xcd\x38\x4a\xd6\xd5\x13\x35\xba\xe4\xd3\xfa\x67\x37\xf9\xe6\x0a\x2d\xa0\x16\xd2\x79\x97\x86\xc1\xfe\xf1\xec\xf3\x4c\x40\x5e\x68\x20\xb0\xb1\xa5\x60\xcd\x78\xa0\x59\x14\xc7\xfb\xaa\x0f\x4f\x74\x4c\xb1\xf8\xeb\x25\xc0\x16\xaf\x86\x04\x0f\x46\x66\x39\x39\x6d\x8e\x51\xd7\x23\xe9\x40\xb2\x34\x17\xda\x49\x6c\x09\x78\x8b\x9e\x45\x91\x0a\xd9\x5d\x2c\x5e\x7d\x72\x11\xd5\xc3\x29\xe6\x2c\xce\x12\xe8\x23\x27\x5d\x0c\xb9\x21\x1b\xbc\xda\x49\xcf\xb8\x6c\x4b\xab\x12\xd6\xff\xf6\xd7\xb1\x62\xb0\x7b\x67\xa7\x4d\xe9\x76\x1a\xe9\x0e\xc3\xe1\xd0\x38\x0e\x05\xe6\x26\x79\x8d\x1f\x9b\x6a\xbb\x53\x83\xd4\x59\xb0\x66\x99\x1a\x8e\x60\x8d\xfc\x1c\x52\x0e\x02\x74\x76\x3e\x45\x2f\xbe\x5b\x04\x8d\xd2\x3d\xe8\xed\xd5\xf9\x15\xd2\xa9\xfc\xc5\xae\x3f\x4d\x70\x9a\x42\x84\xd6\x04\x8c\x73\x1c\x21\xb9\xe5\xec\x5e\x01\x01\xce\x59\xff\x64\xcd\x07\x43\xa0\xea\x46\x83\xe4\x24\x14\x67\x2c\x8e\x21\x94\xd5\xe3\x14\x2d\x7e\xf4\x86\x63\x9a\xc5\x98\xab\xe9\xed\xed\x4e\x97\x1b\x8d\x69\x39\x12\x83\xff\xef\x9f\x58\xe4\x25\x7f\x65\x6a\x38\x06\x33\xca\x2a\x5f\x6f\x26\xac\x76\x66\x87\xc1\xf8\x81\x45\x4d\x0f\x5d\x59\x49\x17\x34\xd9\x17\x41\x32\xd5\x3b\xb7\x52\xa6\xe2\xd9\x6c\xa6\xfe\x9d\xe0\x7b\x71\x82\x13\xfc\x81\xd1\x93\x90\x25\xb3\xf9\x4f\x0b\x5d\x39\xee\xdb\xbc\xcd\x4c\xad\xb6\x85\x9c\xfd\x20\x80\xeb\x75\xf0\x0c\xdf\x8b\x60\xcf\x02\x01\x16\x81\x1d\x53\x58\x30\xd8\x89\x62\xf6\xfe\x6b\xfe\x43\xc3\xd8\x9b\xd3\x8f\x84\xba\x5a\x23\x35\x29\xd7\x8c\x00\xe4\x19\xc0\x3d\x42\xb1\x1f\x3f\xc3\x74\x8c\x8c\x41\x2f\x8e\x77\xe4\x24\x8d\xc2\xe5\x26\x06\x71\x71\xae\x15\xdd\xd9\xc5\xf9\x1b\xcf\xe8\x45\xb9\x65\x75\xfa\x1e\x30\xb0\x30\xaa\x06\xfc\x23\x50\xf1\x7b\x04\x2a\xc4\xa6\xcb\x72\xa2\x0e\x1b\xd4\x52\x68\xb1\x01\xcd\xdb\x02\xfd\x11\x47\xe9\xc5\x66\x1f\x35\x8e\xb2\x62\x52\xc6\xc0\x59\x78\x0b\x3d\x73\xaa\x0b\xbd\xf3\xbc\xdc\xb4\x53\x78\x17\xaf\x8a\x70\x38\x08\x24\xc4\x36\xaf\xe1\x64\xf2\x5f\x88\x18\xb8\x60\xf5\x02\xec\x1c\x7e\x18\x63\x21\x48\xf8\x3d\xc3\xd1\x73\x1c\xab\xc5\x04\xbf\xc4\xc9\xe3\x64\xc7\xb9\x4d\xd8\x07\xa4\x37\x5b\x57\x16\x5f\x61\xb2\x78\x15\x1b\x14\xfe\x87\x3f\x29\xbd\x81\xb7\x90\x53\x6f\x5f\x9c\x5f\x2e\x8e\xd0\xf5\x37\x67\x46\x71\xe2\x28\xe2\x20\x44\x6b\x4c\xc4\x6a\xdd\xbc\x7c\x70\x44\x45\x60\x9b\x3c\x31\x89\x2a\x8a\x09\xce\x2f\x17\x28\x66\xec\xb6\x5a\x63\x6f\xc0\x76\x5b\xff\xde\x97\x93\xd3\xea\x08\x74\xc4\xe3\x30\x46\x87\x4f\x56\xa6\xd9\x19\x87\x88\x34\xf3\xfc\x3c\xa8\x5b\x92\x97\x9b\xb7\xff\x0f\xfd\x40\x63\xa5\x6e\x20\x3a\xe8\x59\xbf\x38\xfb\xb2\xe9\x93\xae\x32\x2e\x24\x5e\xc5\x10\xa4\xc0\xb5\xc3\x49\x43\x08\xf2\x85\xb9\x08\xb2\x1c\x7c\x90\xb0\x08\x8c\x67\x3d\x45\x77\xfa\x70\xb9\x3e\xe2\xa7\x28\xf2\x36\x50\xf8\xa3\xa2\x95\xd7\x44\x95\xc6\xd3\xdb\xd3\x1e\x6b\x28\xcb\xc9\x69\x99\x84\xc6\xca\x1f\x1a\x9c\x73\x6a\xc7\x08\x67\x47\x44\x28\xf4\x2f\x5e\x9f\x2f\xee\x9e\x1e\x13\x9f\xb4\x4e\xa4\x40\xea\x07\x08\x29\x4c\xd9\x25\xd8\x97\x0d\xc9\x6b\x58\xd8\x44\x22\xdd\xe5\x97\x48\xb2\x5b\xa0\x7e\xb3\x77\x64\x57\x4e\x3a\xc0\x4a\x5c\xa5\x92\x24\xe4\x03\xb4\x2e\x22\xfa\x90\xc1\xd4\x5c\x15\xe8\xe6\xc5\xf3\x85\xde\xc0\x4d\xc8\x07\xbd\x9e\x1a\x26\x2a\xb0\x12\x01\xcb\xf1\xaa\xad\x31\xfb\x90\x2a\x47\xe7\x38\x2e\x6f\x62\xb1\x9c\x9c\xd6\x07\xd8\xee\x2e\x3c\xc0\x96\xc9\x38\x67\xa9\x1d\x80\xaf\x39\xac\xc9\xfb\x07\x01\x3d\xfa\x36\x4f\xa1\x1e\xce\x89\x30\x67\x9e\x7b\x17\xed\xdd\x53\xda\x09\xc3\xd9\xdd\x6d\xb6\x82\x18\xe4\x0b\x7d\x7a\xa6\x7e\x39\x44\x47\x5f\x1e\x15\xe3\xac\x15\x27\x1f\x00\xbd\xb3\xdd\xbd\xb3\xce\x5a\x6d\xe1\x46\x3e\x10\xba\x09\xe4\x16\x02\xfb\x9d\x67\x6d\xf4\x96\xe5\x58\x13\x6c\x61\x98\x15\x52\xa6\xde\x88\x7d\x95\x97\x19\x31\xf8\xb5\xb3\xff\x27\xbf\x1b\x77\xcd\x22\x71\x0d\x5c\xf1\xcc\xb0\x4d\xb9\xff\x2d\x1b\x7a\xec\x0e\x38\x27\x11\x3c\xcf\x13\x98\xce\x58\x92\x60\xdf\x7b\x12\x2a\x7c\x78\x65\x41\xa2\x77\x26\xdc\xf5\xee\x2f\x02\x15\xf9\x51\xa9\xf2\x9c\xcd\xe7\x5e\xcc\x5d\x00\x35\xfc\x6a\x20\x5b\x76\x6d\x83\xef\x1c\x70\xca\x1b\x63\x7d\x94\xab\x1c\xd0\xa9\xf6\x10\xa1\x15\xac\x19\x87\xda\x08\x0b\x3d\x99\xfb\x09\xf5\x0a\x13\x7d\x68\x3a\xb0\x8b\x16\xb2\xfe\xb1\x31\xfc\xb8\x36\x86\xcb\x27\x3e\x7b\x9e\xfb\xdd\xef\x11\xbf\x6c\x2b\xa8\xff\xc7\x76\xb3\xc1\xdd\x55\xed\xe1\xd3\xc1\x9e\x6f\x40\xea\xd9\xf9\x3d\xcb\xc1\xf6\x8b\xf1\x18\x64\x4d\xb0\x65\xe4\x08\x4f\x2f\xd0\x4e\x0a\x9a\xbd\x6f\x7b\x97\xc0\xe1\xd5\x55\x07\x8c\x8b\xab\xeb\xd6\x18\x51\xa7\x27\x60\x9a\x7f\x97\x88\xef\x60\x77\x71\xde\xbb\x2a\x58\x03\x42\x8f\x65\x47\x47\xeb\x4f\x22\xe3\xa2\x81\xb5\xff\xb2\xa5\x4f\x35\xc2\x4d\xfa\xe5\x72\xf2\x0e\x11\x81\x5e\xda\x0a\x70\xd7\x19\x4f\x99\x00\xb4\x58\x9c\xef\x2b\xf7\xe9\xaa\x84\x84\x3d\xb5\xdf\x5e\x73\x76\x47\x04\x61\x14\x22\xa4\x98\x41\x7d\xac\x3f\x11\x61\xfe\xc9\xdb\x2d\x67\xd9\x66\x9b\x66\x12\x15\x0b\x7a\xf4\xea\xdc\x7e\x26\xf3\xcf\xce\x58\xac\x1f\x8f\x5b\xe0\x70\x93\x7e\x59\x2d\x41\x78\x78\x7c\xe5\xe6\x84\x3d\x6d\x34\x77\x0f\xb9\xdc\x4a\x84\xcd\x56\xed\x54\xa8\xb4\x94\xcd\x96\x2d\x84\x29\xb1\xcb\x26\xfd\xb2\xfa\xce\x5d\x32\xb1\xfe\x99\x52\x96\xec\x69\xfd\x91\x08\x9b\x8f\xe4\xd3\xb2\x56\x1c\xab\x5c\xe2\xff\xc1\x6c\xa0\xea\xe8\x5d\xe3\xae\x2e\xfb\xdb\xe3\x21\x6d\x21\x98\x76\x1f\xea\xd0\xb6\x62\x5b\xec\xcd\x1d\xba\x76\x6b\x25\xb7\x7e\xee\x30\x3d\xed\x26\xc1\x6d\x6b\xda\xd7\xc1\x4d\xff\xa6\xcf\x06\x51\x87\x5f\xd1\xb6\xbd\x76\x68\x35\xd6\x67\x79\xea\xde\x6c\xe9\x0e\xed\xb4\xc6\x88\xed\xf3\x51\x6e\x83\xa9\x1c\x77\x29\x15\xee\x93\x5b\x2c\x75\x1d\x99\x62\x3f\x52\x1f\x66\x69\xfa\xf8\x3d\x2f\x86\x19\xdc\x8f\xee\xa6\x91\x3c\xf1\xdc\xbd\xff\x79\xe0\x36\xe4\x79\x94\x10\x7a\x96\x5f\xd0\x3a\xc8\x0d\xca\xcf\x54\x8f\x1e\x78\x2b\xea\xb1\x62\xba\x43\x37\x65\x06\x2c\xce\x71\xef\x03\xd8\xfb\x74\x9d\x59\xf9\xcb\x80\x89\xca\xff\xd9\xe7\xa5\x4e\x02\xb6\x0e\x72\x48\x7e\x91\xba\x0a\x6a\xcd\x38\xf6\xb1\xc8\x2c\x27\xa7\xce\xe1\x1e\x73\x08\xce\x39\xdf\xae\x69\x1c\x51\x96\x74\xd0\xa1\xc2\xe7\x6a\x55\x5c\xe6\x54\xb4\xc2\x02\x22\xb4\xbf\x3f\xac\xff\x21\xde\x23\xba\x70\x4b\x50\xcf\x7b\x96\x1e\xf5\x65\x1c\x7b\x13\xa9\x4f\x31\x7a\x97\xe8\xe9\x19\xdd\x1f\x54\xfe\xc7\x03\xf6\x83\x6d\xa5\x0c\xbb\x8e\xc9\xaf\x2f\xb5\x10\x9d\x47\x11\xa3\xd7\xf9\x29\x3b\xef\x8d\xa6\x6a\xf3\x81\x12\xdf\x75\x8f\x84\x83\x4f\x3a\xa6\xb9\x6b\x96\x3c\x88\xdc\x49\xa3\x11\xd5\x4e\xdb\x65\x4b\xfb\x44\x43\x3f\x1d\x73\x18\x5e\xab\x42\x69\xe3\x83\x76\xed\x12\xaf\x2e\xe8\x86\x0f\xbd\x9f\x0f\xa7\xe9\x6b\x68\x86\xf8\x7c\xda\x5e\x73\xb8\x23\x70\x3f\x0c\x44\x26\xd9\x22\xc4\xf1\x40\x57\x22\x04\x2e\xed\xdd\xf9\xc3\xda\xb7\xde\x33\xde\xab\x39\xac\x86\x11\x1d\xd6\x03\xdb\xbd\x97\xc0\x29\x8e\x3b\xb2\x8c\x3a\xdb\xaf\x45\xeb\xa6\x70\x67\x3b\x92\xe0\x0d\x3c\xcf\x48\x1c\x0d\xa4\xf3\xfb\x37\xed\x65\xec\x8f\xbc\x85\xae\x82\x9b\x9b\xb3\x5a\x28\xd8\xc2\x47\x0e\xe1\x68\xe7\xf9\x1a\x33\xd4\x68\x5d\x9b\xf2\xa9\x53\x6a\xeb\x64\x72\xb3\xe7\x43\x68\x3b\xa5\x6a\x06\x1f\x2d\x77\x03\x69\xd1\x6b\x07\xf6\xf8\x5b\x92\xb7\xcb\x71\x0d\x87\xbe\x6f\xd3\x88\xd5\x66\x8f\xc9\xd9\x52\xcb\x6f\x4e\xda\x2b\x06\xd1\x2c\x59\xb5\x45\x7f\x19\x3d\x07\xb5\x0e\x7e\x8e\x05\x1c\x95\x2c\x95\x03\xba\x06\x1e\x02\x95\x78\x03\xf3\x15\xbb\x83\xa3\xe1\x8a\x94\x49\x5b\x57\x94\x30\xba\x90\x1c\x4b\xd8\x0c\xbb\xec\x33\x65\x32\x67\x99\x6b\xc6\x9a\x69\x07\xed\xf8\xf8\xa9\x8e\x0a\xa3\xb8\xe6\xe9\x10\xfd\x3d\xc9\xda\x39\xc6\xc3\xa4\x1c\x51\x07\xb8\x57\x41\x37\xaa\xe3\xfd\x36\x70\xb1\xf5\xaa\x1e\xef\xf3\x01\x3d\xaa\x82\x74\x75\xd6\xd8\x53\xad\xf5\xb2\x9c\x9c\x56\xd1\x71\x9c\xe3\x29\xef\x5e\xf6\x5e\x89\x5d\x9c\x3f\xca\x0d\x30\x83\x1c\x88\x72\xb9\xf2\x3c\x1c\x89\x6c\x79\x15\xbb\x2f\x3f\x6c\x2f\x7b\x50\x07\xad\x0b\x96\xef\x59\x88\xe3\x63\xb6\xfc\xed\xbd\x96\xb8\x86\x03\x52\x6c\x1f\x17\xd7\x5d\x1e\x33\xd4\x81\xb0\x4b\xf3\x2a\x79\xd6\xb2\xd9\xae\x48\xb0\xd0\xc5\x96\x47\xa0\x81\xa9\x34\x58\xc1\xd4\x96\xfe\xc6\x09\xa3\x1b\x6d\x6c\xf7\x25\xaa\x11\xa1\x83\x13\x40\xc6\xef\xb0\x9d\x5a\x5e\xba\x78\x2f\x9a\x6e\x22\x3b\xb9\x6f\x14\x85\x18\x32\x2a\x39\x8b\x45\x43\x16\x3a\x8e\x68\xf4\x09\xf7\xf5\x85\xd9\xa2\xd1\x16\xaf\xfa\xad\xfe\x62\x36\x6c\xe5\x65\xca\x5c\x7f\x07\x83\x2c\x74\xd1\x78\xe8\x5e\x72\x01\xe0\x1a\xcb\xd6\xb5\x57\xa7\x8f\xa0\x8b\xa0\x56\x8a\x9c\x5f\xfc\x7e\x69\x5d\x43\x99\x5e\xcf\x5e\x2b\x59\x9c\xb3\xd5\x3a\x0b\x87\x89\x33\xf2\x1a\x42\x2b\x91\xfd\xc1\xa3\xaa\x85\xd7\x5b\x10\xc7\xc4\x4f\x7c\xa0\x57\x44\xe8\xaa\x59\xd0\xaf\xfd\x74\x2f\x4b\x12\x22\xf3\x16\xaf\x31\x25\x6b\x10\xed\x87\x4c\xfa\xa8\xf4\x33\x0d\xd2\x5e\x96\x23\xb6\xe8\xdb\x38\x7b\x8f\x92\x1c\x72\x6e\x60\x5f\x12\xa9\xab\xd4\x21\x46\x91\x2d\x63\xe7\xa5\xc7\x87\xf7\xe2\x94\x26\xbd\x4d\x7b\x44\x7e\x84\xea\xc8\x94\x5a\x95\x0c\xdd\x02\xa4\x48\x72\x1c\xde\x22\xb6\xd6\x98\xfd\x45\x20\xb1\xa3\x21\x4a\x39\xd3\x6b\xde\xbf\x1b\x1d\x48\x04\x52\xeb\xbe\x3b\x1c\xdb\xab\xae\xed\xde\x1f\xa1\x1b\x14\x04\x1b\x22\x03\xd5\x2a\x90\x78\xa3\x07\x6a\x1e\x51\x26\x41\x04\x1c\xd6\xca\x2a\x29\xe0\x5e\x74\x7b\x3c\x88\x3e\xd4\xbd\xd0\x55\x36\xb1\x45\xf5\xf6\xc5\x5f\xef\xb7\xc0\xf5\x91\x12\xcb\x0f\x86\x73\x4c\x29\x0a\x40\xaf\x20\x4e\x50\x2e\x0e\xe6\x66\x9c\xb5\x2f\x89\x1f\xa4\xcf\x1e\x17\xb0\xe2\xe8\x8a\xb6\x9f\xb4\xee\x23\xba\x6a\x3d\xc6\xb3\x50\x1a\xfc\x24\x2b\xdd\xc7\x96\xb0\xc8\x5c\x80\x15\x72\xd0\x89\x64\x5b\x40\x11\xa4\x31\xdb\xa1\x5b\xd8\x21\x2c\xf6\xdf\x7a\x11\xeb\x21\xba\xec\x97\x2d\xaa\xbc\x28\x45\xfa\x63\x09\x96\xeb\xea\xca\x34\x7a\xd3\xc0\x0d\x65\xa0\x59\x6d\xd3\xea\x0d\x85\xe7\x94\x36\x17\x8d\x5c\x8c\x36\x8a\x35\xf5\x29\x9b\xa9\xe8\x93\x57\x22\x2d\xea\x91\x1b\x1d\x56\x2a\xa4\x9f\x8b\x55\xb5\x66\xa6\xd2\x41\x4a\x47\xf5\xdf\x2d\xfd\xf8\x98\x55\xac\xf8\xb5\x49\x13\xb2\xca\xa4\x97\x2b\x5c\x90\x3f\xbf\xaf\xc6\xde\xdc\xfd\x28\x57\xfb\x36\x57\xa3\xba\x1a\xcf\x6f\xba\xcc\x8f\xfe\xd9\xdc\x8e\x24\x13\x12\xad\xc0\xd4\x4d\xb5\x67\x69\x8b\x4b\xf9\x8c\x7b\x94\xe7\xf4\xc5\x19\x98\x0b\x90\xaa\x75\x50\xa6\xa8\x74\x86\xde\x94\x58\x65\x1b\xbf\x0c\xcc\x47\x81\xb0\x53\x93\xd9\x5e\xc6\x38\xf0\xa8\x55\xad\x66\xf2\x35\xc2\x68\x9d\xc5\xf1\x2e\x4f\xeb\x1f\x76\xde\x62\x28\xdc\x0e\x1d\xee\xa5\x0a\x73\xda\x4c\x7b\xc9\xc9\x28\x2a\xad\x7c\x7d\x42\x33\xea\x77\x68\xf4\x3e\x97\x33\xf4\x87\x5e\x53\x2d\x8d\x6b\x9b\xda\x74\x0a\xcb\x64\x9a\xc9\x1e\x6b\xd4\x2e\xe6\xba\xd2\x40\x50\x44\xb8\xbe\x84\x60\x57\xdc\x7d\x92\x72\xa6\x64\x01\xa2\xbc\x4a\x39\x92\x90\xa4\xfa\xe0\x2a\xfa\xc2\xdc\x29\xbd\xbf\x7c\x09\x85\x26\x0f\xce\x2f\xef\xe8\x41\xfb\x2e\x31\xe9\xc9\xec\x9b\x52\x99\x76\xa5\xdd\x03\x65\x51\x5b\xcb\x8e\x9b\x6c\xe0\x23\x88\x6a\xef\x9d\xd1\x95\xde\xd1\xa2\x5c\xea\xfd\x04\x9d\x61\xaa\xb4\x0f\x46\x2b\x8e\x69\xb8\x9d\xea\xfb\x53\xf4\xfd\x6d\x7a\xd1\xb4\xc5\x95\x2d\xbd\xde\xb7\x61\x8d\xd3\xd7\xe1\xdb\xa2\xf4\xe2\xfd\x08\xd2\x5c\xe2\x04\x14\x0a\x3f\xbc\xf9\x1e\xb5\xa3\xee\x45\x81\x21\x20\xcb\x03\xad\xbc\x80\xf7\x38\x49\x63\x2d\x6a\xb5\x6c\x6b\x9c\xa6\x41\x04\x77\x63\x24\x4e\x5b\x2a\xba\x98\x6e\xea\x94\xef\xb1\xdd\xb9\x08\x24\x26\xb1\x2d\x6e\xfe\x4b\xe3\x42\x82\xa2\x0e\x3a\xa8\x2f\xea\x6e\x12\x8e\xa2\xf2\x1a\xbe\x54\xfb\x7c\x88\xff\xf6\x50\xa8\x54\xb4\xea\x9b\xea\x55\x02\xed\x77\x5b\x68\x39\x39\x82\xbd\xdf\x6e\x01\x6d\x88\xb4\x02\x87\x32\x1a\x01\xb7\xd7\x99\xe4\x78\xd7\x0c\x03\x51\x26\x38\xbf\x60\xca\x08\xa6\x72\x5c\xff\xac\x43\x27\x10\xd9\x2b\x60\x13\xec\x6d\xde\xc7\x43\x05\x27\xe9\xdf\x0f\xa3\x73\x50\x77\x40\x82\xc9\xb1\x71\x1c\x0d\xc3\x8e\xa2\x7c\x2b\x97\xe2\x02\xab\xd5\xc2\x2d\xa6\x1b\xcf\x13\x3c\xc7\x80\x3e\x38\xee\x75\x9c\xbd\x3f\xd2\x4a\xab\xb9\xdc\x9b\xc9\xf2\x54\xea\xa5\x79\xd7\x3c\xde\x73\x35\x8b\x74\xba\x0f\x5e\xcc\xbc\xd9\xe8\xa1\xba\x3e\x5c\xdf\x19\xcb\xed\xa3\x5c\x21\xbd\x51\xeb\x4b\x72\x07\x48\x63\xa8\x4f\xeb\xd9\x7d\xa8\xda\x02\xd2\x5e\x65\x64\x5e\xe8\xfb\x24\xf2\xa5\xa8\xa6\x52\xc2\xa8\xfa\x4e\xf1\xd8\x9a\xd0\x08\x95\xee\x44\xaa\x04\x4c\x71\x9a\xc6\x3b\x4b\xc8\x9b\xa5\x3e\x4d\x10\x88\x9d\x90\x60\xab\xe8\xad\xb0\x80\xe5\xe4\x67\xaf\x99\xfd\x5d\xc7\x60\x4e\x45\x95\xc6\x51\xad\xbb\xa7\xc6\x63\x7e\xfd\xdc\x79\xc0\x7b\xb1\x78\xd5\x6f\x9f\xa6\x6b\x32\x55\xf3\xdc\x8c\xe4\xce\xf9\x62\xf1\x4a\x47\xb2\xf6\x77\x72\xe1\x4c\x6e\x81\x4a\x12\x56\x2f\xc7\x3f\x4c\xe7\x63\xc1\x1f\x94\x92\x8c\x1f\xa3\x56\xdf\xda\x09\x57\x28\x29\x17\xca\x62\xda\x98\x7f\x3d\xd7\xf6\xa8\x40\xc5\x10\x57\x54\x80\xb7\x6e\x79\xa8\xae\x07\x78\x78\x1b\x22\xff\x63\x7f\xd8\xe1\x19\xe3\x9b\x99\xbe\x6c\xc7\xed\xf1\x95\x27\x40\xb4\xa7\x1e\xf6\x34\x6c\x0a\xc4\xc3\xd8\xb5\x81\x90\x47\xa8\xdd\xaa\xf8\x72\xda\x70\xae\x1a\xea\xdd\x65\x2a\xeb\xc4\x6d\xb8\x11\x9d\xaa\xe0\xa3\x47\x3f\xeb\xb7\x00\xed\xcb\xca\x19\x8d\xf9\x30\x91\xcd\xc3\xbd\x56\x9c\xe0\x05\x84\x1c\xa4\xb0\x67\xf5\x7a\x25\x39\xde\xc2\x6e\xfe\xe6\xb2\x7f\x76\xa3\xfd\xbe\xef\x96\xb9\x17\x37\xb5\xe1\x32\x7e\x18\xe8\xbb\xd7\x0b\x04\x05\x95\xf2\x3b\x62\xc7\x0a\x03\xb5\x41\xaf\xcc\xd5\x80\x7a\xcd\xa5\xc9\x6c\xd1\x3d\x8d\x04\x1f\x8a\x2e\xae\xf3\x6a\x88\x88\x50\x5d\xcd\x18\x51\x26\xab\xea\xf4\x60\xda\x4e\x37\x98\xcf\xf2\xa9\xfe\xed\xb3\xdf\x3e\xfb\x9f\x00\x00\x00\xff\xff\xeb\x2d\x9f\xcd\x25\xb3\x00\x00")

func schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaJson,
		"schema.json",
	)
}

func schemaJson() (*asset, error) {
	bytes, err := schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0x36, 0xf8, 0x3a, 0xf7, 0x32, 0xf3, 0xfd, 0x6e, 0xc7, 0x9d, 0xa, 0x7c, 0x7a, 0x69, 0x91, 0x22, 0x24, 0xba, 0x4a, 0x8f, 0x51, 0x30, 0x17, 0x87, 0xca, 0x98, 0x81, 0xdc, 0xf4, 0x56, 0xcb}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"schema.json": schemaJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"schema.json": &bintree{schemaJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
