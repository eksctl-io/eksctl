// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/vpc-admission-webhook-config.yaml (524B)
// assets/vpc-admission-webhook-csr.yaml (234B)
// assets/vpc-admission-webhook-dep.yaml (1.074kB)
// assets/vpc-admission-webhook.yaml (231B)
// assets/vpc-resource-controller-dep.yaml (1.101kB)
// assets/vpc-resource-controller.yaml (673B)

package addons

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _vpcAdmissionWebhookConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x4f\x6b\xf3\x30\x0c\xc6\xef\xf9\x14\x22\xf7\xa4\xf4\xf6\xe2\xdb\x4b\x29\x63\x87\xc1\x18\x63\x3b\x8c\x1d\x14\x47\x4d\x45\x62\xcb\x58\x76\x4a\xf7\xe9\x47\xfe\xb4\xac\xb0\xd5\x17\xdb\x7a\xa4\xdf\x63\xc9\x18\xf8\x8d\xa2\xb2\x78\x03\xd8\x3a\xd6\xe9\x18\xa9\x63\x4d\x11\x13\x8b\xaf\xfb\x7f\x5a\xb3\x6c\xc6\x6d\x43\x09\xb7\x45\xcf\xbe\x35\xf0\x94\x13\x26\xf6\xdd\x3b\x35\x47\x91\x7e\x27\xfe\xc0\x5d\x5e\x2a\x0a\x47\x09\x5b\x4c\x68\x0a\x00\x8f\x8e\x0c\x8c\xc1\x56\x57\x7a\x75\x5a\x8a\x2a\x7b\xe8\xd6\x0c\x0d\x68\xc9\x40\x9f\x1b\xaa\xf4\xac\x89\x5c\x01\x30\x60\x43\x83\x4e\x10\x00\x0c\xe1\x0f\x4a\xb1\xee\x73\x62\x75\xcf\xaf\x46\x87\x5f\xe2\xf1\xa4\xb5\x15\x37\x63\xed\xc0\xe4\xd3\xf2\xfa\xc5\x08\x40\x29\x8e\x6c\xe9\x72\xbd\xdb\xc2\x4d\xce\xaf\x4d\x2c\x2b\x60\x3a\x1a\x28\x37\x6e\x1a\x1b\x95\x73\x3c\xe6\x81\xf4\xe2\x52\x81\x04\x5a\xc6\xa7\x06\x3e\xa0\xdc\xbd\xec\xff\xbf\xee\x4b\xf8\xbc\x32\x30\xf0\x43\x94\x1c\x26\xbd\x2c\x6f\xe2\xeb\x0f\xce\xca\xb8\xfd\xa1\x45\x52\xc9\xd1\xd2\xac\x04\x69\x75\xd5\x0e\xc8\x43\x8e\xf4\x2c\x03\xdb\xb3\x81\xc7\xce\x4b\xa4\xe2\x3b\x00\x00\xff\xff\x49\xee\x9e\x02\x0c\x02\x00\x00")

func vpcAdmissionWebhookConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_vpcAdmissionWebhookConfigYaml,
		"vpc-admission-webhook-config.yaml",
	)
}

func vpcAdmissionWebhookConfigYaml() (*asset, error) {
	bytes, err := vpcAdmissionWebhookConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vpc-admission-webhook-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7d, 0x11, 0x23, 0x17, 0x2f, 0xdc, 0x4e, 0x18, 0xaa, 0xc8, 0x66, 0xee, 0xf3, 0xc1, 0x85, 0x63, 0xb1, 0xe3, 0x53, 0x57, 0x80, 0x96, 0xe6, 0x54, 0x26, 0x46, 0x6b, 0x3f, 0x17, 0x20, 0x31, 0x8}}
	return a, nil
}

var _vpcAdmissionWebhookCsrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\x4b\x4e\xc4\x30\x10\x44\xf7\x3e\x45\x5f\x20\x41\xb3\x43\xde\x72\x03\x90\xd8\x77\xec\xc2\x69\x19\x7f\x70\xb7\x83\xe6\xf6\x28\x13\xa4\xd9\x95\xaa\x9e\x5e\x71\x97\x4f\x0c\x95\x56\x3d\x05\x0c\x93\x2f\x09\x6c\xd0\x35\xbf\xea\x2a\xed\xe5\xb8\x6d\x30\xbe\xb9\x2c\x35\x7a\x7a\x7b\x12\x1f\x92\xaa\xd4\xf4\x8e\x9f\x09\x35\x57\x60\x1c\xd9\xd8\x3b\xa2\xca\x05\x9e\x8e\x1e\x16\x8e\x45\xf4\x94\x2f\xbf\xd8\xf6\xd6\xf2\x9a\xe7\x86\x45\xef\x6a\x28\x4e\x3b\xc2\xc9\xa7\xd1\x66\xd7\x33\x2d\x74\x4d\x9e\xa7\xed\xa8\xf6\x78\x8a\x8e\x68\x2a\x27\xfc\x23\x51\x92\x18\x7f\x93\x4a\xaa\x6c\x73\xe0\xd1\x66\xdc\x09\x35\x48\xdf\x31\x0a\xaa\x5d\x36\x8c\x03\x83\x4e\x9b\xfb\x0b\x00\x00\xff\xff\xf1\x7d\x42\x97\xea\x00\x00\x00")

func vpcAdmissionWebhookCsrYamlBytes() ([]byte, error) {
	return bindataRead(
		_vpcAdmissionWebhookCsrYaml,
		"vpc-admission-webhook-csr.yaml",
	)
}

func vpcAdmissionWebhookCsrYaml() (*asset, error) {
	bytes, err := vpcAdmissionWebhookCsrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vpc-admission-webhook-csr.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x56, 0xf4, 0x54, 0x57, 0xf8, 0xbd, 0x8a, 0x1a, 0x67, 0xb2, 0x29, 0x18, 0xe2, 0x44, 0x8a, 0xc2, 0x7f, 0x44, 0x26, 0x4c, 0x52, 0xe0, 0x70, 0xe0, 0xc8, 0x5a, 0x74, 0x76, 0x2, 0xcd, 0x3e, 0xa}}
	return a, nil
}

var _vpcAdmissionWebhookDepYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xcf\x8a\xdb\x40\x0c\xc6\xef\x79\x0a\x5d\xb6\x7b\xb2\xdd\x2c\xa5\x87\x81\x14\x4a\x4b\x2f\x6d\x37\x81\x40\xef\xca\x8c\x48\x06\xcf\x3f\x46\xb2\x5d\xbf\x7d\x71\xec\x2d\xb6\x37\xd9\xd5\xc1\x07\x49\xbf\x6f\x46\x9f\x35\x98\xec\x1f\xca\x6c\x63\x50\x80\x29\x71\xd5\x6e\x37\xb5\x0d\x46\xc1\x77\x4a\x2e\xf6\x9e\x82\x6c\x3c\x09\x1a\x14\x54\x1b\x80\x80\x9e\x14\xb4\x49\x17\x68\xbc\xe5\x81\x2c\x3a\x3a\x5d\x62\xac\xa7\x2a\x27\xd4\xa4\xa0\x6e\x4e\x54\x70\xcf\x42\x7e\x03\xe0\xf0\x44\x8e\x07\x01\x18\xce\xb9\xa7\xc0\x89\xf4\xd0\x94\x29\x39\xab\x91\x15\x6c\x37\x00\x4c\x8e\xb4\xc4\x3c\xe2\x1e\x45\x5f\x7e\xcd\xf4\xde\x54\x04\x10\xf2\xc9\xa1\xd0\x44\xcf\x66\x19\xc2\x2d\x84\xde\x91\x02\x78\xb9\xe0\x10\x3a\x06\x41\x1b\x28\xcf\xf0\xe2\x1d\x83\xfe\x1f\x93\xcf\x33\x6a\x24\x0b\x71\xfc\x8d\xb2\xfc\xb0\x8e\x76\x15\x89\xae\x26\xae\xd2\x94\x85\xaf\xdf\x32\x5d\xed\x5c\x63\x3f\xa9\xbf\x47\xd5\xd4\xdf\x82\xf6\xc7\xab\x85\xc7\xc9\xda\x7d\x4b\x39\x5b\x43\xbb\xce\x06\x13\x3b\x5e\xb7\xa3\xe3\xe8\xe2\x59\x22\x8b\xa1\x9c\xd7\xe5\x76\xf7\x69\x95\x7a\xfa\xf2\x61\x3b\x4b\x59\x8f\x67\x52\xf0\xf8\xc0\xa5\xa9\x73\x49\x3a\x97\x0f\x5c\x3e\x70\x45\x35\x57\x37\xcd\x52\x1f\xcb\xa7\x72\xfb\xb8\xd6\x38\x34\xce\x1d\xa2\xb3\xba\x57\xf0\xd5\x75\xd8\xcf\xaf\xda\x46\xd7\x78\xfa\x1d\x9b\x20\xaf\xdc\x1d\xff\xcb\x24\x5e\x5c\xbd\x59\x74\x00\xf8\x81\x3b\xa0\x5c\x14\xbc\xf6\x71\xd5\x9b\x09\xcd\x3e\xb8\x5e\x81\xe4\x86\xa6\xe2\x25\xb2\x3c\x93\x74\x31\xd7\x8b\x7c\x88\x86\x8e\x8b\x1d\x1e\xe2\x44\x82\xe5\xf0\x4a\x72\x20\x21\x2e\x6d\xac\x22\x2b\x70\x36\x34\x7f\xdf\x6a\xc2\xac\x2f\x0a\xd0\x9b\xcf\x2f\x9e\x8f\x63\xdf\xd8\xc2\x7b\xd3\x32\xe9\x4c\xb2\x74\x68\xcc\x3d\xdf\xdf\xde\x49\xe5\x5f\x00\x00\x00\xff\xff\x8b\xd5\xb1\x6d\x32\x04\x00\x00")

func vpcAdmissionWebhookDepYamlBytes() ([]byte, error) {
	return bindataRead(
		_vpcAdmissionWebhookDepYaml,
		"vpc-admission-webhook-dep.yaml",
	)
}

func vpcAdmissionWebhookDepYaml() (*asset, error) {
	bytes, err := vpcAdmissionWebhookDepYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vpc-admission-webhook-dep.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0x15, 0x81, 0xd, 0x95, 0xe8, 0xeb, 0x21, 0x89, 0x2b, 0x5a, 0x92, 0xe8, 0xb5, 0x38, 0x4, 0x21, 0xcb, 0x13, 0x8, 0x66, 0xd0, 0x72, 0x66, 0x51, 0xe0, 0x38, 0xb9, 0xc8, 0x43, 0x6b, 0xd8}}
	return a, nil
}

var _vpcAdmissionWebhookYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8c\x31\xae\xc2\x40\x0c\x05\xfb\x3d\x85\x2f\xe0\xe2\xeb\xa7\xf2\x29\x90\x90\xe8\x9d\xcd\x13\xac\x92\xcd\x5a\x6b\x13\xc4\xed\x51\x22\x0a\x1a\x44\x67\xf9\xcd\x0c\x33\x27\xb5\x72\x41\xf7\xd2\x56\xa1\xed\x2f\xcd\x65\x9d\x84\xce\xe8\x5b\xc9\x48\x15\xa1\x93\x86\x4a\x22\x5a\xb5\x42\x68\xb3\xcc\x3a\xd5\xe2\xbb\xc1\x0f\x8c\xb7\xd6\xe6\xf7\xea\xa6\x19\x42\xf3\x7d\x04\xfb\xd3\x03\x35\x11\x2d\x3a\x62\xf1\x3d\x40\xa4\x66\xdf\x0a\x6e\xc8\x3b\x64\xad\xc7\x41\xf3\x71\x0a\x0d\xc3\xff\xe1\x86\xf6\x2b\xe2\xf4\xf1\x73\x2c\xc8\xd1\xfa\xcf\xf6\x2b\x00\x00\xff\xff\xbc\xa7\x78\x3e\xe7\x00\x00\x00")

func vpcAdmissionWebhookYamlBytes() ([]byte, error) {
	return bindataRead(
		_vpcAdmissionWebhookYaml,
		"vpc-admission-webhook.yaml",
	)
}

func vpcAdmissionWebhookYaml() (*asset, error) {
	bytes, err := vpcAdmissionWebhookYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vpc-admission-webhook.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc0, 0x14, 0x3e, 0x68, 0x1c, 0x57, 0x26, 0x7e, 0x3b, 0xab, 0xf1, 0x55, 0x21, 0x61, 0xc3, 0xe1, 0xaf, 0x46, 0xb6, 0xf7, 0xdd, 0x11, 0x29, 0x41, 0x64, 0x57, 0xc8, 0xd4, 0xea, 0x97, 0xba, 0xff}}
	return a, nil
}

var _vpcResourceControllerDepYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x4f\x6f\xd4\x30\x10\xc5\xef\xf9\x14\x73\xa9\x7a\x4a\x76\xb7\x40\x2b\x2c\x71\xa8\xa8\x04\x07\x84\x56\x6a\xc5\x7d\xd6\x79\x6d\xac\x38\xb6\x35\x33\xd9\x76\xf9\xf4\x28\xd0\xfd\x13\x51\x5a\xe6\x14\xbd\x9f\x27\xef\x8d\xe5\xa9\xeb\xba\xe2\x12\x7e\x40\x34\xe4\xe4\x88\x4b\xd1\xc5\x76\x55\xf5\x21\xb5\x8e\x6e\x50\x62\xde\x0d\x48\x56\x0d\x30\x6e\xd9\xd8\x55\x44\x89\x07\x38\xda\x16\x5f\x0b\x34\x8f\xe2\x51\xfb\x9c\x4c\x72\x8c\x90\x67\xae\x85\x3d\x1c\xf5\xe3\x06\xb5\xee\xd4\x30\x54\x5a\xe0\xa7\x76\x41\x89\xc1\xb3\x3a\x5a\x55\x44\x8a\x08\x6f\x59\x26\x42\x34\xb0\xf9\xee\x1b\x6f\x10\xf5\x8f\x40\x53\xa4\xd7\xcc\xa6\xb2\x00\x71\xb4\x61\xdf\x23\xb5\x7b\x4d\xd8\xf7\x8e\xd4\x78\x13\x51\x11\x19\x86\x12\xd9\xf0\xec\x73\x32\xce\x54\x71\x66\xf9\x5f\xa6\x2f\xdb\xfe\x6d\x4c\xb4\x1f\xfc\xf7\x37\x64\x1b\x3c\xae\xbd\xcf\x63\xb2\xb7\x3c\x26\x81\x43\x82\x1c\xa2\xd5\xe4\xf3\x30\x70\x6a\x8f\x59\x6b\x5a\xbc\x95\x94\xe5\x41\x4f\x1b\x6a\xb5\x16\x22\xd6\x09\xb4\xcb\xb1\xfd\x14\xd2\x7d\x3e\xf0\x30\xf0\x03\x1c\x9d\x9f\x69\xd3\xf6\xd2\xc0\x4b\x73\xa6\xcd\x99\x2e\xd0\xeb\xbf\xac\xdc\xb2\xb9\x68\x56\xe7\xf3\x7f\xac\xc7\x18\xd7\x39\x06\xbf\x73\x74\x1d\x1f\x79\xa7\x07\x1e\xc3\x16\x09\xaa\x6b\xc9\x1b\x1c\xa3\x11\xdd\x73\x88\xa3\xe0\x6e\x1f\xcd\xd1\x87\x13\xda\x99\x95\x2f\xb0\xd3\x06\xa2\x2e\xab\x39\x5a\x5d\x5c\x35\xcb\x66\xd9\xac\x66\xac\xb0\x75\x8e\x16\x1d\x38\x5a\xf7\x73\x8e\xb2\x98\xa3\xcb\xd5\xd5\xd5\xc7\x99\xae\xbe\xc3\xf4\xc0\xbf\xde\xdd\xad\x4f\x40\x48\xc1\x02\xc7\x1b\x44\xde\xdd\xc2\xe7\xd4\xaa\xa3\x77\xcb\x93\x13\x05\x12\x72\xfb\x32\xb3\x30\x20\x8f\x76\x80\xc7\xa1\xde\xda\xa6\xfd\xbb\xf1\xa3\x04\xdb\x7d\xce\xc9\xf0\x34\xbb\x80\x22\x61\x1b\x22\x1e\xd0\x3a\x32\x19\x51\x1d\x6f\xe5\x3b\xec\x31\x4b\x3f\xd3\x53\x6e\x71\x3b\x5b\xba\xa9\x36\x30\x6e\xa6\x6d\x95\x04\x83\x36\x21\x2f\xb2\x3a\x8a\x21\x8d\x4f\xaf\x1d\x62\xf1\x9d\x23\x1e\xda\xcb\xf7\xd5\xaf\x00\x00\x00\xff\xff\xc2\x7b\x85\x4f\x4d\x04\x00\x00")

func vpcResourceControllerDepYamlBytes() ([]byte, error) {
	return bindataRead(
		_vpcResourceControllerDepYaml,
		"vpc-resource-controller-dep.yaml",
	)
}

func vpcResourceControllerDepYaml() (*asset, error) {
	bytes, err := vpcResourceControllerDepYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vpc-resource-controller-dep.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0x14, 0x2b, 0xe0, 0x89, 0x95, 0x85, 0x38, 0xf0, 0x39, 0xf0, 0xde, 0x23, 0xf7, 0x2a, 0xa1, 0xfe, 0x45, 0x5d, 0xbd, 0x22, 0x24, 0x5a, 0xd2, 0xe2, 0x69, 0xaa, 0xaa, 0x6d, 0x95, 0xa9, 0xa0}}
	return a, nil
}

var _vpcResourceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xb1\x4e\x03\x31\x0c\x86\xf7\x3c\x45\xd4\x3d\xad\xd8\xd0\x6d\xc0\xc0\x5e\x24\x76\x5f\xce\x6d\x4d\x73\x71\x64\x3b\x87\xe0\xe9\xd1\x35\x6d\x91\xa8\xa0\x20\xa6\xfb\xce\xf1\xef\x5f\xfa\x42\x08\x0e\x0a\x3d\xa3\x28\x71\xee\xbc\xf4\x10\x97\x50\x6d\xc7\x42\xef\x60\xc4\x79\xb9\xbf\xd5\x25\xf1\x6a\xba\x71\x7b\xca\x43\xe7\x1f\x52\x55\x43\x59\x73\x42\x37\xa2\xc1\x00\x06\x9d\xf3\x3e\xc3\x88\x9d\x9f\x4a\x0c\x82\xca\x55\x22\x86\xc8\xd9\x84\x53\x42\x71\x52\x13\x6a\xe7\x82\x87\x42\x8f\xc2\xb5\xe8\x9c\x09\x7e\xb1\x70\xde\x9f\x02\xc7\x59\xe6\x01\xf5\x93\x56\x6a\x60\xb5\x0d\x0a\x0f\x0d\x22\xe7\x0d\x6d\x47\x28\xf3\xef\x84\xd2\x1f\xb3\xb5\x0c\x60\x78\xc0\x2d\xda\xe1\x9b\x48\x1b\xbc\x82\xc5\x5d\x3b\x73\xa6\x28\x38\xef\xff\xcf\xc3\x3d\xe5\x81\xf2\xf6\x2f\x3a\x38\xe1\x1a\x37\xf3\xe2\x49\xc8\x0f\xa5\xce\xfb\x4b\xf7\xd7\x2a\xb4\xf6\x2f\x18\xed\x20\xbd\xa5\x9f\x50\x26\x8a\x78\x17\x23\xd7\x6c\x57\x0f\xb4\x77\x2d\x10\xb1\xf3\xfb\xda\x63\xd0\x37\x35\x1c\x2f\x64\x9d\x95\x7c\x29\xf8\xbd\x8e\x6f\xab\xdc\x47\x00\x00\x00\xff\xff\x16\x48\x7e\xad\xa1\x02\x00\x00")

func vpcResourceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_vpcResourceControllerYaml,
		"vpc-resource-controller.yaml",
	)
}

func vpcResourceControllerYaml() (*asset, error) {
	bytes, err := vpcResourceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vpc-resource-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0xd5, 0x2, 0x7a, 0xb4, 0xa2, 0x2b, 0x1, 0x1a, 0xb, 0xc2, 0x21, 0xc7, 0xa7, 0xae, 0x2, 0xa6, 0x5b, 0x95, 0xd3, 0xc5, 0xa6, 0xc7, 0x72, 0xfd, 0x35, 0xcf, 0xf0, 0x50, 0xe, 0xb, 0xdd}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"vpc-admission-webhook-config.yaml": vpcAdmissionWebhookConfigYaml,
	"vpc-admission-webhook-csr.yaml":    vpcAdmissionWebhookCsrYaml,
	"vpc-admission-webhook-dep.yaml":    vpcAdmissionWebhookDepYaml,
	"vpc-admission-webhook.yaml":        vpcAdmissionWebhookYaml,
	"vpc-resource-controller-dep.yaml":  vpcResourceControllerDepYaml,
	"vpc-resource-controller.yaml":      vpcResourceControllerYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"vpc-admission-webhook-config.yaml": &bintree{vpcAdmissionWebhookConfigYaml, map[string]*bintree{}},
	"vpc-admission-webhook-csr.yaml":    &bintree{vpcAdmissionWebhookCsrYaml, map[string]*bintree{}},
	"vpc-admission-webhook-dep.yaml":    &bintree{vpcAdmissionWebhookDepYaml, map[string]*bintree{}},
	"vpc-admission-webhook.yaml":        &bintree{vpcAdmissionWebhookYaml, map[string]*bintree{}},
	"vpc-resource-controller-dep.yaml":  &bintree{vpcResourceControllerDepYaml, map[string]*bintree{}},
	"vpc-resource-controller.yaml":      &bintree{vpcResourceControllerYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
