// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/schema.json (41.355kB)

package v1alpha5

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5d\x7b\x6f\xdc\x38\x92\xff\x3f\x9f\x82\xe8\x2c\x76\x27\x40\xcb\xbd\x33\xc0\x3d\x90\x9d\x33\xce\xb1\xf3\xf0\x25\xb1\x7d\xee\xec\x2c\x6e\xed\x00\x61\x4b\xd5\x6a\x8e\x25\x52\x43\x52\xb6\x3b\x33\xf9\xee\x07\x52\x94\x5a\x0f\xea\x41\xb5\x9c\x38\xfb\x57\x62\xb5\x58\x2c\x56\x15\x7f\x2c\x16\x8b\xa5\xdf\x9f\x20\x34\xfb\x13\x87\xf5\xec\x39\x9a\x3d\x5d\x04\xb0\x26\x94\x48\xc2\xa8\x58\x1c\x47\xa9\x90\xc0\x8f\x19\x5d\x93\x70\x36\x57\x2f\xca\x6d\x02\xea\x45\xb6\xfa\x15\x7c\x99\x3d\xfb\x93\xf0\x37\x10\x63\xf5\x78\x23\x65\xf2\x7c\xb1\xf8\x55\x30\xea\x65\x4f\x3d\xc6\xc3\x45\xc0\xf1\x5a\x7a\x7f\xfd\x8f\x45\xf6\xec\x69\xd6\xae\xd4\xd5\xec\x39\x52\x7c\x20\x34\xcb\xfb\x8c\x58\x1a\xfc\x03\x4b\x7f\x53\xfc\x84\xd0\x2c\xe1\x2c\x01\x2e\x09\x88\xd2\x53\x84\x66\x7e\xd6\xe8\x1d\x0b\x43\x42\xc3\xca\x6f\xbd\x83\x2b\x3a\xca\x5b\x17\x4d\xbf\x98\xff\x7d\x99\xef\xfa\x87\x35\x70\x0e\xc1\x39\x0f\x80\xcf\x9e\xa3\xab\x56\x1e\xcc\x0f\x1f\x8b\xb6\x38\x08\x74\xcf\x38\xba\x28\x8f\x62\x8d\x23\x01\xc5\x4b\x01\x08\x9f\x93\x44\xbd\xa7\x38\xf6\x19\x95\x98\x50\x81\x7c\xad\x02\x94\x60\x8e\x63\x90\xc0\x05\xe2\x10\x61\x09\x01\x92\x0c\x95\x64\x55\x10\xba\xf7\x08\x95\x10\x45\xe4\x57\x6f\x23\xe3\xc8\xdb\x97\xf0\x93\x92\x20\x9a\x3a\x6a\x0a\xbe\x55\x55\x40\xf1\x2a\x82\x0f\xdb\xa4\xf6\x03\x42\x33\x22\x21\xae\x3f\x2c\x99\x9c\x90\x5c\xf5\x31\xaf\xfe\x1a\xc0\x1a\xa7\x91\x54\x2f\xcc\x4a\xbf\x7c\x29\xbf\x56\x90\xc0\x9c\xe3\xed\x58\x05\x97\x39\x9f\x52\xbb\xc0\xbb\xb5\x60\x0c\x0b\x45\x46\xc8\x8e\x3a\x76\x25\x6f\xd5\x74\x86\x00\x25\xf5\x72\xf8\x2d\x25\x1c\x82\xaa\x88\x62\x90\x38\xc0\x12\x37\xe5\xd3\x66\x0e\x38\x21\xbf\x00\x17\x19\xcb\xbf\xdb\x74\x66\x51\x7b\x45\xe9\x95\x1f\xe0\x1e\xc7\x49\xa4\x3b\xb9\xaa\xda\x09\xdc\x08\x5f\x46\x07\x84\x2d\x6e\x7f\xc4\x51\xb2\xc1\xff\x56\x36\x97\x8f\x4f\x2c\x86\x33\xc3\xb7\x98\x44\x78\x45\x22\x22\xb7\xff\x64\xf4\x31\x58\xec\xbc\x0c\x38\x16\x88\x44\x0e\x80\x67\x27\xbb\xc6\x3c\xc4\x12\x2e\x38\x5b\x93\x68\xf0\x90\xed\x5d\xbe\xaa\xd0\xda\x6b\xb4\x21\x91\xc3\x86\xf9\x9a\x48\x3b\x05\x82\x63\x27\x41\x9d\x1e\xbd\xb7\x13\xba\x21\x34\x78\x60\x6b\xad\xce\xbb\x5e\x43\x8d\x31\xc5\x21\x04\x67\x2c\x80\xd7\x9c\xa5\xc9\x7e\x5a\x7b\x5f\xa3\x36\x54\x6f\xb5\x41\x57\xc0\x68\x09\x80\xae\x14\xc5\x50\xf3\x87\x52\x81\x43\xf8\xf8\xc3\x42\xff\xbb\xd0\xfc\x13\x1a\x7a\xb4\x78\xe3\x19\xc2\x34\x40\x57\x66\x64\x68\xf7\x43\xd1\x08\x6e\x84\x67\x7e\xd6\xed\xc4\xe2\x59\x95\x85\x1e\x7c\x54\x2c\xfd\x8c\xd1\x86\xc3\xfa\xbf\xae\x67\xed\x9c\x5c\xcf\x0e\xeb\x8c\xff\xbc\xc0\x87\x9a\xbf\x46\xfb\x26\x53\xd7\xb3\xc3\xe6\x20\x14\x01\xbb\x71\x15\x10\xea\x62\xaa\xef\x61\x87\xb9\x55\x72\x74\x1a\x93\x98\xd4\x16\x5e\x31\x8e\x08\x5d\x33\x1e\x63\xf5\x48\x0b\x32\x9f\x0a\x48\x28\x43\xb1\x68\xdb\x66\x22\x4e\xea\xee\xed\x75\xa0\x2d\x0c\x51\xa2\x00\x9f\x83\x14\x2f\xa9\xcf\xb7\x39\x03\x03\xb4\xb9\x6c\x34\xb3\x53\x97\x58\xa6\x0d\x7d\x76\x1a\xc8\x32\x6b\x62\x25\x77\x9b\xf8\x4e\xb4\x7e\xb9\x38\x1e\xeb\x42\x69\xe4\x9c\x5b\x57\x7f\xdb\x14\xa8\x81\x77\x8d\x67\xbb\x95\x77\xa2\x62\xc7\x32\xd7\xb9\xec\xdb\x57\xdd\x4e\x85\x37\xf5\x55\x5b\xcc\x26\x71\x21\x31\x12\x44\x59\xb0\x71\xf1\xe6\xca\xa1\x5b\x01\xe2\x90\x44\xd8\x87\x00\xdd\x11\xb9\x41\x46\x6f\xe8\xe8\xe2\x74\xb0\xf3\xe8\x4c\xd8\xe6\x36\xbe\xa4\x41\xc2\x08\x95\x62\xc8\xc6\x20\xe1\xe4\x16\x4b\x38\xf2\x7d\x10\x0d\xe3\xce\xc1\x65\xc5\x58\x04\xb8\x65\x5e\x24\xe9\x2a\x22\xbe\x2b\x01\x27\x03\xae\x32\xd9\xd6\xf7\x24\xaa\xdd\xb0\x28\x10\x85\x77\x8e\x13\x82\x04\xf0\x5b\xe0\x08\x8c\x54\x11\xd6\xbd\x95\x41\x6d\xb0\x7a\x47\x11\xb7\xa9\x58\x39\x49\x03\x94\x9b\xcf\x36\x16\xbc\xbc\x07\x3f\x55\xe4\x2e\x59\x04\x47\x97\x67\x3d\x8e\x54\xa7\x8b\x5a\xa3\x76\x01\x3c\x26\x42\xa1\x89\x78\xc1\x52\x1a\x60\xbe\x1d\x43\x5d\x49\x82\xf8\x4a\xc7\x2c\xad\xda\x2e\x72\x5e\x37\x77\x52\x5a\x56\xa8\xee\xe5\x0a\x1b\x06\xf7\x10\x60\x89\xc2\x44\x42\x53\x78\x70\x7e\x7a\x72\xfc\x40\xf3\xae\x36\xe4\xe1\x43\xe9\xb7\x9a\x1a\x3d\x07\xdb\xb2\x0d\xbf\xc3\x8e\x26\x44\x05\x1c\x45\xe8\xf4\xe8\x3d\xc2\x52\x72\xb2\x4a\x25\x08\xc4\xd6\x08\xe7\x13\xda\x11\x06\xfa\xa8\xb5\xcc\xfb\x9a\x45\x0f\x40\x01\x4c\x29\x93\xb8\x1a\xf0\xeb\x96\xc5\xc3\x6d\xac\x4b\x01\x4c\x1b\x81\xdf\xbf\xd8\xed\x1c\x4b\x89\xfd\xcd\x05\x8b\x88\xdf\x98\x27\x76\x08\x38\xa5\x11\xa1\x70\xc2\xfc\x34\x06\xda\xe8\xd0\xa6\x0e\x94\x68\xf2\x28\x30\x6d\xd4\xda\x9b\xf5\xab\xfe\x27\x37\x44\x20\x63\x5b\x0a\xa5\xb5\xf0\x5d\x1c\xe1\xf1\xbd\xf4\x4a\xe4\xe8\xf2\xec\x71\xc5\x48\x22\xbc\x82\xe8\xbb\x35\x36\x8a\x63\x18\x1b\x68\x68\x25\x28\x12\xec\x4f\x4b\x35\x71\x5e\x42\xdc\xe8\x8f\xd8\xef\x34\xe0\xa9\x6b\x03\x24\x71\xf8\x7d\x99\x88\xd3\xd2\xa9\x8d\xc8\x6a\x03\xcd\x79\x32\xb7\x63\x75\xd7\x6c\x6f\xc3\xc6\x1e\xfb\xe8\xdc\x1e\x69\x85\x4c\xb9\x5c\x52\x44\x70\x6c\xd0\xcc\x80\x19\xca\x77\x99\x3a\x10\x90\xed\x72\x52\x3e\xc6\x8b\x76\xa5\x3e\x68\x39\x5d\xd6\x6d\xbe\x75\x51\xe5\x8e\x6e\xa0\x93\xf1\xe4\xc4\x27\x54\x46\xa6\x6e\xe5\x61\x34\xa4\xe6\x28\xf8\x2e\x4a\x36\x21\xeb\x28\x59\xef\x19\x46\x7d\xbe\x70\x08\x4b\x91\x98\xfe\x13\x8d\xc9\x41\xdb\x30\x30\x25\xc9\xef\x0e\xf1\xca\xa1\x9f\xfd\x8e\x8b\x26\x42\x51\xa3\x14\x0b\x5f\x0f\x82\x63\xc5\x79\x6d\x08\x14\x38\x8e\x8a\xad\xfb\x98\xcd\xff\x20\x62\xb6\x09\x74\x76\xf4\x61\x08\x22\xa9\xfd\xd3\x1d\x1e\xbe\x8d\x74\x52\x44\x4e\x7c\x42\x44\x3a\x3b\xfa\x80\x0c\xd9\x2a\x54\x23\x96\x54\x17\xc0\x61\xb8\xd4\x4f\xcf\x26\xdc\xe1\x88\x8f\xf9\xb4\x68\xe0\xab\x4e\xd6\xc4\xc7\x12\x8e\x52\xb9\x61\x9c\xc8\xed\x89\xe5\x08\x62\x98\x27\xbf\x8f\xbb\x9e\x47\x9f\xa6\x76\x1f\xfd\x9b\xb3\x49\x50\xd9\xc9\x52\x8b\xc1\x0c\x11\xf5\xbc\xaa\x5e\x2b\xfb\x93\x99\x3c\xe2\x80\x03\x8f\xd1\x68\x3b\x49\x04\x61\x00\x39\xab\xc1\xa7\x2b\x0a\x4e\xb1\xe1\x71\x4b\x56\xcb\x89\x16\xc8\x3b\xc6\x6f\x1e\x6c\x99\xca\x02\xc2\x8f\x9e\x63\x27\x8b\xce\xd5\xd0\x1c\xe6\x84\x68\x6c\x3a\xd1\x8e\x73\x46\x1d\x09\x63\x29\x6e\x30\xdc\x41\xc8\x66\x8e\xbf\x5c\x1c\x0f\x02\xdf\x54\xb2\xa3\x28\x62\x6a\x0a\x9f\x5e\xdc\xfe\xfb\xa8\x93\x0a\x9f\x04\x7c\xd8\x7e\x36\x24\x72\x93\xae\x0e\x7c\x16\xff\x71\x07\xf8\x16\x94\x05\x88\x3f\xb2\x64\x96\x3f\x92\x9b\xf0\x8f\x54\x92\x48\xfc\x41\x12\x0a\xf2\xe0\xf4\xe2\x0c\x5a\xa2\x34\x7e\xfb\x89\x4c\x47\xef\x8d\x73\x1c\x3b\x6a\xdf\x4b\x8e\x8f\x4f\x4f\x2e\xf7\x8b\x95\xef\x33\xd4\xf1\x87\xd1\x6b\xc6\xd1\xce\x58\x91\x1a\x06\xc2\x42\x30\x9f\x64\x9b\xdf\x39\x82\x83\xf0\x00\x49\x86\x52\x01\xd9\xb1\x97\x80\x04\x73\x65\x59\xfa\x65\x45\x20\x37\x35\x63\x5f\x48\xd1\xa4\x5b\x84\x03\x6f\xc3\x9a\xe6\x3b\xc4\x84\xbf\x22\x5b\x56\x9d\x92\xd1\x19\x2e\x56\x72\x14\x0f\xcc\xde\x29\x79\x9a\x1d\xb0\x9a\x9d\xb3\xb9\x98\xdc\xd7\x09\x37\x0a\xf0\x53\xb5\xa4\x67\xa9\x12\x93\x3a\x31\x1b\xcc\xb3\xa3\xec\xe5\xf8\x3e\x1a\x16\x96\x70\xf0\xb4\xf4\x21\x40\x59\x0f\x3a\x47\x05\x2d\x5f\x3b\x1b\xeb\x50\x52\xfd\x23\x6d\xb8\x05\xfd\xe6\xb2\xb4\xcd\xb0\x1a\x93\xf9\x24\xc0\x1c\x10\x10\xb9\x01\x9e\xaf\x0a\xa5\x99\xa2\x46\xd2\x9c\x50\xbb\x94\x8f\x39\x92\x1b\x10\xa0\x89\xdc\xc0\x16\x02\xb4\xda\xa2\xa3\x7f\xea\x76\x3e\xa3\xb7\x40\x09\xd0\x4a\x68\xad\x5f\x7a\x5f\x95\xb1\x91\x2b\x3f\xa9\xa4\x6d\xe8\xe5\xab\xd5\xec\x2d\xba\xb4\x2f\x16\x03\xcc\x7b\xde\xb1\xf0\xd6\xe0\xa5\x6b\xb1\xeb\x04\x90\x09\x7d\x97\x30\x62\x2b\x1c\x19\x64\xd5\x8e\x07\x8e\x22\xe4\x6f\x48\x94\xbb\x20\x8b\x2a\x26\x3b\xba\x34\xee\xf4\x2b\x9e\x4e\x2d\x1d\x73\x58\x28\xac\x21\x9e\xe9\x02\x5f\x95\x11\xb2\xb5\x32\x61\x64\x78\x44\x49\xc6\xe4\x81\xd3\x54\x1a\x44\xa3\xff\x3c\xc3\x39\x4b\xa1\x6b\x5c\xa7\x47\xef\x11\x67\x11\xfc\x45\xa0\xa3\xcb\xb3\x7c\xc5\x96\x0c\xf1\x94\xa2\x84\x05\x02\x31\x2a\x59\xce\xb3\xdb\x78\xf7\xa2\xdd\x8f\xc4\x10\x81\x2f\x19\x9f\x32\x07\x78\x69\x68\x4e\xe1\xba\x65\xcb\x8d\xd6\x38\x4f\x23\x10\x6a\xe0\x19\xcf\x48\xf9\x8e\x11\xc3\x3a\xc1\x5d\xf8\x1b\x08\xd2\x08\xf6\x90\xf3\x7e\x3d\xb9\x2c\x73\x5f\xcb\x7d\xe9\x92\xeb\xdd\x86\xf8\x9b\x62\x12\x89\x0d\x4b\xa3\x20\x37\xac\x80\x21\x9a\xed\x43\x91\xce\x04\xd3\x27\xc7\x66\xda\x65\x12\x81\xa0\x90\xc9\x01\x3a\x5d\x23\xca\xa8\x9e\x89\xb7\x24\x80\x60\xae\x01\x2b\x5f\xf1\xd4\xe2\xa4\x1a\xe6\xf1\xc7\x3b\x12\x45\x68\x05\xaa\xaf\xc0\x4d\x41\x8f\x84\x65\xab\xa6\xbf\xbb\x60\xbb\x93\x67\x50\x0f\x8c\xdb\xc0\xd3\x8a\x29\xdd\x6e\xc2\x74\xa1\xf3\x6c\xee\x0a\xa3\x6e\x29\x09\x0d\x85\x56\x57\x65\xc6\x16\xd3\xd8\x0e\x12\xc3\x00\x62\x64\x27\x1d\x6b\x74\x01\x97\x83\xd6\xea\xec\x58\x77\xf0\x82\xfd\xa8\x93\x23\x2a\xe2\x7d\x9b\xae\x80\x53\x90\x20\x90\x66\x1a\x15\x66\x54\x5a\xf3\x6a\x80\xec\x06\x20\x13\xf4\x30\x30\xa1\x63\x44\xfe\x45\x1b\xa7\x05\x39\xb4\xe6\x2c\x46\x19\x08\x4e\x28\x89\x71\xf4\x27\x3a\x6d\x6b\xcb\x51\x98\x14\x14\xf6\xf0\x1b\x86\x42\xc2\x58\x87\x21\x07\x84\xd7\x64\x50\x6e\xdd\x8a\x31\x29\x24\xc7\x49\xd3\xbb\x47\xed\xce\x59\xfe\x72\x97\xc1\x5d\x9d\x52\x21\x71\x14\x11\x1a\x22\x8c\xfe\x37\x25\xfe\x8d\x90\x98\xcb\xdc\xbd\x2e\xae\x68\x84\x44\xb2\x44\x2c\x9e\x92\xe2\x7d\x0f\x7b\xbf\x15\xef\x7b\xe6\x7d\x8f\x50\x6f\xcb\x52\xee\x99\x35\xd4\xed\x1a\x47\xe3\x96\xc6\xc8\x5e\xaf\x67\x87\x3d\xe3\x6a\xbf\xde\xa1\x34\x80\xab\xa8\xdc\x21\xe3\xf3\xfc\xed\x4e\x21\xbf\xd4\xb7\x4b\xd1\x25\x24\xac\x4b\xa0\xeb\x28\xbd\x9f\x5e\x60\x8a\xea\xf5\xec\xb0\xc4\x43\xfb\xe0\x39\x24\x6c\xd8\xc0\x15\x9d\xef\x79\xd0\x4e\x90\xc5\xab\x83\xdd\xd9\xc8\xbc\x63\x8e\x4e\x82\x65\xe6\x62\x9a\x8e\x04\xd8\x4e\x9b\xcb\x97\x7d\xf5\x1d\x66\x65\xf0\xaf\x89\x3c\x4f\xd4\xf6\x70\x77\x48\xa7\xe3\x09\x11\xa1\x37\xea\x77\x92\xe5\x83\xaa\xf7\x90\x1a\x9a\x20\x92\xf1\xed\x01\xba\x7a\xad\x05\x89\x5e\xa7\x24\x50\x33\x3f\x93\x6b\x69\xbe\x95\x2e\xe1\xf5\x29\xe9\xab\x32\x5e\xb2\x88\x26\xcf\xd7\xb3\xc3\xf2\xb8\x76\x76\x90\x83\x70\x2d\x89\xb7\x84\xc7\x6d\xee\xd2\xce\x6a\x5a\xfc\x9c\xb6\x54\xb5\x2d\xc2\x7c\x45\x24\xc7\x7c\x8b\xfe\x67\x79\x7e\xb6\xf8\xbf\xa3\xf7\xef\x8a\x2c\x5d\x31\x47\x22\xf5\x37\x08\x0b\xa4\x23\x69\x96\xbb\xdd\x8c\xeb\x6c\x6e\x9d\xde\x4b\xc0\xf5\xd4\xec\x21\x19\xb0\x78\x48\xb9\x80\x1b\x77\x4e\x27\x0e\x4e\xe1\x98\xbc\xc2\x31\x89\xa6\xcd\x4c\x7d\xdc\x17\xc4\x03\x10\x4a\x6c\xc7\x38\xc1\x3e\x91\xad\x23\x57\x46\x11\x02\xdf\xf3\xd2\x74\xa1\xb9\xd6\x6b\xd3\x1a\x7a\xa9\xaf\x2b\x28\x4c\xaa\x85\x47\xbd\x8f\xe9\xdd\x13\xc4\xf8\x7e\x49\x3e\xb7\x4a\xa4\x53\x3b\x31\xa1\xa3\xdb\x4e\x9e\xa7\x68\x22\xcf\x26\x4d\xc1\x52\x87\xa5\x7e\x34\xde\x46\x5e\xaf\x76\x2d\x51\x33\x31\xb0\xd8\x41\x61\x8e\xcb\xe5\x9b\x7f\x91\xb0\x4c\x89\xf7\x5b\x16\xa5\x31\x0c\x51\x7d\x97\xfb\x15\x92\x10\xaf\xb6\x12\xdc\x4e\xa6\x5b\x5a\x95\xb8\xfe\xcf\xbf\x4e\x15\x4c\xda\xa1\x76\x1b\x8e\x74\xc0\x9d\x65\x9e\x58\xa6\x9d\x5d\xaa\x9d\x18\x5f\xb3\xc7\x26\x12\x75\x4e\x8a\xba\x09\xd6\xc0\x76\xd2\xed\x2d\xa6\xe8\xe5\xdb\xa5\xd7\xa8\x3f\x80\x3e\x9c\x9f\x9c\xa3\x5f\x70\x44\x82\xe2\x70\x91\xc6\x38\x49\x20\x40\x6b\x02\x99\x1f\x10\x20\xb9\xe1\xec\x4e\x11\x01\xce\xd9\xf0\x9c\xb0\x87\xe9\xbd\xea\x2e\x80\xe4\xc4\x17\xc7\x2c\x52\x7b\xea\x6a\x3a\x70\x8b\xbf\x10\x72\x4c\xd3\x08\x73\x65\x1a\x83\xdd\x86\x72\xa3\x29\xb1\x32\xce\xf8\xff\xf6\xee\x82\xd3\xf4\x2c\x4b\xc3\x32\x98\x49\x4c\x57\x07\x4d\x57\xdb\x2c\x92\xea\x63\xed\xf3\xe7\x77\xd0\x75\x6d\x08\x7d\x01\x7f\x57\xc6\x21\x60\xbe\xf8\xf8\xc3\x46\xca\x44\x3c\x5f\x2c\xd4\x5f\x07\xf8\x4e\x1c\xe0\x18\x7f\x66\xf4\xc0\x67\xf1\xe2\xe8\x1f\x4b\x5d\xf3\xe6\x55\xde\x66\xa1\x76\x15\x42\x2e\xfe\x2e\x80\x6b\x7f\x7f\x81\xef\x84\xb7\x33\x01\x0f\x0b\xcf\x8c\xc9\x2f\x0c\xec\x40\x59\xfa\xf0\xbd\x4d\xdf\x30\x76\xdb\x91\xaf\xc4\xfa\xf5\xec\xd0\x22\xb9\xe6\x4e\x27\xcf\x32\x1c\x10\x72\xfa\xfa\x59\x6c\x53\x64\x25\x39\x59\xbc\x25\xef\x61\x12\x2b\xcf\xf6\x5a\xa7\x27\x1a\xe8\x8e\x4f\x4f\x2e\x1d\x77\x69\xe5\x96\x55\xf5\x3d\xe0\x06\x6a\x8f\xa0\xf5\x32\x01\x9f\xac\xb7\xe8\xca\x4f\x85\x64\x31\x3a\x7a\x7f\xba\x2b\xed\x92\x3d\xf3\x70\x4c\x3c\x91\x26\x09\xe3\x72\xf1\x6c\x8e\xae\x75\xc6\x87\x27\x44\x7c\x3d\xcb\xff\x52\xff\x63\x1c\x5d\xeb\x3b\x63\xc4\xbf\x9e\x39\x79\x2e\x39\x13\x8d\xe0\x90\x85\x01\x35\x5d\x76\xac\xaa\x69\x32\x47\x7f\xfe\x2d\x65\xf2\x6f\x39\x57\xd9\x5f\xe5\xa7\xf9\x13\xc6\xcd\xc3\x8c\xcb\xec\xff\xae\x3b\xcb\x87\xd9\xaf\x8a\xb0\x6b\xe5\x44\x1d\x6b\x50\x4b\xa9\xa8\x06\x35\xe7\x15\xe8\x31\x6e\xa7\xbb\x4c\xf9\x1d\x89\x89\xcc\x4a\x14\x65\x61\x7d\x6d\x55\xc4\x47\x47\xff\xdc\x99\xb4\x32\x07\x03\xfb\x8b\xa7\x9f\x19\x05\x0f\xdf\x61\x0e\x5e\x66\x3c\xd9\x0f\x6e\x11\xcd\xac\xdb\x86\xe9\x0e\xe9\xc8\x14\x2d\x6a\x70\xdb\x1e\xe3\x5d\x31\x29\x23\xe0\xcc\xbf\x81\x81\x79\x9b\x05\xee\xbc\x28\x37\xb5\x12\xf7\x23\x2c\x04\xf1\xdf\x31\x1c\xbc\xc0\x91\xf2\xe4\xf9\x19\x8e\x1f\xa7\xb2\x8f\x4c\xca\x2d\x20\x7d\x64\xb3\x32\xfc\x8a\x2c\x0f\x4f\x09\xb9\x58\xdd\xc3\x5a\xc2\x5a\xbf\x4a\x9d\x89\xb7\x88\x53\x07\x41\x4f\xce\x96\x7b\xe0\xf3\xd5\x71\x06\x76\x38\x08\x38\x88\x9d\x1d\xdf\x26\xbe\x47\x8b\xbd\xcb\xe2\xa9\x41\x4a\xd3\xa7\x17\x50\xe1\x99\x26\xcf\xb2\xe3\x6e\xe5\xcc\x9f\x9c\x2d\x51\xc4\xd8\x4d\xb5\xe2\xd2\x88\xa0\xfd\xf0\xde\xaf\x67\x87\xd5\x11\xe8\x0a\x6d\xfd\x1c\xf5\x22\xe6\x14\x31\x34\x58\x89\xf3\x44\x92\x98\x7c\x86\x56\xff\xa5\x25\x26\x52\x91\x4f\x56\x80\x54\xa0\xab\x97\x2f\x96\x3a\x46\x1e\x93\xcf\xda\x95\xeb\xf5\x7f\x5f\x1e\xff\xd4\xf4\x1c\x61\x25\x3c\x96\xf3\x55\x73\x6f\x87\xa8\x2b\x67\x67\xb0\x2b\x3b\x90\x8b\xeb\xd9\x61\x7d\x80\xed\x48\xf5\x00\xf1\xc9\x69\xae\x8a\x59\x08\x5f\x70\x58\x93\xfb\x07\x21\x3d\x79\x4c\x35\x27\x2c\x4e\x88\xc8\xae\x74\x0d\xae\x62\xb7\x93\xb4\x95\x86\xb5\xbb\x9b\x74\x05\x11\xc8\x97\x3a\x39\xb8\x5e\x6c\xb6\xa3\x2f\x87\xe2\x2a\x06\xe2\xc8\x67\x40\x9f\x4c\x77\x9f\xcc\x96\xac\xe6\x89\x92\xcf\x84\x86\x9e\xdc\x80\x67\xde\x73\x2c\x2c\xd9\xe2\x5f\x36\xc9\x16\xa8\xa5\x98\xfa\xd9\x67\x01\x1c\x9a\x9f\x7e\x5e\xe8\xbf\x0c\x7f\xed\xe6\xff\xdd\x87\xbe\x2f\x58\x20\x2e\x80\x2b\x9b\x19\x17\x01\xff\x57\x89\x9e\xb3\x5b\xe0\x9c\x04\xf0\x22\x3f\x23\x3e\x66\x71\x8c\x5d\x0b\xcd\x56\xec\xf0\xdc\x90\x44\x9f\xb2\x9d\xf6\xa7\xbf\x08\x54\x1c\x41\x27\xca\xad\xc8\x5e\x77\x32\xee\x82\x68\x66\xaf\x19\x65\x63\xae\x6d\xf4\xad\x03\x4e\x78\x63\xac\x8f\xd2\x05\x04\x9d\xcd\x08\x01\x5a\xc1\x9a\x71\xa8\x8d\xb0\xc0\xc9\xac\x68\x12\x34\x2e\xd0\x0e\x91\xe9\xc8\x2e\x5a\xc4\xba\xdf\x29\x4c\x85\x31\x93\x1b\x71\x95\x5f\x2a\xd8\x39\x63\xad\x1e\x62\x2a\xc0\x33\xaf\x7b\x26\xaf\xd3\x5b\x33\xee\x69\xc8\xc6\xd1\xae\x96\xea\x33\xed\x99\x15\x7f\x3a\x09\xcc\xf0\xd5\xeb\x30\x0e\x66\xe6\x7a\x76\xd8\x1c\xa3\xf6\x21\x3b\x98\x1c\x78\x64\x55\xbe\xd0\x32\xf0\x5a\xd3\xee\xf4\xea\x75\xcb\xfd\xbc\x71\x07\x61\x5d\xba\xce\x53\x30\x40\x20\x21\x36\x79\xfd\xc7\x2c\xdf\x99\x88\x91\x8a\x1a\x4c\xd4\x3a\xc8\xef\xf9\x88\x4e\x62\xdb\x35\xdb\xef\x87\x7b\x1e\x82\xd4\x76\xf3\x2d\x6b\xba\x0d\xdb\x9a\x67\xcc\x66\x7b\xe4\x89\x37\xe6\x83\x48\x5b\x25\x98\x1d\x26\x9a\x82\xc0\xfd\xfb\xbe\x0e\x1a\xa7\xe7\x17\xad\x5b\xfb\x4e\x1f\x25\x6b\xfe\x36\x16\x6f\x61\x7b\x7a\x32\xb8\x1c\x4b\x83\xc2\x80\x0d\x51\x47\xeb\xef\xe2\x94\xba\xc1\xb5\xfb\x86\xaa\xd2\xbd\x3e\xdc\x44\xb7\x98\x13\x4c\xb3\xab\x9d\xcf\xd1\xa7\xeb\x59\x98\xfc\x74\x3d\xfb\x84\x88\x40\xaf\x4d\xe9\x9d\x8b\x94\x27\x4c\x00\x5a\x2e\x4f\xd0\x0f\x86\xbb\x67\x73\xf5\x2e\x61\x3f\x9a\x77\x2f\x38\xbb\x25\x82\x30\x0a\x01\x52\xc6\xa0\x5e\xd6\xaf\x08\x3f\x7f\xe5\xc3\x86\xb3\x34\xdc\x24\xa9\x44\x45\xa8\x01\xbd\x39\x31\xaf\xc9\xfc\xb5\x63\x16\xe9\xc7\x6e\x19\xe1\xb6\xc1\x64\xde\x5f\x16\xda\x0e\x93\x9f\xb2\xff\xe4\xbb\x96\xfe\xf1\x95\x9b\x13\xf6\x63\xa3\xb9\x7d\xc8\xe5\x56\xc2\x6f\xb6\x6a\x97\x42\xa5\xa5\x6c\xb6\x6c\x11\x4c\xc9\x5c\xc2\xe4\xa7\xea\x6f\x40\xd3\xb8\xf9\xe1\x86\xfa\x6b\x0a\x2c\xd9\x8f\xf5\x47\xc2\x6f\x3e\x92\x3f\x96\x51\xb1\xf4\x9d\x87\x27\x35\x1b\x75\xcd\xa0\x18\x9d\x50\x61\x8f\x01\xb4\x07\x36\xda\x62\x29\x43\x93\x29\xea\xe9\x10\x9d\xb9\x13\x35\xb7\xaa\x23\x64\x67\xd9\xf1\x59\x36\x90\x7d\xa7\x24\x6d\xf1\x3c\x3b\xde\xd9\xf1\xc4\x8e\xac\x1d\x8b\x46\x3b\x98\xdb\x57\x89\xf6\xbd\x75\x33\x66\xd0\xf4\x55\x86\xc4\xe8\x3b\x7c\x84\x9a\x77\x5a\x0b\xd2\xb5\x9d\x2e\xf4\xed\x08\x87\x6c\x91\xed\xd1\xf0\xee\xf0\x92\xf9\x71\x92\x1a\xed\x95\xe4\xe5\x52\x09\x24\xb9\xc1\x52\xdf\xc8\x2f\x4e\x5d\x74\x6a\x72\xd3\x95\x1e\x58\xae\x7d\x74\x3f\xba\x9b\xc6\x11\xf1\x0b\xfb\x29\x4f\xcf\xa7\xbb\x8e\x82\x98\xd0\xe3\xfc\xdb\x52\xa3\xfc\x9a\xfc\x86\xdc\xe4\x31\xbe\xa2\xb2\x1d\xa6\x5b\x74\x55\xb6\xb3\xe2\x56\xde\x2e\x56\xbe\x4b\x4a\x58\x94\xdf\xf4\x98\xa8\xfc\xbd\x78\x5a\xea\xc4\x63\x6b\x2f\xa7\xe4\x16\x14\xac\xb0\xd6\x0c\x99\xef\xcb\xcc\xf5\xec\xd0\x3a\xdc\x7d\xae\x34\x58\xf5\x6d\x53\xe3\x84\x73\x49\xc7\x37\x2a\x76\xae\x36\x8b\x65\x4b\x45\x2b\x2c\x20\x40\xbb\xaf\x7a\x0c\xbf\x92\xb5\x47\x17\xf6\x19\x34\xf0\xeb\x07\x8f\xba\x44\xf6\x6e\x11\xd7\x77\x52\x9c\x8b\x1d\x0c\x3c\x48\x18\x55\x48\xc1\x81\xf6\x83\x9d\xda\x8c\xfb\x48\x82\x5b\x5f\x6a\x67\x79\x14\x04\x8c\x5e\xe4\x77\x26\x9c\xcf\xb4\xaa\xcd\x47\xce\xf8\xae\xea\xce\x16\x3b\xe9\x50\x73\x97\x96\x1c\x84\xdc\x29\xa3\x09\x61\xa7\xed\x13\x08\xbb\x74\x2a\x37\x8c\xe9\xa7\xd7\x0a\x28\x6d\x76\xd0\x8e\x2e\xd1\xea\x94\x86\x7c\xec\x57\x73\x70\x92\xbc\x87\x66\x34\xd1\xa5\xed\x05\x87\x5b\x02\x77\xe3\x48\xa4\x92\x2d\x7d\x1c\x8d\x74\x25\x7c\xe0\x32\xbb\x3b\x34\xb2\x7d\xeb\x47\x14\x07\x35\x87\xd5\x38\xa1\xc3\x7a\x64\xbb\x7b\x09\x9c\xe2\xa8\x23\xdb\xa3\xb3\xfd\x5a\xb4\x9e\x3f\x77\xb6\x23\x31\x0e\xe1\x45\x4a\xa2\x60\xa4\x9c\xef\x2f\xdb\x0b\x02\xef\xf9\x6d\x98\x0a\x6f\x76\xcb\x6a\x91\x60\x8b\x1d\x59\x26\x47\xbb\xcd\xd7\x8c\xa1\x26\xeb\x9a\xca\xe7\xd6\x59\x5b\x17\x93\xdd\x3c\x1f\x02\xed\x14\xd4\x8c\xbe\x28\x68\x27\xd2\x82\x6b\x3d\xe9\x04\x2d\x29\xaa\xe5\xc8\x84\x05\xef\xdb\x10\xb1\xda\xec\x31\x39\x5b\x6a\x57\xce\x49\x7b\xfd\x07\x9a\xc6\xab\xb6\x70\x2e\xa3\x27\xa0\xb6\xbb\x2f\xb0\x80\xbd\xf2\x91\x72\x42\x17\xc0\x7d\xa0\x12\x87\x70\xb4\x62\xb7\xb0\x37\x5d\x91\x30\x69\x2a\xb4\x11\x46\x97\x92\x63\x09\xe1\xb8\x4f\x70\x25\x4c\xe6\x26\x73\xc1\x58\x33\xc3\xa1\x9d\x1f\x37\xe8\xa8\x18\x8a\x4d\x4f\x7d\xf2\x77\x14\x6b\xe7\x18\xfb\x45\x39\x21\x06\xd8\x77\x41\x57\xaa\xe3\xdd\x89\x73\x71\xca\xab\x1e\x7b\xc5\x63\x87\x3b\xde\x5d\x9d\x35\x8e\x6f\x6b\xbd\x5c\xcf\x0e\xab\xec\x58\x6e\x2b\x94\x0f\x4a\x07\xef\xc4\x4e\x4f\x1e\xe5\x89\x56\xc6\x1c\x88\x72\xe1\xd7\x3c\xcc\x89\xcc\x65\x79\x93\x02\x30\xee\x34\x76\x54\x07\xad\x1b\x96\x77\xcc\xc7\xd1\x3e\xd9\x05\xe6\x6b\x53\xb8\xc6\x03\x52\x66\x1f\x15\x1f\xa1\xda\x67\xa8\x23\x69\x97\xf4\x2a\x79\xda\x72\xae\xaf\x44\xb0\xd4\x65\x2b\x27\x90\x41\x56\x37\xaa\xc2\xa9\x29\xa2\x8a\x63\x46\x43\xbd\xd8\xee\x8a\x7d\x22\x42\x47\xe7\x9a\x4c\xdf\x61\xbb\xb4\x9c\xb0\x78\x37\x35\xed\x42\xb6\x5a\xdf\x24\x80\xe8\x33\x2a\x39\x8b\x44\x63\x2e\x74\x24\x3f\x0c\x09\xf7\x0d\xa5\xd9\x82\x68\xcb\x37\xc3\x76\x7f\x11\x1b\xb7\xf3\xca\x0a\x86\xbe\x85\x51\x2b\x74\xd1\x78\xec\xe1\x70\x41\xe0\x02\xcb\xd6\xbd\x57\xa7\x8f\xc0\x52\xee\x57\xcb\xc5\x9e\x7e\xbb\x0c\xb2\xb1\x46\xaf\xb5\xd7\x2a\x16\xab\xb6\x5a\xb5\xd0\x2f\x9c\x89\xf7\x10\x1a\x44\x76\x69\x3d\xd5\x15\x5e\x1f\x41\xec\x13\x3f\x71\xa1\x5e\x99\x42\xe7\xcd\xf2\x4c\xed\x77\x18\x59\x1c\x13\x99\xb7\x78\x8f\x29\x59\x83\x68\xe6\xed\xb8\x40\xfa\xb1\x26\x69\x3e\x3b\x20\x36\xe8\x55\x94\xde\xa3\x38\xa7\x9c\x2f\xb0\xaf\x89\xd4\x35\x87\x10\xa3\xc8\x14\x25\x72\xc2\xf1\xf1\xbd\x58\x67\x93\x3e\x14\xdc\x23\xe1\x41\x75\x94\x15\xce\x93\x0c\xdd\x00\x24\x48\x72\xec\xdf\x20\xb6\xd6\x9c\xfd\x45\x20\xb1\xa5\x3e\x4a\x38\xd3\x7b\xde\xbf\x65\x18\x48\x04\x52\xfb\xbe\x5b\x1c\x99\x0f\x50\x9a\x23\x3e\x42\x43\xe4\x79\x21\x91\x9e\x6a\xe5\x49\x1c\xea\x81\x66\x8f\x28\x93\x20\x3c\x0e\x6b\xb5\x2a\x29\xe2\x4e\x72\x7b\x3c\x8c\x3e\xd4\xd7\x1a\xab\x66\x62\x4a\x24\xed\x4a\xf9\xdd\x6d\x80\xeb\x6a\x86\xc6\x1e\x32\xcb\xc9\x2e\xdc\x03\x7a\x03\x51\x8c\xf2\xe9\x90\x7d\x63\x60\xed\x2a\xe2\x07\xe9\x73\xc0\x67\xd2\x70\x70\x4e\xdb\x2f\x4c\x0e\x99\xba\x6a\x3f\xc6\x53\x5f\x66\xfc\x49\x56\xfa\xb2\x4d\xcc\x82\xec\x53\x22\x3e\x07\x9d\x19\xb6\x01\x14\x40\x12\xb1\x2d\xba\x81\x2d\xc2\x62\xf7\xae\x93\xb0\x1e\xa2\xcb\x61\x89\xa9\xca\x8b\x52\xa2\xdf\x57\x60\x39\x56\x57\xd4\xe8\x2c\x03\x3b\x95\x91\xcb\x6a\x1b\xaa\x37\x00\xcf\x3a\xdb\x6c\x32\xb2\x19\xda\x24\xab\xa9\x4b\x11\x34\x25\x9f\xbc\xae\x5c\x51\x5d\x36\xc3\xb0\x52\x49\xe2\x7c\x5a\x55\x2b\xa0\x29\x0c\x52\x18\x35\xfc\xb4\xf4\xeb\x73\x56\x59\xc5\x2d\x55\xea\xdb\x16\x71\x96\xca\x24\x95\x03\x1c\xc9\x2e\x53\x3e\xd7\x44\x50\x40\xb8\xae\xfb\xba\x2d\x4a\x3d\x27\x9c\x29\x07\x04\x82\xbc\x30\x24\x92\x10\x27\xfa\x22\x1b\xfa\x21\xfb\x84\xde\xae\xd6\x3c\xf2\xb3\x9c\x94\x67\xe8\x24\x9b\x84\x7a\x29\x3e\x58\xfc\x5c\xaa\x48\xa9\x86\xee\x29\x73\x3b\x74\x9a\x25\xdf\x9e\xc1\x01\x18\x9c\x65\xed\xed\xa1\x06\x53\x98\x5b\x97\xe3\x44\xcb\x72\x3d\xce\x03\x74\x8c\x29\x5a\x01\xc2\x68\xc5\x31\xf5\x37\x73\xa4\xd6\x5b\xfd\x81\x0b\xed\x0b\x6d\x70\x25\x52\x3f\xf8\x73\x01\xd3\xf4\xd5\x5f\x4e\x5f\xfb\xe4\x7b\x88\x46\x39\xf9\x8a\x85\xbf\x5f\xbe\x43\x5d\xac\xbf\x52\xab\xe8\x3d\x8e\x93\x08\xe6\x08\x27\x89\x17\xc0\xad\x93\x5c\xa6\xeb\x68\x82\x12\x1c\x46\x6c\x36\x2b\x9b\x5b\x21\x60\x6a\x58\x0e\x40\x62\x12\x99\x92\x93\xbf\x35\xca\xc4\x16\xd5\x29\x41\xbd\x51\x87\x3b\x1c\x04\x65\x5f\xbc\x54\x91\x72\x0c\x0e\x3f\x14\x2b\x15\xe0\xbd\xac\x16\x78\x6d\xaf\x38\xac\x27\xc6\x1e\xf6\xfc\x61\x03\x28\x24\xd2\xcc\x30\x94\xd2\x00\xb8\x29\x32\x9d\xf3\x5d\x0b\x1a\x93\x08\x44\x51\x72\x3f\x9b\x89\x6a\x01\xfa\xb3\xde\x02\x41\x60\x3e\x8a\x15\x63\xe7\xa8\xd8\x74\xac\xe0\x38\xf9\x5b\x3f\x3b\xbd\x60\x01\x31\x26\xfb\xee\xc7\x34\x0d\x33\x8a\xf2\x77\x0a\x94\x15\x18\x18\xf3\x37\x98\x86\x8e\xa9\xf5\xfb\x90\xee\x1d\xb7\x72\xfc\xf7\x5c\xc8\x95\x2e\x77\x8b\x64\x59\x95\xda\xc5\xee\xd2\xe3\x1d\x57\x5a\xa4\xf3\xdd\x26\x64\xe1\x6c\x46\x0f\xd5\x75\x7f\xfd\x45\x2c\x37\x8f\xf2\x5c\xe3\x52\xf9\x89\xe4\x16\x90\xe6\x50\x5f\xa3\x31\xf1\xe4\x9a\x23\x68\x0a\xcc\x67\x3f\xe8\x2a\xbf\xb9\x4b\xa9\xa5\x14\x33\xaa\xde\x53\x36\xb6\x26\x34\x40\xa5\x4a\xf5\x95\xc0\x07\x4e\x92\x68\x6b\x04\x79\x75\xad\x93\x7f\x3d\xb1\x15\x12\x4c\x25\xa1\x15\x16\x70\x3d\xfb\xe8\xa4\xd9\x6f\x3a\x86\xec\xba\x42\x69\x1c\xd5\xda\x43\x6a\x3c\xd9\xff\x3e\x76\xde\x09\x5d\x2e\xdf\x0c\x8b\xb7\x76\x29\x53\x35\xcf\x97\x91\xfc\xca\xe4\x72\xf9\x46\xef\x48\x77\x5f\x4a\xc0\xa9\xdc\x00\x95\xfa\x43\xb7\x4e\x72\xde\x97\x7c\xef\x2c\x49\xf9\x3e\xb0\xfa\xc1\x28\x5c\xb1\xa4\xbc\x23\xc3\x69\x43\xff\x5a\xd7\x26\xe5\xb7\xb2\x10\x57\x20\xc0\xe8\x37\x24\xf2\xbf\x77\xf9\xbf\xcf\x19\x0f\x17\xbc\x51\x3a\x7d\x00\xf2\x7c\x1b\xc6\xfa\x25\x2e\xda\x73\x86\x06\xae\x64\x8a\xc4\xc3\x2c\x64\x23\x29\x4f\xe0\xd7\x2a\x43\x9c\x37\xbc\xa9\x06\x9e\xdb\xd6\xc6\xba\x70\x1b\x7e\x43\xe7\xdc\xff\xea\x61\x8b\x7a\x31\xf6\x5d\x5d\x9e\x0c\x22\x1f\x26\x24\xd1\xdf\x6b\xc5\xeb\x5d\x82\xcf\x41\x0a\x73\xf7\x66\x50\x76\xd2\x0d\x6c\x8f\x2e\xcf\x86\xa7\x25\x99\xf7\x87\x9e\x75\x39\x59\x53\x1b\x2f\xfb\x7e\x31\xa9\x99\xb5\xf1\xf6\xfd\x12\x41\x21\xa5\xfc\x33\x59\xee\xd5\x61\xdd\xa8\x57\x74\x35\xa2\x9c\x64\x49\x99\x2d\xd8\xd3\x38\x99\xa7\xe8\xf4\x22\x2f\x27\x85\x08\xcd\x3e\xab\x4b\x99\xc4\x95\xfb\x60\xbd\xe7\xed\xdd\x64\x9e\xe4\xaa\xfe\xf2\xe4\xcb\x93\xff\x0f\x00\x00\xff\xff\xd5\x56\xea\x72\x8b\xa1\x00\x00")

func schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaJson,
		"schema.json",
	)
}

func schemaJson() (*asset, error) {
	bytes, err := schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0x20, 0xd5, 0x2b, 0x78, 0x7d, 0x25, 0xee, 0x75, 0x96, 0xdb, 0xdb, 0x40, 0x4f, 0x7e, 0x70, 0xbe, 0xf0, 0xcc, 0x93, 0x93, 0x2a, 0x86, 0x35, 0xb8, 0x1, 0x23, 0xc6, 0xf, 0x5f, 0xc1, 0x1c}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"schema.json": schemaJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"schema.json": &bintree{schemaJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
