// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	v1alpha5 "github.com/weaveworks/eksctl/pkg/apis/eksctl.io/v1alpha5"
)

// IAMRoleCreator is an autogenerated mock type for the IAMRoleCreator type
type IAMRoleCreator struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, podIdentityAssociation, addonName
func (_m *IAMRoleCreator) Create(ctx context.Context, podIdentityAssociation *v1alpha5.PodIdentityAssociation, addonName string) (string, error) {
	ret := _m.Called(ctx, podIdentityAssociation, addonName)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1alpha5.PodIdentityAssociation, string) (string, error)); ok {
		return rf(ctx, podIdentityAssociation, addonName)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *v1alpha5.PodIdentityAssociation, string) string); ok {
		r0 = rf(ctx, podIdentityAssociation, addonName)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, *v1alpha5.PodIdentityAssociation, string) error); ok {
		r1 = rf(ctx, podIdentityAssociation, addonName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIAMRoleCreator creates a new instance of IAMRoleCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIAMRoleCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *IAMRoleCreator {
	mock := &IAMRoleCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
